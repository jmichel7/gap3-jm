
def lxg321(indices,title):
    print title," ",indices[1-1],"(3)--(3)",indices[2-1],"--(3)",indices[3-1],"--(3)",indices[4-1],"\n",

ChevieData["G32"]["PrintDiagram"]=lxg321

ChevieData["G32"]["GeneratingRoots"]=[[0,0,-1,0],GAPMul(GAPDiv(ER(4),ER(3)),[1,1,1,0]),[0,1,0,0],GAPMul(GAPDiv(ER(4),ER(3)),[1,-1,0,-1])]

ChevieData["G32"]["EigenvaluesGeneratingReflections"]=[GAPDiv(1,3),GAPDiv(1,3),GAPDiv(1,3),GAPDiv(1,3)]

ChevieData["G32"]["HyperplaneRepresentatives"]=[1]

ChevieData["G32"]["BraidRelations"]=[[[1,2,1],[2,1,2]],[[2,3,2],[3,2,3]],[[3,4,3],[4,3,4]],[[1,3],[3,1]],[[1,4],[4,1]],[[2,4],[4,2]]]

ChevieData["G32"]["Size"]=155520

ChevieData["G32"]["ReflectionDegrees"]=[12,18,24,30]

ChevieData["G32"]["NrConjugacyClasses"]=102

def lxg322(s):
    t=[[[]],[[1]],[[1,2],[1,3]],[range(1,3+1),[1,3,4]],[range(1,4+1)]]
    return t[s+1-1]

ChevieData["G32"]["ParabolicRepresentatives"]=lxg322

ChevieData["G32"]["ClassNames"]=[".","1","12","31","11","121","421","123","131","1232","aa1211211","4311","c","3131","1211211","4211","42211","cc","a32","d","aaaa12","44211","1232z","aa123","a32zzzzz","aa121121","a","ccc","442211","dd14","211211","121zzzzz","aaaa1211211","zd","cccc","4211211","a32z","11434z","a32zzz","aa13","dd1","zzc","121z","aa12","1434zzzzz","1232zzzzz","44211211","1zzzzz","1434z","1232zzzz","ddd","11434zzzzz","3131z","11z","1232zzz","131zzzzz","aa1","zdd1","a32zzzz","dd","131z","zzdd","1434zz","1232zz","aa","1211214z","zc","12112114zz","aaaa","131zzz","1134z","a32zz","12112144z","1434zzz","121zz","11434zzzz","121zzzz","11434zzz","az","1211214zz","121121z","124z","12zz","zdd","11zzzz","12z","121121zz","13z","124zz","121zzz","11zzzzz","13zz","1z","z","13zzz","11zzz","1zz","1zzz","zzzzz","zzz","zz","zzzz"]

ChevieData["G32"]["WordsClassRepresentatives"]=map(lambda x: Replace(x,".",[],"1",[1],"2",[2],"3",[3],"4",[4],"z","ccccc","c",[4,3,2,1],"d",[1,2,4,3,2],"a",[1,2,1,3,2,1]),ChevieData["G32"]["ClassNames"])

ChevieData["G32"]["PowerMaps"]=[None,[1,5,2,14,2,31,9,27,9,19,40,4,18,4,5,47,14,35,10,60,57,36,72,26,50,69,65,67,9,53,1,81,4,62,18,5,64,80,10,57,88,35,87,14,86,59,2,85,26,72,84,27,92,97,19,40,40,95,64,94,57,99,86,59,69,65,67,92,65,9,92,50,97,47,81,80,87,36,85,85,101,57,69,100,97,97,102,4,40,31,69,92,65,101,14,2,85,5,102,1,102,101],[1,1,31,1,1,6,31,6,1,65,31,31,28,1,31,6,31,67,69,51,31,6,91,6,93,31,31,28,31,84,31,90,31,51,67,31,93,90,93,1,84,28,90,31,90,91,31,100,90,65,51,90,100,100,91,100,1,84,69,84,100,84,6,65,1,31,67,31,1,100,31,69,31,90,6,6,6,90,31,31,31,31,31,84,1,31,31,100,31,90,100,1,100,100,100,100,1,100,100,100,1,1],None,[1,5,15,14,2,6,29,24,9,19,21,17,94,4,3,22,12,101,10,34,11,16,25,8,23,27,26,100,7,30,31,43,44,20,102,47,46,45,55,57,58,99,32,33,38,37,36,54,52,72,51,49,53,48,39,61,40,41,64,62,56,60,76,59,69,83,1,71,65,70,68,50,79,78,77,63,75,74,73,86,87,89,66,84,97,80,81,95,82,90,93,92,91,99,88,98,85,96,94,100,102,101],None,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],None,None,None,[1,5,15,14,2,6,29,24,9,19,21,17,42,4,3,22,12,35,10,34,11,16,25,8,23,27,26,28,7,30,31,43,44,20,18,47,46,45,55,57,58,13,32,33,38,37,36,54,52,72,51,49,53,48,39,61,40,41,64,62,56,60,76,59,69,83,67,71,65,70,68,50,79,78,77,63,75,74,73,86,87,89,66,84,97,80,81,95,82,90,93,92,91,99,88,98,85,96,94,100,102,101],None,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],None,None,None,[1,5,15,14,2,6,29,24,9,19,21,17,42,4,3,22,12,35,10,34,11,16,25,8,23,27,26,28,7,30,31,43,44,20,18,47,46,45,55,57,58,13,32,33,38,37,36,54,52,72,51,49,53,48,39,61,40,41,64,62,56,60,76,59,69,83,67,71,65,70,68,50,79,78,77,63,75,74,73,86,87,89,66,84,97,80,81,95,82,90,93,92,91,99,88,98,85,96,94,100,102,101],None,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],None,None,None,[1,5,15,14,2,6,29,24,9,19,21,17,42,4,3,22,12,35,10,34,11,16,25,8,23,27,26,28,7,30,31,43,44,20,18,47,46,45,55,57,58,13,32,33,38,37,36,54,52,72,51,49,53,48,39,61,40,41,64,62,56,60,76,59,69,83,67,71,65,70,68,50,79,78,77,63,75,74,73,86,87,89,66,84,97,80,81,95,82,90,93,92,91,99,88,98,85,96,94,100,102,101],None,None,None,None,None,[1,5,15,14,2,6,29,24,9,19,21,17,42,4,3,22,12,35,10,34,11,16,25,8,23,27,26,28,7,30,31,43,44,20,18,47,46,45,55,57,58,13,32,33,38,37,36,54,52,72,51,49,53,48,39,61,40,41,64,62,56,60,76,59,69,83,67,71,65,70,68,50,79,78,77,63,75,74,73,86,87,89,66,84,97,80,81,95,82,90,93,92,91,99,88,98,85,96,94,100,102,101]]

ChevieData["G32"]["ClassInfo"]={"classtext":ChevieData["G32"]["WordsClassRepresentatives"],
    "classnames":ChevieData["G32"]["ClassNames"],
    "classparams":ChevieData["G32"]["ClassNames"],
    "orders":[1,3,6,3,3,4,6,12,3,9,6,6,30,3,6,12,6,15,9,24,6,12,18,12,18,6,6,10,6,12,2,12,6,24,15,6,18,12,18,3,12,30,12,6,12,18,6,6,12,9,8,12,6,6,18,6,3,12,9,12,6,12,12,9,3,6,5,6,3,6,6,9,6,12,12,12,12,12,6,6,6,6,6,4,3,6,6,6,6,4,6,3,6,6,6,6,3,6,6,2,3,3],
    "classes":[1,40,360,240,40,540,1440,2160,480,2880,1440,1440,5184,240,360,2160,1440,5184,2880,6480,1440,2160,2880,2160,2880,360,360,5184,1440,4320,90,540,1440,6480,5184,360,2880,2160,2880,480,4320,5184,540,1440,2160,2880,360,40,2160,2880,6480,2160,240,40,2880,480,480,4320,2880,540,480,540,2160,2880,40,360,5184,1440,40,480,1440,2880,360,2160,540,2160,540,2160,360,360,90,1440,360,540,40,360,90,240,1440,540,40,240,40,1,240,40,40,40,1,1,1,1]}

def lxg323():
    res={"charparams":[[1,0],[1,80],[1,40],[4,61],[4,21],[4,11],[4,41],[4,51],[4,1],[5,36],[5,44],[5,4],[5,12],[5,52],[5,20],[6,48],[6,8],[6,28],[10,30],[10,2],[10,34],[10,42],[10,10],[10,14],[15,24],[15,6],[15,8],[15,16],[15,38],[15,22],[20,33],[20,12],[20,13],[20,9,1],[20,35],[20,29,1],[20,3],[20,25],[20,31],[20,9,2],[20,17],[20,29,2],[20,21],[20,7],[20,19],[20,5],[20,20],[20,16],[24,6],[24,26],[24,16],[30,12,2],[30,12,1],[30,8],[30,28],[30,24],[30,4],[30,20,2],[30,20,1],[30,16],[36,7],[36,27],[36,17],[36,5],[36,15],[36,25],[40,24],[40,14],[40,10],[40,18],[40,22],[40,8],[45,6],[45,14],[45,22],[45,18],[45,10],[45,26],[60,15,2],[60,12],[60,7],[60,15,1],[60,17],[60,11,1],[60,9],[60,19],[60,13],[60,11,2],[60,20],[60,16],[64,18],[64,21],[64,8],[64,16],[64,13],[64,11],[80,9],[80,13],[80,17],[81,12],[81,14],[81,10]],
        "opdam":Permutation("( 93, 96)( 94, 95)(100,101,102)"),
        "extRefl":[1,9,17,5,3]}
    res["b"]=map(lambda x: x[2-1],res["charparams"])
    return res

ChevieData["G32"]["CharInfo"]=lxg323

def lxg324(para,root):
    u=para[1-1][1-1]
    v=para[1-1][2-1]
    w=para[1-1][3-1]
    c=GAPMul(u,v)**0
    f1=lambda u: map(lambda i: u**len(i),ChevieData["G32"]["WordsClassRepresentatives"])
    def f4(v,w):
        return [4,v+GAPMul(3,w),GAPMul(w,GAPMul(2,w)+v),GAPMul(2,w),v**2+GAPMul(3,w**2),GAPMul(2,w**3),GAPMul(w**2,w+GAPMul(2,v)),GAPMul(w**2,w+v),GAPMul(w,GAPMul(v,w)+v**2),w**4,GAPMul(-w**11,-w+v),GAPMul(w**2,GAPMul(v,w)+v**2),GAPMul(v,w**3),GAPMul(2,w**2),GAPMul(-w**3,-w+v),GAPMul(w**3,w+v),GAPMul(-w**2,-w+v),GAPMul(-v**2,w**6),w**8,0,GAPMul(w**17,GAPMul(v**8,w)+v**9),GAPMul(w**3,v**2+w**2),GAPMul(-v**5,w**19),GAPMul(w**10,w+v),GAPMul(-v**25,w**83),GAPMul(-w**11,-w+v),GAPMul(-w**4,-w+v),GAPMul(v**3,w**9),GAPMul(-w**3,-w+v),0,GAPMul(-2,w**3),GAPMul(-2,v**25),GAPMul(-w**19,-w+v),0,GAPMul(-v**4,w**12),GAPMul(-w**4,-w+v),GAPMul(-v**5,w**23),GAPMul(-v**5,w**18),GAPMul(-v**15,w**53),GAPMul(w**9,w+v),0,GAPMul(v**11,w**33),GAPMul(-2,v**5),GAPMul(w**9,GAPMul(v,w)+v**2),GAPMul(-v**25,w**78),GAPMul(-v**25,w**79),GAPMul(-w**5,-w+v),GAPMul(-v**25,w**75),GAPMul(-v**5,w**18),GAPMul(v**20,w**64),0,GAPMul(-v**25,w**78),GAPMul(-2,v**5),GAPMul(-v**5,w**15),GAPMul(-v**15,w**49),GAPMul(-v**25,w**76),GAPMul(w**8,GAPMul(2,v**4)+v**5),0,GAPMul(v**20,w**68),0,GAPMul(-v**5,w**16),0,GAPMul(v**10,w**33),GAPMul(v**10,w**34),GAPMul(w**8,GAPMul(3,v**4)+w**4),GAPMul(v**5,w**19),GAPMul(-v**6,w**18),GAPMul(-v**10,w**34),GAPMul(w**16,GAPMul(3,v**8)+w**8),GAPMul(-v**15,w**46),GAPMul(-v**5,w**17),GAPMul(v**10,w**38),GAPMul(v**5,w**20),GAPMul(-v**15,w**48),GAPMul(2,v**10),GAPMul(v**20,w**63),GAPMul(2,v**20),GAPMul(-v**15,w**48),GAPMul(v**5,w**19),GAPMul(-v**10,w**34),GAPMul(2,v**5),GAPMul(-v**5,w**17),GAPMul(v**10,w**31),0,GAPMul(v**20,w**60),GAPMul(-v**5,w**16),GAPMul(-2,v**10),GAPMul(-2,v**5),GAPMul(v**10,w**32),GAPMul(-2,v**15),GAPMul(-v**25,w**75),GAPMul(2,v**10),GAPMul(-v**5,w**15),GAPMul(-4,v**5),GAPMul(-2,v**15),GAPMul(-v**15,w**45),GAPMul(v**10,w**30),GAPMul(-v**15,w**45),GAPMul(-4,v**25),GAPMul(-4,v**15),GAPMul(4,v**10),GAPMul(4,v**20)]
    
    
    def f5(u,v,w):
        return [5,GAPMul(2,u)+GAPMul(3,w),GAPMul(w,GAPMul(2,u)+w),GAPMul(2,u)+u**2,GAPMul(2,u**2)+GAPMul(3,w**2),w**3,GAPMul(w,GAPMul(u,w)+u**2),GAPMul(u,w**2),GAPMul(u,w**2)+GAPMul(u**2,w),GAPMul(-u**2,w**2),GAPMul(u**4,w**9),GAPMul(w,GAPMul(u,w**2)+u**3),0,GAPMul(2,u**2)+u**4,GAPMul(w**3,GAPMul(-2,u**3)-GAPMul(2,u**4)+w**4),w**4,GAPMul(w,GAPMul(-u,w**3)-GAPMul(u**2,w**2)-GAPMul(u**3,w)-u**4+w**4),0,GAPMul(-u**4,w**4),GAPMul(-u**2,w**3),GAPMul(u**8,w**13),w**5,GAPMul(-u**10,w**14),GAPMul(u**5,w**10),GAPMul(-u**44,w**64),GAPMul(u**4,w**9),GAPMul(-w**3,u**2),0,GAPMul(w,GAPMul(u,w)+u**2),GAPMul(u**6,w**6),GAPMul(w**3,GAPMul(-4,u**3)+w**3),GAPMul(u**40,w**63),GAPMul(u**8,w**15),GAPMul(-u**10,w**15),0,GAPMul(w**3,GAPMul(-2,u**3)-GAPMul(2,u**4)+w**4),GAPMul(-u**12,w**16),GAPMul(u**8,w**17),GAPMul(-u**28,w**40),GAPMul(u**4,w**6),GAPMul(u**5,w**6),0,GAPMul(u**8,w**15),GAPMul(w**7,u**4),GAPMul(u**40,w**64),GAPMul(-u**42,w**62),GAPMul(w**3,w**5-GAPMul(2,u**3)-GAPMul(2,u**5)),GAPMul(w**60,u**40),GAPMul(u**8,w**16),GAPMul(-u**34,w**50),GAPMul(-u**6,w**9),GAPMul(u**40,w**65),GAPMul(u**8,w**12),GAPMul(u**8,w**12),GAPMul(-u**26,w**38),GAPMul(u**40,w**60),GAPMul(u**4,w**6),GAPMul(u**13,w**18),GAPMul(-u**36,w**52),GAPMul(u**4,w**6),GAPMul(u**8,w**12),GAPMul(u**20,w**30),GAPMul(u**16,w**28),GAPMul(-u**18,w**26),GAPMul(u**4,w**6),GAPMul(u**8,w**15),0,GAPMul(u**16,w**27),GAPMul(u**8,w**12),GAPMul(u**24,w**36),GAPMul(u**8,w**13),GAPMul(-u**20,w**28),GAPMul(u**8,w**15),GAPMul(u**24,w**40),GAPMul(u**16,w**27),GAPMul(u**32,w**53),GAPMul(u**32,w**51),GAPMul(u**24,w**41),GAPMul(-w**15,u**10),GAPMul(u**16,w**27),GAPMul(u**8,w**15),GAPMul(u**8,w**13),GAPMul(w**25,u**16),GAPMul(u**12,w**18),GAPMul(u**32,w**48),GAPMul(w**13,u**8),GAPMul(u**16,w**27),GAPMul(u**8,w**12),GAPMul(u**16,w**25),GAPMul(u**24,w**39),GAPMul(u**40,w**60),GAPMul(u**16,w**24),GAPMul(w**12,u**8),GAPMul(5,u**8),GAPMul(u**24,w**36),GAPMul(u**24,w**36),GAPMul(w**24,u**16),GAPMul(w**36,u**24),GAPMul(5,u**40),GAPMul(5,u**24),GAPMul(5,u**16),GAPMul(5,u**32)]
    
    
    def f6(v,w):
        return [6,GAPMul(3,v)+GAPMul(3,w),w+v**2,GAPMul(4,v)+v**2,GAPMul(3,v**2)+GAPMul(3,w**2),GAPMul(w+v,v**2-GAPMul(v,w)+w**2),GAPMul(2,v),GAPMul(v,w),GAPMul(w+v,GAPMul(v,w)+v**2),0,GAPMul(w**4,v**4),GAPMul(v,w),GAPMul(v**2,w**2),GAPMul(4,v**2)+v**4,GAPMul(w+v,-w**3+GAPMul(v,w**2)),GAPMul(v,w),GAPMul(-v**2,w**2),GAPMul(w**4,v**4),0,0,GAPMul(v**8,w**8),GAPMul(v**2,w**2),0,GAPMul(v**5,w**5),0,GAPMul(w**4,v**4),GAPMul(-v**2,w**2),GAPMul(v**6,w**6),GAPMul(-v,w),GAPMul(v**5,w**7)+GAPMul(v**7,w**5),GAPMul(-4,v**3)+v**6,GAPMul(v**50,w**50),GAPMul(v**8,w**8),0,GAPMul(v**8,w**8),GAPMul(v,w),0,GAPMul(v**12,w**12),0,GAPMul(w**4,v**4),GAPMul(v**5,w**5),GAPMul(v**22,w**22),GAPMul(v**10,w**10),GAPMul(w**4,v**4),GAPMul(v**51,w**51),0,GAPMul(v**2,w**2),GAPMul(3,v**50),GAPMul(v**11,w**11),0,0,GAPMul(v**52,w**52),GAPMul(v**10,w**10),GAPMul(3,v**10),0,GAPMul(v**50,w**50),GAPMul(w**4,v**4),GAPMul(v**15,w**15),0,GAPMul(2,v**5),GAPMul(v**10,w**10),GAPMul(2,v**25),GAPMul(v**21,w**21),0,GAPMul(3,w**4),GAPMul(v**11,w**11),GAPMul(v**12,w**12),GAPMul(v**21,w**21),GAPMul(3,v**8),GAPMul(v**30,w**30),GAPMul(v**11,w**11),0,GAPMul(v**12,w**12),GAPMul(v**31,w**31),GAPMul(v**20,w**20),GAPMul(v**42,w**42),GAPMul(v**40,w**40),GAPMul(v**32,w**32),GAPMul(-v**12,w**12),GAPMul(v**21,w**21),GAPMul(v**10,w**10),GAPMul(2,v**11),GAPMul(v**20,w**20),GAPMul(2,v**15),GAPMul(3,v**40),GAPMul(v**10,w**10),GAPMul(v**20,w**20),GAPMul(v**10,w**10),GAPMul(2,v**21),GAPMul(v**30,w**30),GAPMul(3,v**50),GAPMul(v**20,w**20),GAPMul(3,v**10),GAPMul(6,v**10),GAPMul(v**30,w**30),GAPMul(3,v**30),GAPMul(3,v**20),GAPMul(3,v**30),GAPMul(6,v**50),GAPMul(6,v**30),GAPMul(6,v**20),GAPMul(6,v**40)]
    
    
    def f10(u,v,w):
        return [10,u+GAPMul(6,v),GAPMul(v,GAPMul(2,w)+GAPMul(3,v)),GAPMul(2,u)+GAPMul(4,v),u**2+GAPMul(6,v**2),GAPMul(v,GAPMul(-u,w)+GAPMul(3,v**2)),GAPMul(v,GAPMul(u,v)+w**2),GAPMul(v**2,w+v),GAPMul(u,v**2)+GAPMul(2,v),v**4,GAPMul(v**8,GAPMul(-v,u**2)-GAPMul(v**2,u**2)+GAPMul(v**5,u**2)-GAPMul(v**3,w**8)-GAPMul(v**4,w**7)+GAPMul(v**7,w**4)),GAPMul(v,w**3+GAPMul(u**2,v)),0,GAPMul(2,u**2)+GAPMul(4,v**2),GAPMul(v**2,GAPMul(u**2,w**3)+GAPMul(u**2,v)-GAPMul(2,v)-GAPMul(2,v**2)+GAPMul(3,v**5)),GAPMul(v**2,GAPMul(-u,w)+GAPMul(u,v)),GAPMul(v,GAPMul(u,v**3)-w**4+GAPMul(u**2,w**2)-GAPMul(v,w**3)+v**4),0,v**8,0,GAPMul(v**13,GAPMul(u**4,w**9)+GAPMul(v,u**4)),GAPMul(v**3,GAPMul(-u,w)+u**2),GAPMul(u**2,v**16),GAPMul(v**10,w+v),GAPMul(u**10,v**68),GAPMul(v**8,GAPMul(-2,v)+GAPMul(v**4,u**2)-GAPMul(2,v**3)+GAPMul(v**6,w**4)),GAPMul(v**3,GAPMul(2,u)-GAPMul(v,w**2)+v**3),0,GAPMul(v,-w**5+GAPMul(u**2,v)-GAPMul(2,v**2)+GAPMul(2,v**3)-GAPMul(v**4,w)+v**5),GAPMul(-u,v**6),GAPMul(v**2,GAPMul(3,u**2)-GAPMul(4,v)+GAPMul(3,v**4)),GAPMul(v**61,w**30),GAPMul(v**14,GAPMul(-v,u**4)-GAPMul(v**2,u**4)+GAPMul(v**5,u**4)-GAPMul(v**5,w**12)-GAPMul(v**6,w**11)+GAPMul(v**9,w**8)),0,0,GAPMul(v**3,GAPMul(u,v**3)+GAPMul(3,u**2)-GAPMul(2,w**4)-GAPMul(2,v)+GAPMul(w,v**3)),GAPMul(u**2,v**20),GAPMul(u**2,v**15),GAPMul(u**6,v**44),GAPMul(v**6,GAPMul(u**2,w**6)+GAPMul(2,v)),GAPMul(-u,v**6),0,GAPMul(v**13,w**6),GAPMul(v**7,GAPMul(u**2,w**5)+GAPMul(v,u**2)),GAPMul(v**62,w**30),GAPMul(u**10,v**64),GAPMul(v**3,GAPMul(3,u**2)+GAPMul(u**2,v**3)-GAPMul(2,w**5)-GAPMul(2,v**2)+GAPMul(v**3,w**2)),GAPMul(v**60,u**10),GAPMul(v**14,w**6),GAPMul(u**8,v**52),0,GAPMul(u**10,v**63),GAPMul(u**2,v**12),GAPMul(u**2,v**12),GAPMul(u**6,v**40),GAPMul(u**10,v**60),GAPMul(v**6,GAPMul(2,u**2)+GAPMul(3,v)),GAPMul(-u**3,v**18),GAPMul(u**8,v**56),GAPMul(-2,u),GAPMul(u**2,v**12),GAPMul(-2,u**5),GAPMul(v**26,w**12),GAPMul(u**4,v**28),GAPMul(v**6,GAPMul(6,u**2)+GAPMul(3,v**2)),GAPMul(u**2,v**15),0,GAPMul(u**4,v**27),GAPMul(v**12,GAPMul(6,u**4)+GAPMul(3,v**4)),GAPMul(u**6,v**36),GAPMul(u**2,v**13),GAPMul(u**4,v**32),GAPMul(u**2,v**15),GAPMul(v**38,w**18),GAPMul(v**25,w**12),GAPMul(u**8,v**51),GAPMul(v**49,w**24),GAPMul(u**6,v**39),GAPMul(u**2,v**15),GAPMul(u**4,v**27),GAPMul(u**2,v**14),GAPMul(u**2,v**13),GAPMul(v**25,u**4),GAPMul(-2,u**3),GAPMul(u**8,v**48),GAPMul(v**13,u**2),GAPMul(u**4,v**26),GAPMul(u**2,v**12),GAPMul(u**4,v**25),GAPMul(v**37,w**18),GAPMul(u**10,v**60),GAPMul(u**4,v**24),GAPMul(v**12,u**2),GAPMul(10,u**2),GAPMul(u**6,v**36),GAPMul(u**6,v**36),GAPMul(v**24,u**4),GAPMul(v**36,u**6),GAPMul(10,u**10),GAPMul(10,u**6),GAPMul(10,u**4),GAPMul(10,u**8)]
    
    
    def f15(u,v,w):
        return [15,GAPMul(3,u)+GAPMul(6,v),v+w**2,GAPMul(2,u)+GAPMul(2,u),GAPMul(3,u**2)+GAPMul(6,v**2),GAPMul(-3,u)+v**3,GAPMul(v+w,v**2+w**2),GAPMul(-u,v),GAPMul(u,v**2)+GAPMul(u,w**2),0,GAPMul(u**2,v**4),GAPMul(v**2-GAPMul(v,w)+w**2,v+w**2),0,GAPMul(2,u**2)+GAPMul(2,u**2),GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,v**3)-GAPMul(2,v**4)+v**7,GAPMul(-u,v)-GAPMul(u,v**2)-GAPMul(u**2,v)+v**4,GAPMul(u,v**2)-GAPMul(v,w**4)+GAPMul(u**2,v)-GAPMul(v**4,w)+v**5,0,0,GAPMul(u,v**2),GAPMul(u**4,v**8),GAPMul(-u,v)-GAPMul(u,v**3)-GAPMul(u**3,v)+v**5,0,GAPMul(-u**5,v**5),0,GAPMul(u**2,v**4),GAPMul(u,v**2),0,GAPMul(-v,w**5)+GAPMul(3,u**2)-GAPMul(2,v**3)+GAPMul(u**4,v**2)-GAPMul(v**5,w)+v**6,GAPMul(u**2,v**4),GAPMul(9,u**2)-GAPMul(4,v**3)+v**6,GAPMul(-u**20,v**40),GAPMul(u**4,v**8),GAPMul(u**5,v**10),0,GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,v**3)-GAPMul(2,v**4)+v**7,0,GAPMul(-u**4,v**8),0,GAPMul(u**2,v**4),GAPMul(u**2,v**4),0,GAPMul(-u**4,v**8),GAPMul(u**2,v**4),GAPMul(-u**20,v**40),0,GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,v**3)+GAPMul(3,u**4)-GAPMul(2,v**5)+v**8,GAPMul(3,u**20),GAPMul(-u**4,v**8),0,GAPMul(u**3,v**6),GAPMul(-u**20,v**40),GAPMul(u**4,v**8),GAPMul(3,u**4),0,GAPMul(u**20,v**40),GAPMul(u**2,v**4),GAPMul(u**6,v**12),0,GAPMul(3,u**2),GAPMul(u**4,v**8),GAPMul(3,u**10),GAPMul(-u**8,v**16),0,GAPMul(3,u**2),GAPMul(u**4,v**8),0,GAPMul(u**8,v**16),GAPMul(3,u**4),GAPMul(u**12,v**24),GAPMul(u**4,v**8),0,GAPMul(u**4,v**8),GAPMul(-u**12,v**24),GAPMul(-u**8,v**16),GAPMul(-u**16,v**32),GAPMul(-u**16,v**32),GAPMul(-u**12,v**24),GAPMul(u**5,v**10),GAPMul(u**8,v**16),GAPMul(u**4,v**8),GAPMul(u**4,v**8),GAPMul(u**8,v**16),GAPMul(3,u**6),GAPMul(3,u**16),GAPMul(u**4,v**8),GAPMul(u**8,v**16),GAPMul(u**4,v**8),GAPMul(u**8,v**16),GAPMul(-u**12,v**24),GAPMul(3,u**20),GAPMul(u**8,v**16),GAPMul(3,u**4),GAPMul(15,u**4),GAPMul(u**12,v**24),GAPMul(3,u**12),GAPMul(3,u**8),GAPMul(3,u**12),GAPMul(15,u**20),GAPMul(15,u**12),GAPMul(15,u**8),GAPMul(15,u**16)]
    
    
    def f15b(u,v,w):
        return [15,GAPMul(9,u)+GAPMul(3,v),GAPMul(2,u),GAPMul(4,u)+GAPMul(4,u),GAPMul(9,u**2)+GAPMul(3,v**2),GAPMul(u,GAPMul(-v,w)+GAPMul(4,u**2)),GAPMul(2,u),GAPMul(u**2,v+w),GAPMul(2,u)+GAPMul(2,u),GAPMul(u**2,GAPMul(-v,w)+u**2),GAPMul(u**8,GAPMul(v**5,w**6)+GAPMul(v**6,w**5)-GAPMul(u,v**3)+GAPMul(u,v**5)-GAPMul(u,v**7)-GAPMul(w**6,v**3)-GAPMul(w**3,v**6)-GAPMul(u**3,v**8)-GAPMul(u**3,w**8)-GAPMul(u**4,v**7)-GAPMul(u**4,w**7)+GAPMul(u**5,v**3)),GAPMul(u,GAPMul(v,w**2)+GAPMul(v**2,w)),0,GAPMul(4,u**2)+GAPMul(4,u**2),GAPMul(u**2,GAPMul(w**3,v**2)+GAPMul(v**3,w**2)-GAPMul(2,u)-GAPMul(2,u)-GAPMul(2,u**2)-GAPMul(2,u**2)+GAPMul(4,u**5)),GAPMul(u**2,GAPMul(-v,w)+GAPMul(u,v)),GAPMul(u,GAPMul(-v,w**3)+GAPMul(v**2,w**2)-GAPMul(v**3,w)-GAPMul(v**3,u)-GAPMul(w**3,u)-GAPMul(2,u**2)+GAPMul(u**2,v**2)),0,GAPMul(u**4,GAPMul(-v,w)+u**2),GAPMul(-u**3,v),GAPMul(u**13,GAPMul(v**6,w**7)+GAPMul(v**7,w**6)),GAPMul(u**3,GAPMul(-v,w)+v**2),GAPMul(u**14,v**4),GAPMul(u**10,v**5+w**5),GAPMul(u**64,v**20),GAPMul(u**8,GAPMul(3,v**5)-GAPMul(2,u)-GAPMul(2,u)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**4,v**3)),GAPMul(u**4,-v**2-w**2+u**2),0,GAPMul(u,GAPMul(-w**3,v**2)-GAPMul(v**3,w**2)+GAPMul(u,v**2)-GAPMul(u**2,v)-GAPMul(u**2,v**2)-GAPMul(u**2,v**3)-GAPMul(u**2,w**3)+GAPMul(2,u**3)-GAPMul(u**4,v)-GAPMul(u**4,w)+GAPMul(2,u**5)),GAPMul(-u**8,v**2),GAPMul(u**2,GAPMul(3,v**2)-GAPMul(4,v**3)-GAPMul(4,w**3)+GAPMul(4,u**4)),GAPMul(u**61,v**20),GAPMul(u**14,GAPMul(v**8,w**9)+GAPMul(v**9,w**8)-GAPMul(u,v**6)+GAPMul(u,v**8)-GAPMul(u,v**10)-GAPMul(u**2,v**6)-GAPMul(u**2,v**9)+GAPMul(u**5,v**6)-GAPMul(u**5,v**12)-GAPMul(u**5,w**12)-GAPMul(u**6,v**11)-GAPMul(u**6,w**11)+GAPMul(u**9,v**8)),GAPMul(-u**15,v**5),0,GAPMul(u**3,GAPMul(-2,v)+GAPMul(3,v**2)-GAPMul(2,v**3)-GAPMul(2,v**3)-GAPMul(2,w**3)+GAPMul(u**3,v)),GAPMul(u**16,v**4),GAPMul(u**15,v**4),GAPMul(u**40,v**12),GAPMul(u**6,GAPMul(2,v**4)+GAPMul(2,u)),GAPMul(-u**7,v**2),0,GAPMul(u**13,v**4),GAPMul(u**7,GAPMul(v**3,w**4)+GAPMul(v**4,w**3)),GAPMul(u**62,v**20),GAPMul(u**62,v**20),GAPMul(u**3,GAPMul(-2,w**3)-GAPMul(2,v**3)+GAPMul(3,u)-GAPMul(2,u**2)-GAPMul(2,u**2)+GAPMul(u**3,v**2)),GAPMul(3,u**60),GAPMul(u**14,v**4),GAPMul(u**50,v**16),GAPMul(-u**9,v**3),GAPMul(u**63,v**20),GAPMul(u**12,v**4),GAPMul(3,u**12),GAPMul(u**38,v**12),GAPMul(u**60,v**20),GAPMul(u**6,GAPMul(2,v**3)+GAPMul(2,v**4)),GAPMul(-u**19,v**6),GAPMul(u**52,v**16),GAPMul(-u**6,v**2),GAPMul(u**12,v**4),GAPMul(-u**30,v**10),GAPMul(u**26,v**8),GAPMul(u**26,v**8),GAPMul(u**6,GAPMul(8,v**3)+GAPMul(3,u**2)),GAPMul(u**15,v**4),0,GAPMul(u**27,v**8),GAPMul(u**12,GAPMul(8,v**6)+GAPMul(3,u**4)),GAPMul(u**36,v**12),GAPMul(u**13,v**4),GAPMul(u**28,v**8),GAPMul(u**15,v**4),GAPMul(u**38,v**12),GAPMul(u**25,v**8),GAPMul(u**51,v**16),GAPMul(u**49,v**16),GAPMul(u**39,v**12),GAPMul(u**16,v**4),GAPMul(u**27,v**8),GAPMul(u**14,v**4),GAPMul(2,u**13),GAPMul(2,u**25),GAPMul(-u**18,v**6),GAPMul(3,u**48),GAPMul(2,u**13),GAPMul(u**26,v**8),GAPMul(u**12,v**4),GAPMul(2,u**25),GAPMul(u**37,v**12),GAPMul(3,u**60),GAPMul(u**24,v**8),GAPMul(3,u**12),GAPMul(15,u**12),GAPMul(u**36,v**12),GAPMul(3,u**36),GAPMul(3,u**24),GAPMul(3,u**36),GAPMul(15,u**60),GAPMul(15,u**36),GAPMul(15,u**24),GAPMul(15,u**48)]
    
    
    def f20a(u,v,w):
        return [20,GAPMul(2,u)+GAPMul(9,v),GAPMul(v+GAPMul(2,w),GAPMul(2,v)+w),GAPMul(2,v+w),GAPMul(2,u**2)+GAPMul(9,v**2),GAPMul(-2,u)+GAPMul(2,v**3),GAPMul(u,v)+GAPMul(3,v),GAPMul(v,w),GAPMul(u,v**2)+GAPMul(u,w**2),GAPMul(-v**2,w**2),GAPMul(v**4,w**4),GAPMul(2,v)+GAPMul(u**2,v),0,GAPMul(2,v**2+w**2),GAPMul(2,u**2)+GAPMul(2,u**2)-GAPMul(5,v**3)-GAPMul(5,v**4)+GAPMul(2,v**7),GAPMul(-v+w,GAPMul(u,v)-v**3-w**3),GAPMul(-u,v)-GAPMul(u,v**3)-GAPMul(v,w**4)+GAPMul(u**2,v)-GAPMul(w**3,v**2)-GAPMul(v**3,w**2)-GAPMul(v**4,w)+v**5,0,GAPMul(-v**4,w**4),0,GAPMul(v**8,w**8),GAPMul(-v**2+w**2,GAPMul(u,v)-v**3-w**3),GAPMul(u**2,v**11),GAPMul(v**5,w**5),GAPMul(u**10,v**49),GAPMul(v**4,w**4),GAPMul(v**2,w**2),0,GAPMul(v**2+w**2,v**4-GAPMul(2,v**3)+GAPMul(u**2,v**2)-GAPMul(u**2,v)-GAPMul(2,v)+GAPMul(u**2,w**2)),0,GAPMul(6,u**2)-GAPMul(10,v**3)+GAPMul(2,v**6),GAPMul(2,u**10),GAPMul(w**8,v**8),0,0,GAPMul(-2,u)+GAPMul(v,w**6)-GAPMul(4,v**3)-GAPMul(4,v**4)+GAPMul(v**6,w),GAPMul(u**2,v**13),GAPMul(u**2,v**2+w**2),GAPMul(u**6,v**31),GAPMul(v**4,w**4),0,0,GAPMul(2,u**2),GAPMul(v**4,w**4),GAPMul(u**10,v+w),GAPMul(u**10,v**47),GAPMul(3,u**2)-GAPMul(2,w**3)+GAPMul(3,u**2)-GAPMul(4,v**3)-GAPMul(4,v**5)+GAPMul(v**6,w**2),GAPMul(-u**10,v**45),GAPMul(u**2,v+w),GAPMul(-u**8,v**38),0,GAPMul(u**10,v**2+w**2),GAPMul(-2,u**2),GAPMul(-u**2,v**9),GAPMul(u**6,v**29),GAPMul(-u**10,v**45),GAPMul(v**4,w**4),0,GAPMul(-u**8,v**40),0,GAPMul(-u**2,v**9),0,GAPMul(-u**4,v+w),GAPMul(-u**4,v**20),GAPMul(v**4,w**4),GAPMul(-u**2,v**9),0,GAPMul(u**4,v**18),GAPMul(v**8,w**8),GAPMul(-u**6,v**27),GAPMul(-u**2,v**9),GAPMul(-u**4,v**22),GAPMul(-u**2,v**9),GAPMul(u**6,v+w),GAPMul(-2,u**4),GAPMul(-u**8,v**2+w**2),GAPMul(-2,u**8),GAPMul(u**6,v**2+w**2),GAPMul(-u**2,v**11),GAPMul(u**4,v**18),GAPMul(-2,u**2),GAPMul(-u**2,v**9),GAPMul(u**4,v**18),0,GAPMul(u**8,v**36),GAPMul(-u**2,v**9),GAPMul(2,u**4),GAPMul(-2,u**2),GAPMul(u**4,v**18),GAPMul(2,u**6),GAPMul(-u**10,v**45),GAPMul(2,u**4),GAPMul(-u**2,v**9),GAPMul(-20,u**2),GAPMul(-2,u**6),GAPMul(-u**6,v**27),GAPMul(u**4,v**18),GAPMul(-u**6,v**27),GAPMul(-20,u**10),GAPMul(-20,u**6),GAPMul(20,u**4),GAPMul(20,u**8)]
    
    
    def f20b(u,v,w):
        return [20,GAPMul(8,u)+GAPMul(6,v),GAPMul(2,u)+GAPMul(2,u),GAPMul(4,u)+GAPMul(4,u),GAPMul(8,u**2)+GAPMul(6,v**2),GAPMul(v+w,v**2-GAPMul(v,w)-GAPMul(u,v)+w**2-GAPMul(u,w)+u**2),GAPMul(2,u)+GAPMul(v,w**2),0,GAPMul(2,u)+GAPMul(2,u),GAPMul(-u**2,v),GAPMul(u**4,v**2),GAPMul(u,v)+GAPMul(u,v**2),0,GAPMul(4,u**2)+GAPMul(4,u**2),GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**4)-GAPMul(2,u**4)+u**7,GAPMul(-u,v)-GAPMul(u,v**2)+GAPMul(v,w**3)-GAPMul(u**2,v)+GAPMul(v**3,w),GAPMul(-u,v)+GAPMul(u,v**2)-GAPMul(u,v**3)+GAPMul(v,w**4)-GAPMul(2,u**3)+GAPMul(u**3,v**2)-GAPMul(u**4,v)-GAPMul(u**4,w)+GAPMul(v**4,w),0,GAPMul(-u**4,v**2),0,GAPMul(u**8,v**4),GAPMul(-u,v)-GAPMul(u,v**3)+GAPMul(w**3,v**2)-GAPMul(u**3,v)+GAPMul(v**3,w**2),GAPMul(-u**10,v**7),0,GAPMul(-u**44,v**32),GAPMul(u**4,v**2),GAPMul(2,u**2),0,GAPMul(-u,v**2)-GAPMul(u,v**3)+GAPMul(3,u**2)-GAPMul(u**3,v)-GAPMul(u**3,v**2)-GAPMul(u**3,v**3)-GAPMul(u**3,w**3)+GAPMul(u**4,v**2)-GAPMul(u**5,v)-GAPMul(u**5,w)+u**6,GAPMul(u**4,v**3)+GAPMul(u**4,v**5),GAPMul(9,u**2)-GAPMul(4,u**3)-GAPMul(4,u**3)+u**6,GAPMul(u**40,v**30),GAPMul(u**8,v**4),0,0,GAPMul(v,w**6)+GAPMul(3,u**2)-GAPMul(2,u**3)+GAPMul(3,u**3)-GAPMul(2,u**3)-GAPMul(2,u**4)-GAPMul(2,u**4)+GAPMul(v**6,w),GAPMul(-u**12,v**8),GAPMul(u**8,v**6),GAPMul(-u**28,v**20),GAPMul(u**4,v**2),GAPMul(u**4,v**3),0,GAPMul(u**8,v**6),GAPMul(u**4,v**2),GAPMul(u**40,v**30),GAPMul(-u**42,v**31),GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,w**3)-GAPMul(2,w**2)+GAPMul(3,u**4)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(v**6,w**2),GAPMul(2,u**40),GAPMul(u**8,v**6),GAPMul(-u**34,v**25),0,GAPMul(u**40,v**30),GAPMul(u**8,v**6),GAPMul(2,u**8),GAPMul(-u**26,v**19),GAPMul(u**40,v**30),GAPMul(u**4,v**2),GAPMul(u**12,v**9),GAPMul(-u**36,v**26),GAPMul(4,u**4),GAPMul(u**8,v**6),GAPMul(4,u**20),GAPMul(u**16,v**12),GAPMul(-u**18,v**13),GAPMul(2,u**4),GAPMul(u**8,v**6),0,GAPMul(u**16,v**12),GAPMul(2,u**8),GAPMul(u**24,v**18),GAPMul(u**8,v**6),GAPMul(-u**20,v**14),GAPMul(u**8,v**6),GAPMul(u**24,v**18),GAPMul(u**16,v**12),GAPMul(u**32,v**24),GAPMul(u**32,v**24),GAPMul(u**24,v**18),GAPMul(2,u**10),GAPMul(u**16,v**12),GAPMul(u**8,v**6),GAPMul(u**8,v**6),GAPMul(u**16,v**12),GAPMul(4,u**12),GAPMul(2,u**32),GAPMul(u**8,v**6),GAPMul(u**16,v**12),GAPMul(u**8,v**6),GAPMul(u**16,v**12),GAPMul(u**24,v**18),GAPMul(2,u**40),GAPMul(u**16,v**12),GAPMul(2,u**8),GAPMul(20,u**8),GAPMul(u**24,v**18),GAPMul(2,u**24),GAPMul(2,u**16),GAPMul(2,u**24),GAPMul(20,u**40),GAPMul(20,u**24),GAPMul(20,u**16),GAPMul(20,u**32)]
    
    
    def f20c(u,v,w):
        return [20,GAPMul(6,u)+GAPMul(11,v),GAPMul(v,GAPMul(4,v)+GAPMul(4,u)),GAPMul(6,u)+GAPMul(2,u),GAPMul(6,u**2)+GAPMul(11,v**2),GAPMul(-2,v),GAPMul(v,u+GAPMul(2,v)),GAPMul(v**2,u+v),GAPMul(3,u)+GAPMul(u,w**2),GAPMul(-v**2,GAPMul(u,w)+u**2-v**2),GAPMul(-v**8,GAPMul(v,u**3)+GAPMul(w**6,v**2)-GAPMul(v**5,u**3)-GAPMul(w**2,v**5)-GAPMul(u**4,v**7)-GAPMul(u**5,w**6)-GAPMul(w**5,v)-GAPMul(2,u**6)-GAPMul(w**4,v)+GAPMul(u**6,v**2)-GAPMul(u**7,w**4)+GAPMul(u**7,v)-v**11),GAPMul(v,GAPMul(u,w**2)+GAPMul(2,u)),0,GAPMul(6,u**2)+GAPMul(2,u**2),GAPMul(-v**2,GAPMul(-2,u**2)-GAPMul(2,u**2)-GAPMul(2,u**3)+GAPMul(4,u**3)-GAPMul(4,v**5)),GAPMul(-v,GAPMul(u,v)-GAPMul(u,v**2)+GAPMul(u**2,w)-GAPMul(v**2,w)-GAPMul(2,v**3)),GAPMul(u,v**2)-GAPMul(u,v**3)-GAPMul(v**4,u)+GAPMul(u**2,v)-GAPMul(w**3,v**2)-GAPMul(u**3,v)-GAPMul(u**3,v**2)+GAPMul(u**3,w**2)-GAPMul(u**4,v)+GAPMul(2,v**5),0,GAPMul(-v**4,GAPMul(u**2,w**2)+u**4-v**4),0,GAPMul(v**13,GAPMul(u**6,w**7)+GAPMul(v,u**6)),GAPMul(-v,GAPMul(u,v**2)-GAPMul(u**2,v**2)+GAPMul(u**3,w)-GAPMul(v**2,w**2)-GAPMul(2,v**4)),GAPMul(u**6,v**13),GAPMul(v**10,u+v),GAPMul(u**30,v**59),GAPMul(-v**8,GAPMul(2,v)-GAPMul(u**3,v**4)-GAPMul(w**2,u**4)-GAPMul(u**4,v**6)-GAPMul(3,u**5)-GAPMul(3,u**6)+GAPMul(2,v)-v**10),GAPMul(-v**3,GAPMul(-2,u**2)+GAPMul(u**2,v)-v**3),0,GAPMul(-u,v**3)-GAPMul(2,v**5)+GAPMul(2,u**2)-GAPMul(u**3,v)-GAPMul(3,u**3)-GAPMul(v**3,w**3)+GAPMul(u**4,v**2)-GAPMul(u**5,v)-GAPMul(v**5,w)+GAPMul(2,v**6),0,GAPMul(-2,v**2),GAPMul(2,u**30),GAPMul(-v**14,GAPMul(v,u**6)+GAPMul(v**2,u**6)-GAPMul(v**5,u**6)-GAPMul(u**8,w**9)-GAPMul(v,u**8)-GAPMul(v**5,u**8)-GAPMul(v**9,u**8)-GAPMul(u**9,w**8)+GAPMul(v**2,u**9)-GAPMul(u**10,w**7)-GAPMul(u**11,w**6)+GAPMul(v**2,u**11)-v**17),0,0,GAPMul(-v**2,GAPMul(-v**4,u)-GAPMul(3,u**2)-GAPMul(3,u**3)+GAPMul(2,u**3)-GAPMul(v**4,w)-GAPMul(2,v**5)),GAPMul(u**6,v**15),GAPMul(u**6,v**12),GAPMul(u**18,v**37),GAPMul(v**6,GAPMul(2,v)+GAPMul(2,w**3)),0,0,GAPMul(2,u**6),GAPMul(v**7,GAPMul(u**3,w**4)+GAPMul(u**3,v)),GAPMul(u**30,v**56),GAPMul(u**30,v**57),GAPMul(-v**2,GAPMul(-3,u**2)-GAPMul(u**2,v**4)+GAPMul(2,u**3)-GAPMul(3,u**4)+GAPMul(2,u**5)-GAPMul(v**4,w**2)-GAPMul(2,v**6)),GAPMul(-u**30,v**55),GAPMul(u**6,v**12),GAPMul(-u**24,v**46),0,GAPMul(u**30,v**56),GAPMul(-2,u**6),GAPMul(-u**6,v**11),GAPMul(u**18,v**35),GAPMul(-u**30,v**55),GAPMul(v**6,GAPMul(2,u**3)+GAPMul(4,u**3)),0,GAPMul(-u**24,v**48),0,GAPMul(-u**6,v**11),0,GAPMul(-u**12,v**23),GAPMul(-u**12,v**24),GAPMul(v**6,GAPMul(8,u**3)+GAPMul(6,u**4)),GAPMul(u**6,v**13),0,GAPMul(-u**12,v**24),GAPMul(v**12,GAPMul(8,u**6)+GAPMul(6,u**8)),GAPMul(-u**18,v**33),GAPMul(-u**6,v**12),GAPMul(-u**12,v**26),GAPMul(u**6,v**13),GAPMul(u**18,v**34),GAPMul(-2,u**12),GAPMul(-u**24,v**45),GAPMul(-2,u**24),GAPMul(u**18,v**34),GAPMul(u**6,v**14),GAPMul(-u**12,v**24),GAPMul(2,u**6),GAPMul(-u**6,v**12),GAPMul(u**12,v**23),0,GAPMul(u**24,v**44),GAPMul(-u**6,v**12),GAPMul(-2,u**12),GAPMul(-2,u**6),GAPMul(u**12,v**23),GAPMul(2,u**18),GAPMul(-u**30,v**55),GAPMul(2,u**12),GAPMul(-u**6,v**11),GAPMul(-20,u**6),GAPMul(-2,u**18),GAPMul(-u**18,v**33),GAPMul(u**12,v**22),GAPMul(-u**18,v**33),GAPMul(-20,u**30),GAPMul(-20,u**18),GAPMul(20,u**12),GAPMul(20,u**24)]
    
    
    def f20d(u,v,w):
        return [20,GAPMul(3,u)+GAPMul(8,v),GAPMul(u,w)+GAPMul(4,v),GAPMul(4,u)+GAPMul(2,u),GAPMul(3,u**2)+GAPMul(8,v**2),GAPMul(-2,u)+GAPMul(2,v**3),GAPMul(2,u)+GAPMul(u,v**2),GAPMul(v,w),GAPMul(2,u)+GAPMul(u,w**2),GAPMul(-u,v),GAPMul(-v**3,w**4),GAPMul(u,v**2)+GAPMul(2,v),0,GAPMul(4,u**2)+GAPMul(2,u**2),GAPMul(2,u**2)+GAPMul(2,u**2)-GAPMul(u**3,w**4)-GAPMul(4,v**3)-GAPMul(u**4,w**3)-GAPMul(4,v**4)+GAPMul(2,v**7),GAPMul(-u,v)-GAPMul(u,v**2)+GAPMul(u,v**3),GAPMul(-2,u)-GAPMul(u,v**3)+GAPMul(v**4,u)-GAPMul(v,w**4)+GAPMul(u**2,v)-GAPMul(u**3,v)-GAPMul(v**3,w**2)+w**5,0,GAPMul(-u**2,v**2),0,GAPMul(v**6,w**8),GAPMul(-u,v)-GAPMul(u,v**3)+GAPMul(u**2,v**3),GAPMul(u**4,v**9),GAPMul(v**5,w**5),GAPMul(u**17,v**42),GAPMul(-v**3,w**4),GAPMul(v**2,w**2),0,GAPMul(-u,v**2)-GAPMul(2,v)-GAPMul(u**2,v)+GAPMul(2,u**2)-GAPMul(u**2,v**3)+GAPMul(2,u**2)-GAPMul(u**3,v**2)-GAPMul(3,v**3)+GAPMul(2,v**4)-GAPMul(v**5,w)+w**6,0,GAPMul(6,u**2)-GAPMul(2,u**3)-GAPMul(8,v**3)+GAPMul(2,v**6),GAPMul(2,u**15),GAPMul(-v**6,w**8),0,0,GAPMul(-2,u)+GAPMul(u,v**6)-GAPMul(2,u**3)-GAPMul(4,v**3)-GAPMul(2,v**4)+GAPMul(v**6,w),GAPMul(u**5,v**10),GAPMul(-u**3,v**8),GAPMul(u**11,v**26),GAPMul(v**3,w**4),0,0,GAPMul(2,u**3),GAPMul(v**3,w**4),GAPMul(-u**15,v**40),GAPMul(u**16,v**41),GAPMul(3,u**2)-GAPMul(2,w**3)+GAPMul(3,u**2)-GAPMul(2,w**3)-GAPMul(4,v**3)-GAPMul(2,v**5)+GAPMul(v**6,w**2),GAPMul(-u**15,v**40),GAPMul(-u**3,v**8),GAPMul(-u**13,v**33),0,GAPMul(-u**15,v**40),GAPMul(-2,u**3),GAPMul(-u**3,v**8),GAPMul(u**10,v**25),GAPMul(-u**15,v**40),GAPMul(v**3,w**4),0,GAPMul(-u**14,v**34),0,GAPMul(-u**3,v**8),0,GAPMul(u**6,v**16),GAPMul(-u**7,v**17),GAPMul(v**3,w**4),GAPMul(u**3,v**8),0,GAPMul(-u**6,v**16),GAPMul(v**6,w**8),GAPMul(-u**9,v**24),GAPMul(-u**3,v**8),GAPMul(-u**8,v**18),GAPMul(u**3,v**8),GAPMul(-u**9,v**24),GAPMul(-2,u**6),GAPMul(u**12,v**32),GAPMul(-2,u**12),GAPMul(-u**9,v**24),GAPMul(-u**3,v**10),GAPMul(-u**6,v**16),GAPMul(2,u**3),GAPMul(-u**3,v**8),GAPMul(u**6,v**16),0,GAPMul(u**12,v**32),GAPMul(-u**3,v**8),GAPMul(-2,u**6),GAPMul(-2,u**3),GAPMul(u**6,v**16),GAPMul(2,u**9),GAPMul(-u**15,v**40),GAPMul(2,u**6),GAPMul(-u**3,v**8),GAPMul(-20,u**3),GAPMul(-2,u**9),GAPMul(-u**9,v**24),GAPMul(u**6,v**16),GAPMul(-u**9,v**24),GAPMul(-20,u**15),GAPMul(-20,u**9),GAPMul(20,u**6),GAPMul(20,u**12)]
    
    
    def f24(u,v,w):
        return [24,GAPMul(12,u)+GAPMul(6,v),GAPMul(2,u),GAPMul(6,u)+GAPMul(6,u),GAPMul(12,u**2)+GAPMul(6,v**2),GAPMul(4,u),GAPMul(u,v**2+w**2),GAPMul(u,GAPMul(-v,w)+u**2),GAPMul(3,u)+GAPMul(3,u),GAPMul(u**2,GAPMul(-v,w)+u**2),GAPMul(u**6,GAPMul(v**6,w**7)+GAPMul(v**7,w**6)-GAPMul(u**3,v**2)-GAPMul(u**3,v**3)+GAPMul(u**3,v**4)-GAPMul(u**3,v**7)-GAPMul(u**3,v**8)-GAPMul(u**4,v**2)-GAPMul(u**4,v**3)-GAPMul(u**4,v**6)-GAPMul(u**4,v**7)+GAPMul(u**7,v**2)),GAPMul(u,v**3+w**3),GAPMul(-u**2,v),GAPMul(6,u**2)+GAPMul(6,u**2),GAPMul(2,u**2),GAPMul(u,v+w),GAPMul(2,u)-GAPMul(v**4,u)-GAPMul(w**4,u)+GAPMul(u**2,v),GAPMul(-u**4,v**2),GAPMul(u**4,GAPMul(-v,w)+u**2),0,GAPMul(u**13,GAPMul(v**4,w**9)+GAPMul(v**6,w**7)),GAPMul(u,GAPMul(-v,w)+u**2),GAPMul(v**5,u**12),GAPMul(u**5,GAPMul(-v,w)+u**2),GAPMul(u**54,v**25),GAPMul(u**6,GAPMul(3,v**6)+GAPMul(3,u**2)-GAPMul(2,u**3)-GAPMul(2,v**3)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**6,v**2)),GAPMul(u**2,GAPMul(3,v**2)+GAPMul(2,u)),GAPMul(-u**6,v**3),GAPMul(-v**5,u)-GAPMul(u,w**5)+GAPMul(4,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(3,u**4)-GAPMul(u**5,v)-GAPMul(u**5,w)+GAPMul(2,u**6),0,GAPMul(4,u**2),GAPMul(4,u**51),GAPMul(u**10,GAPMul(v**10,w**11)+GAPMul(v**11,w**10)-GAPMul(u**5,v**4)+GAPMul(u**5,v**8)-GAPMul(u**5,v**12)-GAPMul(u**6,v**4)-GAPMul(u**6,v**6)-GAPMul(u**6,v**9)-GAPMul(u**6,v**11)+GAPMul(u**9,v**4)),0,GAPMul(-u**8,w**4),GAPMul(u**2,GAPMul(3,w**3)+GAPMul(3,v**3)-GAPMul(2,v**4)-GAPMul(2,w**4)-GAPMul(2,u**2)-GAPMul(2,u**2)+GAPMul(u**4,v)),GAPMul(u**14,v**5),GAPMul(u**11,v**5),GAPMul(u**34,v**15),GAPMul(u**4,GAPMul(v**4,w**6)+GAPMul(v**6,w**4)),0,GAPMul(-u**22,v**11),GAPMul(4,u**11),GAPMul(u**7,GAPMul(v**2,w**5)+GAPMul(v**3,w**4)),GAPMul(u**51,v**25),GAPMul(u**52,v**25),GAPMul(u**2,GAPMul(3,v**2)+GAPMul(3,v**4)-GAPMul(2,v**5)-GAPMul(2,u)+GAPMul(6,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**4,v**2)),GAPMul(6,u**50),GAPMul(u**11,v**5),GAPMul(u**42,v**20),0,GAPMul(u**51,v**25),GAPMul(2,u**10),GAPMul(6,u**10),GAPMul(u**32,v**15),GAPMul(u**50,v**25),GAPMul(u**4,GAPMul(v**4,w**5)+GAPMul(v**5,w**4)),0,GAPMul(u**44,v**20),0,GAPMul(u**10,v**5),0,GAPMul(u**21,v**10),GAPMul(u**22,v**10),GAPMul(u**4,GAPMul(3,w**4)+GAPMul(6,u**2)),GAPMul(u**12,v**5),GAPMul(-u**12,v**6),GAPMul(u**22,v**10),GAPMul(u**8,GAPMul(3,v**8)+GAPMul(6,u**4)),GAPMul(u**30,v**15),GAPMul(u**11,v**5),GAPMul(u**24,v**10),GAPMul(u**12,v**5),GAPMul(u**31,v**15),GAPMul(4,u**21),GAPMul(u**41,v**20),GAPMul(4,u**41),GAPMul(u**31,v**15),GAPMul(u**12,v**5),GAPMul(u**22,v**10),GAPMul(4,u**12),GAPMul(u**11,v**5),GAPMul(2,u**21),0,GAPMul(6,u**40),GAPMul(2,u**11),GAPMul(4,u**22),GAPMul(2,u**10),GAPMul(u**21,v**10),GAPMul(4,u**31),GAPMul(6,u**50),GAPMul(2,u**20),GAPMul(6,u**10),GAPMul(24,u**10),GAPMul(2,u**30),GAPMul(6,u**30),GAPMul(6,u**20),GAPMul(6,u**30),GAPMul(24,u**50),GAPMul(24,u**30),GAPMul(24,u**20),GAPMul(24,u**40)]
    
    
    def f30a(u,v,w):
        return [30,GAPMul(12,u)+GAPMul(9,v),GAPMul(4,u)+GAPMul(4,u),GAPMul(6,u)+GAPMul(6,u),GAPMul(12,u**2)+GAPMul(9,v**2),GAPMul(u,GAPMul(-3,v)+u**2),GAPMul(2,u)+GAPMul(u,v**2),GAPMul(u,v),GAPMul(3,u)+GAPMul(3,u),GAPMul(-u**2,w**2+GAPMul(v,w)),GAPMul(u**4,GAPMul(v**7,w**8)+GAPMul(v**8,w**7)-GAPMul(u**2,v**6)-GAPMul(u**2,v**7)+GAPMul(u**3,v**4)-GAPMul(u**3,v**6)+GAPMul(u**3,v**8)-GAPMul(u**5,v**3)+GAPMul(u**5,v**5)-GAPMul(u**5,v**7)-GAPMul(u**5,v**10)-GAPMul(u**5,w**10)-GAPMul(u**6,v**3)-GAPMul(u**6,v**6)-GAPMul(u**6,v**9)-GAPMul(u**6,w**9)+GAPMul(u**9,w**3)),GAPMul(u,v)+GAPMul(u,v**2),0,GAPMul(6,u**2)+GAPMul(6,u**2),GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,v**3)-GAPMul(4,u**4)-GAPMul(4,u**4)-GAPMul(2,v**4)+u**7,GAPMul(u,GAPMul(-v,w**2)-GAPMul(v**2,w)-GAPMul(u,v)+u**3),GAPMul(-u,v)+GAPMul(u,v**2)-GAPMul(u,v**3)-GAPMul(v**4,u)-GAPMul(w**4,u)-GAPMul(v,w**4)+GAPMul(u**2,v)-GAPMul(u**2,v**3)-GAPMul(u**2,w**3)-GAPMul(2,u**3)-GAPMul(2,u**4)-GAPMul(2,u**4)-GAPMul(v**4,w)+u**5,0,GAPMul(-u**4,w**2-GAPMul(v,w)+v**2),0,GAPMul(u**8,GAPMul(-v**9,w**9)-GAPMul(u,v**8)-GAPMul(u,v**9)+GAPMul(u**5,v**6)),GAPMul(u,GAPMul(-v,w**3)-GAPMul(v**3,w)-GAPMul(u**2,v)+u**4),GAPMul(-u**10,v**6),GAPMul(u**5,v**5),GAPMul(-u**44,v**30),GAPMul(u**4,GAPMul(2,v**7)-GAPMul(3,u**2)+GAPMul(2,u**3)-GAPMul(2,u**5)-GAPMul(2,u**5)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(u**8,w**3)),GAPMul(-u**2,GAPMul(-3,v**2)+GAPMul(2,u)),0,GAPMul(-u,v**2)-GAPMul(u,v**3)-GAPMul(v**5,u)-GAPMul(u,w**5)-GAPMul(v,w**5)+GAPMul(3,u**2)-GAPMul(u**3,v)-GAPMul(u**3,v**2)-GAPMul(3,u**3)-GAPMul(3,u**3)-GAPMul(2,v**3)+GAPMul(u**4,v**2)-GAPMul(2,u**5)-GAPMul(2,u**5)-GAPMul(v**5,w)+u**6,GAPMul(u**4,v**3)+GAPMul(u**4,v**5),GAPMul(9,u**2)-GAPMul(8,u**3)-GAPMul(8,u**3)-GAPMul(4,v**3)+u**6,GAPMul(u**41,v**30),GAPMul(u**8,GAPMul(v**11,w**12)+GAPMul(v**12,w**11)-GAPMul(u**2,v**10)-GAPMul(u**2,v**11)+GAPMul(u**3,v**8)-GAPMul(u**3,v**10)+GAPMul(u**3,v**12)-GAPMul(u**7,v**6)+GAPMul(u**7,v**8)-GAPMul(u**7,v**10)-GAPMul(u**7,v**16)-GAPMul(u**7,w**16)-GAPMul(u**8,v**6)-GAPMul(u**8,v**9)-GAPMul(u**8,v**15)-GAPMul(u**8,w**15)+GAPMul(u**11,v**6)),0,0,GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,u**3)+GAPMul(3,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,v**3)-GAPMul(4,u**4)-GAPMul(4,u**4)-GAPMul(2,v**4)+u**7,GAPMul(-u**12,v**6),GAPMul(u**9,v**6),GAPMul(-u**28,v**18),GAPMul(u**4,GAPMul(-v**4,w**6)-GAPMul(2,v**5)-GAPMul(v**6,w**4)-GAPMul(2,u)-GAPMul(2,u)+GAPMul(u**2,v**4)),GAPMul(u**4,v**3),0,GAPMul(u**9,v**6),GAPMul(u**4,GAPMul(-v**5,w**5)-GAPMul(u,v**4)-GAPMul(u,v**5)+GAPMul(u**3,v**3)),GAPMul(u**41,v**30),GAPMul(-u**42,v**30),GAPMul(3,u**2)+GAPMul(3,u**2)-GAPMul(2,w**3)-GAPMul(2,w**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,v**3)+GAPMul(3,u**4)-GAPMul(4,u**5)-GAPMul(4,u**5)-GAPMul(2,v**5)+u**8,GAPMul(3,u**40),GAPMul(u**9,v**6),GAPMul(-u**34,v**24),0,GAPMul(u**41,v**30),GAPMul(3,u**8),GAPMul(3,u**8),GAPMul(-u**26,v**18),GAPMul(3,u**40),GAPMul(u**4,GAPMul(-3,v**4)-GAPMul(3,v**5)-GAPMul(3,u)+GAPMul(2,u**2)),GAPMul(u**12,v**9),GAPMul(-u**36,v**24),GAPMul(2,u**4),GAPMul(3,u**8),GAPMul(2,u**20),GAPMul(u**17,v**12),GAPMul(-u**18,v**12),GAPMul(u**4,GAPMul(-9,w**4)+GAPMul(8,w**3)),GAPMul(u**8,v**6),0,GAPMul(u**16,v**12),GAPMul(u**8,GAPMul(-9,v**8)+GAPMul(8,u**4)),GAPMul(3,u**24),GAPMul(u**8,v**6),GAPMul(-u**20,v**12),GAPMul(u**8,v**6),GAPMul(u**25,v**18),GAPMul(u**17,v**12),GAPMul(u**33,v**24),GAPMul(u**33,v**24),GAPMul(u**25,v**18),GAPMul(-u**10,v**6),GAPMul(u**16,v**12),GAPMul(u**8,v**6),GAPMul(u**8,v**6),GAPMul(u**16,v**12),GAPMul(2,u**12),GAPMul(3,u**32),GAPMul(u**8,v**6),GAPMul(u**16,v**12),GAPMul(3,u**8),GAPMul(u**16,v**12),GAPMul(u**25,v**18),GAPMul(3,u**40),GAPMul(3,u**16),GAPMul(3,u**8),GAPMul(30,u**8),GAPMul(3,u**24),GAPMul(3,u**24),GAPMul(3,u**16),GAPMul(3,u**24),GAPMul(30,u**40),GAPMul(30,u**24),GAPMul(30,u**16),GAPMul(30,u**32)]
    
    
    def f30b(u,v,w):
        return [30,GAPMul(9,u)+GAPMul(15,v),GAPMul(4,u)+GAPMul(2,v),GAPMul(10,u)+GAPMul(4,u),GAPMul(9,u**2)+GAPMul(15,v**2),GAPMul(-4,u)+u**3,GAPMul(2,v),GAPMul(v**2,u+v),GAPMul(5,u)+GAPMul(2,u),GAPMul(-v**2,-v**2+GAPMul(u,w)),GAPMul(v**4,GAPMul(-u**6,v**6)+GAPMul(u**4,v**5)-GAPMul(v**6,u**7)-GAPMul(v**5,u**8)+GAPMul(v**9,u**3)-GAPMul(v**5,u**7)+GAPMul(2,v**4)-GAPMul(v**3,u**10)+GAPMul(v**3,u**8)-GAPMul(v**4,u**9)+GAPMul(v**2,u**9)-GAPMul(u**2,v**6)-GAPMul(u**3,v**6)+GAPMul(u**4,v**4)-GAPMul(v**8,u**7)-GAPMul(v**7,u**8)+GAPMul(v**9,u**2)-GAPMul(v**5,u**2)-GAPMul(v**5,u**3)),GAPMul(v,GAPMul(u,w**2)+GAPMul(2,u)),0,GAPMul(10,u**2)+GAPMul(4,u**2),GAPMul(4,u**2)+GAPMul(4,u**2)-GAPMul(4,u**3)-GAPMul(2,v**3)-GAPMul(4,u**4)-GAPMul(2,v**4)+u**7,GAPMul(v,GAPMul(-u,w**2)-GAPMul(2,u)+GAPMul(2,u)-GAPMul(u**2,w)+u**3),GAPMul(-u,v)+GAPMul(u,v**2)-GAPMul(2,u)+GAPMul(2,u**2)-GAPMul(u**3,v)-GAPMul(u**3,v**2)+GAPMul(u**3,w**2),0,GAPMul(-v**4,-v**2+GAPMul(u,w)),0,GAPMul(v**8,GAPMul(v**5,u**4)+GAPMul(v**6,u**4)),GAPMul(v,GAPMul(-u,w**3)-GAPMul(2,u)+GAPMul(2,u**2)-GAPMul(u**3,w)+GAPMul(u**3,v)),GAPMul(-u**6,v**12),GAPMul(v**10,u+v),GAPMul(-u**30,v**54),GAPMul(v**4,GAPMul(-2,v**5)+GAPMul(u**2,v**8)-GAPMul(2,v**5)+GAPMul(u**3,v**8)-GAPMul(2,v**5)-GAPMul(2,u**7)-GAPMul(2,u**7)+GAPMul(3,u**8)-GAPMul(2,v**3)+GAPMul(u**12,w**2)),GAPMul(v**2,GAPMul(2,u)+GAPMul(2,u**2)-GAPMul(u**2,v**2)+GAPMul(2,u**3)),0,GAPMul(-u**2+v**2,GAPMul(u**3,v)-GAPMul(2,u**2)-GAPMul(u**2,w**2)+GAPMul(u,v)-GAPMul(3,v**2)-GAPMul(2,v**4)-w**4+GAPMul(v,w**3)),GAPMul(u**3,v**5)+GAPMul(u**3,v**7),GAPMul(12,u**2)-GAPMul(8,u**3)-GAPMul(4,v**3)+u**6,GAPMul(u**30,v**50),GAPMul(v**8,GAPMul(u**8,v**11)+GAPMul(u**6,v**11)-GAPMul(u**9,v**8)+GAPMul(u**8,v**7)-GAPMul(u**4,v**8)-GAPMul(v**12,u**11)-GAPMul(v**11,u**12)+GAPMul(u**10,v**6)-GAPMul(v**7,u**4)+GAPMul(v**2,u**15)-GAPMul(v**7,u**12)+GAPMul(v**3,u**14)-GAPMul(v**3,u**16)+GAPMul(v**2,u**14)-GAPMul(v**8,u**11)+GAPMul(u**4,v**11)-GAPMul(u**6,v**8)+GAPMul(u**7,v**6)-GAPMul(u**15,v**4)),0,0,GAPMul(v,GAPMul(-2,u)+GAPMul(2,v**5)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(2,u**4)-GAPMul(2,v**3)+u**6),GAPMul(-u**6,v**14),GAPMul(u**6,v**11),GAPMul(-u**18,v**34),GAPMul(v**4,GAPMul(v**2,u**2)+GAPMul(2,v**3)),GAPMul(u**3,v**5),0,GAPMul(u**6,v**10),GAPMul(v**4,GAPMul(v**3,u**2)+GAPMul(u**2,v**4)),GAPMul(u**30,v**51),GAPMul(-u**30,v**52),GAPMul(v**2,GAPMul(3,u**2)-GAPMul(2,u**2)+GAPMul(6,u**2)-GAPMul(2,u**3)-GAPMul(4,u**3)+GAPMul(3,u**4)-GAPMul(2,u**5)-GAPMul(2,v**3)+u**6),GAPMul(3,u**30),GAPMul(u**6,v**11),GAPMul(-u**24,v**42),0,GAPMul(u**30,v**51),GAPMul(u**6,v**10),GAPMul(3,u**6),GAPMul(-u**18,v**32),GAPMul(u**30,v**50),GAPMul(v**4,GAPMul(2,v**2)+GAPMul(3,u**2)),GAPMul(u**9,v**15),GAPMul(-u**24,v**44),GAPMul(2,u**3),GAPMul(u**6,v**10),GAPMul(2,u**15),GAPMul(u**12,v**21),GAPMul(-u**12,v**22),GAPMul(v**4,GAPMul(6,u**2)+GAPMul(8,w**3)),GAPMul(u**6,v**11),0,GAPMul(u**12,v**21),GAPMul(v**8,GAPMul(6,v**4)+GAPMul(8,v**4)),GAPMul(u**18,v**30),GAPMul(u**6,v**11),GAPMul(-u**12,v**24),GAPMul(u**6,v**12),GAPMul(u**18,v**31),GAPMul(u**12,v**20),GAPMul(u**24,v**41),GAPMul(u**24,v**40),GAPMul(u**18,v**31),GAPMul(u**6,v**12),GAPMul(u**12,v**21),GAPMul(u**6,v**10),GAPMul(2,u**6),GAPMul(u**12,v**20),GAPMul(2,u**9),GAPMul(3,u**24),GAPMul(u**6,v**10),GAPMul(u**12,v**20),GAPMul(u**6,v**10),GAPMul(2,u**12),GAPMul(u**18,v**30),GAPMul(3,u**30),GAPMul(u**12,v**20),GAPMul(3,u**6),GAPMul(30,u**6),GAPMul(u**18,v**30),GAPMul(3,u**18),GAPMul(3,u**12),GAPMul(3,u**18),GAPMul(30,u**30),GAPMul(30,u**18),GAPMul(30,u**12),GAPMul(30,u**24)]
    
    
    def f36(u,v,w,j):
        return [36,GAPMul(18,u)+GAPMul(9,v),GAPMul(4,u)+GAPMul(4,u),GAPMul(10,u)+GAPMul(10,u),GAPMul(18,u**2)+GAPMul(9,v**2),GAPMul(-4,u)+GAPMul(6,u**3),GAPMul(3,u)+GAPMul(u,v**2),GAPMul(-j,u)+GAPMul(u**2,v),GAPMul(5,u)+GAPMul(5,u),GAPMul(-u**2,v)+u**4,GAPMul(-j,u**4)-GAPMul(j,u**4)+GAPMul(j,u**6)-GAPMul(j,u**7)+GAPMul(j,u**7)-GAPMul(j,u**7)-GAPMul(GAPMul(2,j)+j**2,u**8)+GAPMul(2,u**8)-GAPMul(GAPMul(2,j)+j**2,u**8)-GAPMul(u**9,v**2)-GAPMul(u**9,v**3)+GAPMul(u**9,v**4)-GAPMul(u**9,v**7)-GAPMul(u**9,v**8)-GAPMul(u**10,v**2)-GAPMul(u**10,v**3)-GAPMul(u**10,v**6)-GAPMul(u**10,v**7)-GAPMul(u**11,v**8)-GAPMul(u**11,w**8)-GAPMul(u**12,v**7)-GAPMul(u**12,w**7)+GAPMul(u**13,v**2),GAPMul(u,v)+GAPMul(u,v**2),GAPMul(-j,u**2),GAPMul(10,u**2)+GAPMul(10,u**2),GAPMul(4,u**2)+GAPMul(4,u**2)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(v**3,w**4)-GAPMul(4,u**4)-GAPMul(4,u**4)-GAPMul(v**4,w**3)+GAPMul(6,u**7),GAPMul(-u,v)-GAPMul(u,v**2)-GAPMul(2,u**2)+GAPMul(2,u**3),GAPMul(-2,u)+GAPMul(2,u)-GAPMul(2,u)-GAPMul(u,v**4)-GAPMul(u,w**4)+GAPMul(u**2,v)-GAPMul(u**2,v**3)-GAPMul(u**2,w**3)+GAPMul(v**2,w**3)-GAPMul(2,u**3)+GAPMul(u**3,v**2),GAPMul(j**2,u**4),GAPMul(-u**4,v**2)+u**8,0,GAPMul(j**2,u**8)+GAPMul(j**2,u**9),GAPMul(-u,v)-GAPMul(u,v**3)-GAPMul(2,u**3)+GAPMul(2,u**3),GAPMul(j**2,u**12)-GAPMul(j**2,u**14),GAPMul(-j**2,u**5)+GAPMul(u**10,v**5),GAPMul(j,u**54)-GAPMul(j,u**58),GAPMul(-2,j)+GAPMul(3,j)-GAPMul(2,j)-GAPMul(2,j)+GAPMul(3,u**8)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(u**12,v**2),GAPMul(-3,j**2)+GAPMul(2,u**3)-GAPMul(u**4,v**2)-GAPMul(u**4,w**2)+u**6,GAPMul(-u**6,v**3),GAPMul(-u,v**2)-GAPMul(u,v**3)-GAPMul(u,v**5)-GAPMul(u,w**5)-GAPMul(u**2,v)+GAPMul(4,u**2)-GAPMul(u**2,v**3)+GAPMul(u**2,v**4)-GAPMul(u**3,v)-GAPMul(u**3,v**2)-GAPMul(3,u**3)-GAPMul(3,u**3)+GAPMul(4,u**4)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(2,u**6),0,GAPMul(12,u**2)-GAPMul(8,u**3)-GAPMul(8,u**3)-GAPMul(2,v**3)+GAPMul(6,u**6),GAPMul(4,j)-GAPMul(6,j),GAPMul(-j**2,u**8)-GAPMul(j**2,u**8)+GAPMul(j**2,u**10)-GAPMul(j**2,u**11)+GAPMul(j**2,u**11)-GAPMul(j**2,u**11)-GAPMul(j**2,u**12)-GAPMul(j**2,u**12)+GAPMul(u**14,v**6)-GAPMul(u**15,v**4)+GAPMul(u**15,v**8)-GAPMul(u**15,v**12)-GAPMul(u**16,v**4)-GAPMul(u**16,v**6)-GAPMul(u**16,v**9)-GAPMul(u**16,v**11)+GAPMul(u**19,v**4)-GAPMul(u**19,v**12)-GAPMul(u**19,w**12)-GAPMul(u**20,v**11)-GAPMul(u**20,w**11)+GAPMul(u**23,v**8),0,GAPMul(j,u**8),GAPMul(-2,u)+GAPMul(3,u**2)-GAPMul(2,u**3)+GAPMul(6,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(4,u**4)-GAPMul(4,u**4)+GAPMul(2,u**6),GAPMul(j**2,u**14)-GAPMul(j**2,u**18),GAPMul(j**2,u**11)+GAPMul(j**2,u**11)-GAPMul(2,j**2)+GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2),GAPMul(u**34,v**17)-GAPMul(u**38,v**15),GAPMul(j,u**4)+GAPMul(2,j),0,GAPMul(-j**2,u**22),GAPMul(4,j**2)-GAPMul(6,j**2),GAPMul(j,u**4)+GAPMul(j,u**5),GAPMul(j,u**51)+GAPMul(j,u**51)-GAPMul(2,j)-GAPMul(2,j)-GAPMul(2,j),GAPMul(j,u**52)-GAPMul(j,u**54),GAPMul(3,u**2)-GAPMul(2,u**2)+GAPMul(3,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(6,u**4)-GAPMul(4,u**5)-GAPMul(4,u**5)+GAPMul(2,u**6),GAPMul(-9,j)-GAPMul(9,j)-GAPMul(18,j),GAPMul(j**2,u**11)+GAPMul(j**2,u**11)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2),GAPMul(-j**2,u**42)+GAPMul(j**2,u**44),0,GAPMul(j,u**51)+GAPMul(j,u**51)-GAPMul(2,j)+GAPMul(2,j)-GAPMul(2,j)-GAPMul(2,j),GAPMul(-2,j**2)-GAPMul(4,j**2)-GAPMul(2,j**2)-GAPMul(10,j**2)-GAPMul(10,j**2)-GAPMul(8,j**2),GAPMul(-9,j**2)-GAPMul(9,j**2)-GAPMul(18,j**2),GAPMul(u**32,v**16)-GAPMul(u**34,v**15),GAPMul(-2,j)-GAPMul(2,j)-GAPMul(2,j)-GAPMul(2,j)-GAPMul(5,j)-GAPMul(5,j)-GAPMul(5,j)-GAPMul(5,j)-GAPMul(8,j),GAPMul(3,j)+GAPMul(3,j),0,GAPMul(-j**2,u**44)+GAPMul(j**2,u**48),0,GAPMul(-2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(5,j**2)-GAPMul(5,j**2)-GAPMul(5,j**2)-GAPMul(5,j**2)-GAPMul(8,j**2),0,GAPMul(-j,u**21)-GAPMul(j,u**21)-GAPMul(2,j)+GAPMul(2,j),GAPMul(-j,u**22)+GAPMul(j,u**24),GAPMul(9,j)+GAPMul(6,u**6),GAPMul(2,j**2)-GAPMul(3,j**2)-GAPMul(3,j**2)+GAPMul(2,j**2)-GAPMul(6,j**2)+GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2),GAPMul(u**12,v**6),GAPMul(-j,u**21)-GAPMul(j,u**21)+GAPMul(j,u**22)-GAPMul(j,u**23)-GAPMul(j,u**23)+GAPMul(3,j)-GAPMul(j,u**23)-GAPMul(j,u**23)-GAPMul(3,j)-GAPMul(j,u**24)+GAPMul(2,j)-GAPMul(j,u**24)-GAPMul(3,j)-GAPMul(2,j)-GAPMul(2,j)+GAPMul(2,j),GAPMul(9,j**2)+GAPMul(6,u**12),GAPMul(-2,u**30)-GAPMul(2,u**30)-GAPMul(2,u**30)-GAPMul(2,u**30)-GAPMul(5,u**31)-GAPMul(5,u**31)-GAPMul(5,u**32)-GAPMul(5,u**32)-GAPMul(8,u**33),GAPMul(-j**2,u**11)-GAPMul(j**2,u**11)-GAPMul(j**2,u**11)-GAPMul(j**2,u**11)-GAPMul(2,j**2)-GAPMul(j**2,u**12)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2),GAPMul(-j,u**24)+GAPMul(j,u**28),GAPMul(-3,j**2)+GAPMul(2,j**2)-GAPMul(3,j**2)+GAPMul(2,j**2)-GAPMul(6,j**2)+GAPMul(4,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,j**2),GAPMul(u**31,v**16)+GAPMul(u**31,v**17)-GAPMul(2,u**33)-GAPMul(2,u**33)-GAPMul(2,u**34),GAPMul(-4,j)+GAPMul(6,j),GAPMul(-j**2,u**41)-GAPMul(j**2,u**41)+GAPMul(2,j**2)-GAPMul(2,j**2)+GAPMul(2,j**2),GAPMul(-4,j**2)+GAPMul(6,j**2),GAPMul(u**31,v**16)+GAPMul(u**31,v**18)-GAPMul(2,u**33)+GAPMul(2,u**33)-GAPMul(2,u**33)-GAPMul(2,u**35),GAPMul(3,j)-GAPMul(2,j**2)-GAPMul(2,j**2)+GAPMul(j**2,u**14)-GAPMul(j**2,u**16),GAPMul(-2,j)+GAPMul(3,j)-GAPMul(2,j)-GAPMul(2,j)+GAPMul(6,j)-GAPMul(2,j)-GAPMul(2,j)-GAPMul(4,j)-GAPMul(4,j)+GAPMul(2,j),GAPMul(2,j**2)-GAPMul(12,j**2)+GAPMul(8,j**2)-GAPMul(6,j**2),GAPMul(-j**2,u**11)-GAPMul(3,j**2)-GAPMul(j**2,u**11)-GAPMul(4,j**2)-GAPMul(4,j**2)-GAPMul(2,j**2),GAPMul(j,u**20)+GAPMul(4,j),0,GAPMul(9,j**2)+GAPMul(9,j**2),GAPMul(-j**2,u**10)-GAPMul(4,j**2)-GAPMul(4,j**2)-GAPMul(6,j**2),GAPMul(-2,j)+GAPMul(12,j)-GAPMul(8,j)-GAPMul(8,j)+GAPMul(6,j),GAPMul(-2,j**2)-GAPMul(4,j**2)-GAPMul(2,j**2)-GAPMul(10,j**2)-GAPMul(10,j**2)-GAPMul(8,j**2),GAPMul(j,u**21)+GAPMul(3,j),GAPMul(4,u**31)-GAPMul(6,u**33),GAPMul(-9,j)-GAPMul(9,j)-GAPMul(18,j),GAPMul(2,j)+GAPMul(4,j),GAPMul(-9,j**2)-GAPMul(9,j**2)-GAPMul(18,j**2),GAPMul(-36,j**2),GAPMul(-2,u**30)-GAPMul(4,u**30)-GAPMul(2,u**30)-GAPMul(10,u**31)-GAPMul(10,u**31)-GAPMul(8,u**32),GAPMul(-9,u**30)-GAPMul(9,u**30)-GAPMul(18,u**32),GAPMul(9,j)+GAPMul(9,j),GAPMul(-9,u**30)-GAPMul(9,u**30)-GAPMul(18,u**31),GAPMul(-36,j),GAPMul(-36,u**30),GAPMul(36,j),GAPMul(36,j**2)]
    
    
    def f40(u,v,w):
        return [40,GAPMul(10,u)+GAPMul(12,v),GAPMul(2,u)+GAPMul(4,u),GAPMul(6,u)+GAPMul(10,u),GAPMul(10,u**2)+GAPMul(12,v**2),GAPMul(-4,u)+GAPMul(4,w**3),GAPMul(4,u)+GAPMul(u,v**2),GAPMul(u,v)+GAPMul(u,w**2),GAPMul(3,u)+GAPMul(5,u),GAPMul(-u,v)-GAPMul(v**2,w**2),GAPMul(u**2,v**4)-GAPMul(u**2,v**7)-GAPMul(u**2,v**8)+GAPMul(u**3,v**3)-GAPMul(u**3,v**6)-GAPMul(u**3,v**7)+GAPMul(u**4,v**6)-GAPMul(u**6,v**3)+GAPMul(u**6,v**5)-GAPMul(u**6,v**6)-GAPMul(u**6,v**7)-GAPMul(u**7,v**3)+GAPMul(u**7,v**4)-GAPMul(u**7,v**6)+GAPMul(u**7,v**8)-GAPMul(u**7,w**12)-GAPMul(v**7,w**12)+GAPMul(u**8,v**4)-GAPMul(u**8,w**11)-GAPMul(v**8,w**11)-GAPMul(v**9,w**10)-GAPMul(v**10,w**9),GAPMul(u,v)+GAPMul(u,v**2),0,GAPMul(6,u**2)+GAPMul(10,u**2),GAPMul(4,u**2)+GAPMul(4,u**2)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(6,v**3)-GAPMul(2,u**4)-GAPMul(4,u**4)-GAPMul(6,v**4)+GAPMul(4,w**7),GAPMul(-2,u)-GAPMul(u,v**2)+GAPMul(u,w**3)-GAPMul(u**2,v)+GAPMul(2,w**4),GAPMul(-3,u)+GAPMul(u,v**2)-GAPMul(3,u)-GAPMul(u,v**4)-GAPMul(u,w**4)-GAPMul(v,w**4)+GAPMul(u**2,v)-GAPMul(2,u**3)-GAPMul(u**3,w**2)-GAPMul(v**3,w**2)-GAPMul(u**4,w)-GAPMul(2,v**4)+GAPMul(2,w**5),0,GAPMul(-u**2,v**2)-GAPMul(v**4,w**4),0,GAPMul(u**4,v**8)+GAPMul(u**4,v**9)-GAPMul(u**8,v**9)+GAPMul(u**8,w**18)-GAPMul(u**9,v**8)-GAPMul(u**9,v**9)+GAPMul(u**9,w**17),GAPMul(-2,u)-GAPMul(u,v**3)+GAPMul(u**2,w**3)-GAPMul(u**3,v)+GAPMul(2,w**5),GAPMul(-u**5,v**8)-GAPMul(u**6,v**7),GAPMul(u**5,v**5)+GAPMul(u**5,w**10),GAPMul(-u**25,v**34)-GAPMul(u**27,v**32),GAPMul(u**2,v**4)-GAPMul(2,u**2)+GAPMul(u**3,v**3)-GAPMul(2,u**3)+GAPMul(3,u**4)-GAPMul(2,u**6)-GAPMul(3,u**6)+GAPMul(2,u**7)-GAPMul(2,u**7)-GAPMul(2,v**7)-GAPMul(2,v**9),GAPMul(2,u)+GAPMul(3,u**2)-GAPMul(u**2,w**4)-GAPMul(v**2,w**4)-GAPMul(2,v**3),0,GAPMul(-u,v**2)-GAPMul(u,v**3)-GAPMul(u,v**5)-GAPMul(2,u)-GAPMul(2,v)-GAPMul(2,u**2)+GAPMul(4,u**2)-GAPMul(2,u**2)+GAPMul(u**2,v**4)-GAPMul(u**3,v)-GAPMul(u**3,v**2)-GAPMul(u**3,v**3)-GAPMul(3,u**3)-GAPMul(4,v**3)+GAPMul(u**4,v**2)-GAPMul(u**5,w)-GAPMul(2,v**5)+GAPMul(2,w**6),0,GAPMul(12,u**2)-GAPMul(4,u**3)-GAPMul(8,u**3)-GAPMul(12,v**3)+GAPMul(4,w**6),GAPMul(4,u**25)-GAPMul(4,u**26),GAPMul(u**4,v**8)-GAPMul(u**4,v**11)-GAPMul(u**4,v**12)+GAPMul(u**6,v**6)-GAPMul(u**6,v**9)+GAPMul(u**6,v**11)-GAPMul(u**9,v**6)+GAPMul(u**9,v**8)-GAPMul(u**10,v**6)-GAPMul(u**10,v**10)-GAPMul(u**10,v**11)+GAPMul(u**11,v**8)-GAPMul(u**11,v**10)+GAPMul(u**11,v**12)-GAPMul(u**11,w**20)-GAPMul(v**11,w**20)+GAPMul(u**12,v**8)-GAPMul(u**12,w**19)-GAPMul(v**12,w**19)-GAPMul(v**15,w**16)-GAPMul(v**16,w**15),0,0,GAPMul(-4,u)+GAPMul(u,w**6)-GAPMul(2,u**3)+GAPMul(3,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(4,v**3)-GAPMul(2,u**4)-GAPMul(4,v**4)+GAPMul(2,w**7),GAPMul(-u**5,v**10)-GAPMul(u**7,v**8),GAPMul(2,u**5)+GAPMul(u**5,v**8)-GAPMul(2,u**6)-GAPMul(u**6,v**9)+GAPMul(u**7,v**6)-GAPMul(u**8,v**7),GAPMul(-u**15,v**22)-GAPMul(u**17,v**20),GAPMul(u**2,v**4)+GAPMul(2,u**2)-GAPMul(2,u**4)-GAPMul(u**4,v**6)+GAPMul(u**4,w**10)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(2,u**5)-GAPMul(u**6,v**4)+GAPMul(v**6,w**8),0,0,GAPMul(4,u**5)-GAPMul(4,u**6),GAPMul(u**2,v**4)+GAPMul(u**2,v**5)-GAPMul(u**4,v**5)+GAPMul(u**4,w**10)-GAPMul(u**5,v**4)-GAPMul(u**5,v**5)+GAPMul(u**5,w**9),GAPMul(2,u**25)+GAPMul(u**25,v**31)-GAPMul(2,u**26)-GAPMul(u**26,v**32)-GAPMul(u**27,v**31),GAPMul(-u**25,v**32)-GAPMul(u**26,v**31),GAPMul(6,u**2)-GAPMul(4,u**2)+GAPMul(3,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(4,v**3)+GAPMul(3,u**4)-GAPMul(2,u**5)-GAPMul(4,v**5)+GAPMul(2,w**8),GAPMul(18,u**25)+GAPMul(12,u**25),GAPMul(2,u**5)+GAPMul(u**5,v**7)-GAPMul(2,u**6)-GAPMul(u**6,v**8)-GAPMul(u**7,v**7),GAPMul(-u**20,v**26)-GAPMul(u**21,v**25),0,GAPMul(2,u**25)+GAPMul(u**25,v**32)-GAPMul(2,u**26)-GAPMul(u**26,v**33)+GAPMul(u**27,v**30)-GAPMul(u**28,v**31),GAPMul(8,u**5)+GAPMul(10,u**5),GAPMul(18,u**5)+GAPMul(12,u**5),GAPMul(-u**15,v**20)-GAPMul(u**16,v**19),GAPMul(8,u**25)+GAPMul(5,u**25),GAPMul(3,u**2)+GAPMul(2,u**2)-GAPMul(3,u**4)-GAPMul(3,u**4)+GAPMul(2,u**4)-GAPMul(3,u**5)+GAPMul(u**5,w**8),0,GAPMul(-u**20,v**28)-GAPMul(u**22,v**26),0,GAPMul(8,u**5)+GAPMul(5,u**5),0,GAPMul(2,u**10)+GAPMul(u**10,v**13)-GAPMul(2,u**11)-GAPMul(u**11,v**14)-GAPMul(u**12,v**13),GAPMul(-u**10,v**14)-GAPMul(u**11,v**13),GAPMul(6,u**2)+GAPMul(8,u**3)-GAPMul(9,u**4)+GAPMul(3,u**4),GAPMul(2,u**5)+GAPMul(u**5,v**7)-GAPMul(4,u**5)-GAPMul(4,u**5)+GAPMul(u**6,v**6)-GAPMul(4,u**6)+GAPMul(6,u**7)-GAPMul(4,u**8)-GAPMul(2,u**8)+GAPMul(3,u**8)-GAPMul(2,u**8)-GAPMul(2,u**8)-GAPMul(2,u**9),0,GAPMul(2,u**10)+GAPMul(u**10,v**13)-GAPMul(2,u**10)-GAPMul(4,u**10)-GAPMul(2,u**10)+GAPMul(u**11,v**12)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(2,u**12)-GAPMul(2,u**13)-GAPMul(u**13,v**13)+GAPMul(3,u**13)-GAPMul(u**13,v**16)-GAPMul(u**13,v**17)-GAPMul(3,u**14)-GAPMul(u**14,v**13)+GAPMul(u**14,v**14)-GAPMul(u**14,v**15)-GAPMul(u**14,v**16)-GAPMul(u**15,v**12),GAPMul(6,u**4)+GAPMul(8,u**6)-GAPMul(9,u**8)+GAPMul(3,u**8),GAPMul(8,u**15)+GAPMul(5,u**15),GAPMul(2,u**5)+GAPMul(2,u**5),GAPMul(-u**10,v**16)-GAPMul(u**12,v**14),GAPMul(2,u**5)+GAPMul(u**5,v**8)-GAPMul(4,u**5)-GAPMul(4,u**5)+GAPMul(u**7,v**6)-GAPMul(4,u**7)+GAPMul(3,u**7)-GAPMul(4,u**8)-GAPMul(2,u**8)-GAPMul(2,u**8)-GAPMul(2,u**8)+GAPMul(3,u**9)-GAPMul(2,u**10),GAPMul(2,u**15)+GAPMul(u**15,v**19)-GAPMul(2,u**16)-GAPMul(u**16,v**20)-GAPMul(u**17,v**19),GAPMul(4,u**10)-GAPMul(4,u**11),GAPMul(2,u**20)+GAPMul(u**20,v**26)-GAPMul(2,u**21)-GAPMul(u**21,v**27)+GAPMul(u**22,v**24)-GAPMul(u**23,v**25),GAPMul(4,u**20)-GAPMul(4,u**21),GAPMul(2,u**15)+GAPMul(u**15,v**20)-GAPMul(2,u**16)-GAPMul(u**16,v**21)+GAPMul(u**17,v**18)-GAPMul(u**18,v**19),GAPMul(-u**5,v**8)-GAPMul(2,u**5)+GAPMul(2,u**6)-GAPMul(u**7,v**6)+GAPMul(3,u**7),GAPMul(2,u**10)+GAPMul(u**10,v**13)-GAPMul(4,u**10)-GAPMul(4,u**10)+GAPMul(u**11,v**12)-GAPMul(4,u**11)+GAPMul(6,u**12)-GAPMul(4,u**13)-GAPMul(2,u**13)+GAPMul(3,u**13)-GAPMul(2,u**13)-GAPMul(2,u**13)-GAPMul(2,u**14),GAPMul(4,u**5)-GAPMul(12,u**5)+GAPMul(12,u**7)-GAPMul(8,u**8)-GAPMul(4,u**8),GAPMul(2,u**5)+GAPMul(3,u**5),GAPMul(4,u**10)+GAPMul(6,u**10),0,GAPMul(18,u**20)+GAPMul(12,u**20),GAPMul(4,u**5)+GAPMul(6,u**5),GAPMul(4,u**10)-GAPMul(12,u**10)+GAPMul(12,u**12)-GAPMul(8,u**13)-GAPMul(4,u**13),GAPMul(8,u**5)+GAPMul(10,u**5),GAPMul(2,u**10)+GAPMul(3,u**10),GAPMul(4,u**15)-GAPMul(4,u**16),GAPMul(18,u**25)+GAPMul(12,u**25),GAPMul(8,u**10)+GAPMul(10,u**10),GAPMul(18,u**5)+GAPMul(12,u**5),GAPMul(40,u**5),GAPMul(8,u**15)+GAPMul(10,u**15),GAPMul(18,u**15)+GAPMul(12,u**15),GAPMul(18,u**10)+GAPMul(12,u**10),GAPMul(18,u**15)+GAPMul(12,u**15),GAPMul(40,u**25),GAPMul(40,u**15),GAPMul(40,u**10),GAPMul(40,u**20)]
    
    
    def f45(u,v,w,j):
        return [45,GAPMul(18,u)+GAPMul(18,v),GAPMul(8,u)+GAPMul(2,u),GAPMul(14,u)+GAPMul(8,u),GAPMul(18,u**2)+GAPMul(18,v**2),GAPMul(-5,u)+GAPMul(3,u**3),GAPMul(4,u)+GAPMul(4,u),GAPMul(-j**2,u)+GAPMul(u,v**2),GAPMul(7,u)+GAPMul(4,u),GAPMul(-u,v**2)-GAPMul(u**2,v)-GAPMul(u**2,v**2),GAPMul(-u**3,v**9)-GAPMul(u**3,v**10)+GAPMul(u**3,v**13)-GAPMul(j**2,u**4)-GAPMul(j**2,u**4)+GAPMul(u**4,v**13)-GAPMul(u**6,v**10)-GAPMul(j**2,u**7)+GAPMul(j**2,u**7)-GAPMul(u**7,v**9)-GAPMul(u**7,v**10)-GAPMul(u**7,v**12)-GAPMul(j**2,u**8)+GAPMul(u**8,v**5)-GAPMul(u**8,v**9)-GAPMul(u**8,v**11)-GAPMul(u**9,v**3)+GAPMul(u**9,v**5)-GAPMul(u**9,v**7)-GAPMul(u**9,v**8)-GAPMul(u**9,v**10)-GAPMul(u**10,v**3)-GAPMul(u**10,v**6)-GAPMul(u**10,v**7)-GAPMul(u**10,v**9)-GAPMul(u**11,v**8)-GAPMul(u**12,v**7)+GAPMul(u**13,v**3),GAPMul(2,u)+GAPMul(u,v**2),0,GAPMul(14,u**2)+GAPMul(8,u**2),GAPMul(5,u**2)+GAPMul(5,u**2)-GAPMul(8,u**3)-GAPMul(2,u**3)-GAPMul(2,v**3)-GAPMul(8,u**4)-GAPMul(2,u**4)-GAPMul(2,v**4)+GAPMul(3,u**7),GAPMul(-u,v)-GAPMul(2,u)+GAPMul(u,v**3)-GAPMul(2,u**2)+GAPMul(u**3,v),GAPMul(-2,u)+GAPMul(2,u)-GAPMul(3,u)-GAPMul(2,u)+GAPMul(2,u**2)-GAPMul(u**2,v**3)-GAPMul(3,u**3)-GAPMul(u**3,v**2)+GAPMul(2,u**3)-GAPMul(2,u**4)+u**5,0,GAPMul(-u**2,v**4)-GAPMul(u**4,v**2)-GAPMul(u**4,v**4),GAPMul(j**2,u**2),GAPMul(u**6,v**13)+GAPMul(u**6,v**14),GAPMul(-u,v)-GAPMul(2,u)+GAPMul(u**2,v**3)-GAPMul(2,u**3)+GAPMul(u**3,v**2),GAPMul(-j**2,u**9)-GAPMul(j**2,u**10)-GAPMul(j**2,u**10),GAPMul(-j,u**5)+GAPMul(u**5,v**10),GAPMul(-j,u**42)-GAPMul(j,u**44)-GAPMul(j,u**44),GAPMul(-2,u**3)+GAPMul(u**3,v**12)-GAPMul(2,j**2)+GAPMul(u**4,v**12)-GAPMul(2,u**6)-GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(2,u**7)-GAPMul(2,u**7)+GAPMul(3,u**8)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**11)+GAPMul(u**12,v**3),GAPMul(-3,j)+GAPMul(2,u**2)-GAPMul(u**2,v**4)+GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(u**4,v**2),0,GAPMul(-u,v**2)-GAPMul(2,u)-GAPMul(3,u)-GAPMul(u**2,v)+GAPMul(5,u**2)-GAPMul(u**2,v**3)+GAPMul(3,u**2)-GAPMul(2,u**3)-GAPMul(u**3,v**2)-GAPMul(6,u**3)-GAPMul(u**3,w**3)-GAPMul(v**3,w**3)+GAPMul(3,u**4)-GAPMul(3,u**5)-GAPMul(u**5,w)-GAPMul(v**5,w)+u**6,GAPMul(-j,u**4)-GAPMul(j,u**4)-GAPMul(j,u**6),GAPMul(15,u**2)-GAPMul(16,u**3)-GAPMul(4,u**3)-GAPMul(4,v**3)+GAPMul(3,u**6),GAPMul(3,j)-GAPMul(5,j)+GAPMul(3,j),GAPMul(-u**6,v**15)-GAPMul(u**6,v**16)+GAPMul(u**6,v**19)-GAPMul(j,u**8)-GAPMul(j,u**8)+GAPMul(u**8,v**14)-GAPMul(u**9,v**16)+GAPMul(j,u**10)-GAPMul(j,u**11)+GAPMul(j,u**11)-GAPMul(j,u**11)+GAPMul(u**11,v**14)-GAPMul(u**11,v**16)-GAPMul(u**11,v**20)-GAPMul(j,u**12)-GAPMul(j,u**12)-GAPMul(u**12,v**15)-GAPMul(u**12,v**19)+GAPMul(u**14,v**8)-GAPMul(u**15,v**6)+GAPMul(u**15,v**8)-GAPMul(u**15,v**12)-GAPMul(u**15,v**16)-GAPMul(u**16,v**6)-GAPMul(u**16,v**9)-GAPMul(u**16,v**11)-GAPMul(u**16,v**15)+GAPMul(u**19,v**6)-GAPMul(u**19,v**12)-GAPMul(u**20,v**11)+GAPMul(u**23,v**8),GAPMul(j,u**10),0,GAPMul(-2,u)+GAPMul(u,v**6)-GAPMul(2,u**3)+GAPMul(6,u**3)-GAPMul(4,u**3)-GAPMul(6,u**3)-GAPMul(6,u**4)-GAPMul(2,u**4)-GAPMul(2,v**4)+GAPMul(u**6,v),GAPMul(-j**2,u**10)-GAPMul(j**2,u**12)-GAPMul(j**2,u**12),GAPMul(j**2,u**8)+GAPMul(j**2,u**8)-GAPMul(j**2,u**9)-GAPMul(2,j**2)+GAPMul(j**2,u**10)-GAPMul(2,j**2)+GAPMul(j**2,u**11),GAPMul(-u**26,v**28)-GAPMul(u**28,v**26)-GAPMul(u**28,v**28),GAPMul(2,u**3)+GAPMul(2,u**3),GAPMul(u**4,v**4),0,GAPMul(3,j**2)-GAPMul(5,j**2)+GAPMul(3,j**2),GAPMul(u**3,v**7)+GAPMul(u**3,v**8),GAPMul(j,u**40)+GAPMul(j,u**40)-GAPMul(j,u**41)-GAPMul(2,j)+GAPMul(j,u**41)-GAPMul(2,j)+GAPMul(j,u**43),GAPMul(-j,u**41)-GAPMul(j,u**42)-GAPMul(j,u**42),GAPMul(3,u**2)-GAPMul(2,u**2)+GAPMul(6,u**2)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(6,u**3)+GAPMul(6,u**4)-GAPMul(6,u**5)-GAPMul(2,u**5)-GAPMul(2,v**5)+GAPMul(u**6,v**2),GAPMul(9,j)+GAPMul(18,j),GAPMul(j**2,u**8)+GAPMul(j**2,u**8)-GAPMul(j**2,u**9)-GAPMul(2,j**2)+GAPMul(j**2,u**9)-GAPMul(2,j**2)+GAPMul(j**2,u**11),GAPMul(-j**2,u**33)-GAPMul(j**2,u**34)-GAPMul(j**2,u**34),GAPMul(u**6,v**6),GAPMul(j,u**40)+GAPMul(j,u**40)-GAPMul(j,u**41)-GAPMul(2,j)+GAPMul(j,u**42)-GAPMul(2,j)+GAPMul(j,u**43),GAPMul(j**2,u**8)+GAPMul(8,j**2),GAPMul(9,j**2)+GAPMul(18,j**2),GAPMul(-u**25,v**26)-GAPMul(u**26,v**25)-GAPMul(u**26,v**26),GAPMul(j,u**40)+GAPMul(4,j),GAPMul(2,u**3)+GAPMul(4,u**3),GAPMul(j**2,Mvp("d")),GAPMul(-j**2,u**34)-GAPMul(j**2,u**36)-GAPMul(j**2,u**36),GAPMul(-3,j),GAPMul(j**2,u**8)+GAPMul(4,j**2),GAPMul(-3,j**2),GAPMul(j,u**16)+GAPMul(j,u**16)-GAPMul(j,u**17)-GAPMul(2,j)+GAPMul(j,u**17)-GAPMul(2,j)+GAPMul(j,u**19),GAPMul(-j,u**17)-GAPMul(j,u**18)-GAPMul(j,u**18),GAPMul(8,u**3)+GAPMul(9,j**2),GAPMul(-2,j**2)+GAPMul(j**2,u**8)-GAPMul(2,j**2)+GAPMul(j**2,u**9)-GAPMul(2,j**2)+GAPMul(6,j**2)-GAPMul(4,j**2)-GAPMul(6,j**2)-GAPMul(2,j**2)-GAPMul(6,j**2)+GAPMul(j**2,u**14),0,GAPMul(-j,u**16)-GAPMul(j,u**16)+GAPMul(j,u**16)-GAPMul(j,u**17)-GAPMul(j,u**17)+GAPMul(j,u**17)-GAPMul(j,u**19)+GAPMul(3,j)-GAPMul(2,j)-GAPMul(3,j)-GAPMul(j,u**20)-GAPMul(j,u**20)+GAPMul(2,j)-GAPMul(2,j)-GAPMul(6,j)-GAPMul(j,u**21)-GAPMul(3,j)+GAPMul(j,u**23),GAPMul(8,u**6)+GAPMul(9,j),GAPMul(u**24,v**24)+GAPMul(4,u**24),GAPMul(j**2,u**8)+GAPMul(j**2,u**8),GAPMul(-j,u**18)-GAPMul(j,u**20)-GAPMul(j,u**20),GAPMul(-2,j**2)+GAPMul(j**2,u**8)-GAPMul(2,j**2)+GAPMul(6,j**2)-GAPMul(2,j**2)-GAPMul(4,j**2)-GAPMul(6,j**2)+GAPMul(6,j**2)-GAPMul(2,j**2)-GAPMul(6,j**2)+GAPMul(j**2,u**14),GAPMul(u**24,v**27)+GAPMul(u**24,v**28)-GAPMul(u**25,v**25)-GAPMul(2,u**25)+GAPMul(u**25,v**27)-GAPMul(2,u**26)+GAPMul(u**27,v**24),GAPMul(3,j)-GAPMul(5,j)+GAPMul(3,j),GAPMul(j**2,u**32)+GAPMul(j**2,u**32)-GAPMul(j**2,u**33)-GAPMul(2,j**2)+GAPMul(j**2,u**34)-GAPMul(2,j**2)+GAPMul(j**2,u**35),GAPMul(3,j**2)-GAPMul(5,j**2)+GAPMul(3,j**2),GAPMul(u**24,v**27)+GAPMul(u**24,v**29)-GAPMul(u**25,v**25)-GAPMul(2,u**25)+GAPMul(u**26,v**27)-GAPMul(2,u**27)+GAPMul(u**27,v**26),GAPMul(-3,u**10)+GAPMul(2,j**2)-GAPMul(j**2,u**10)+GAPMul(2,j**2)-GAPMul(2,j**2)-GAPMul(j**2,u**12),GAPMul(-2,j)+GAPMul(j,u**16)-GAPMul(2,j)+GAPMul(j,u**17)-GAPMul(2,j)+GAPMul(6,j)-GAPMul(4,j)-GAPMul(6,j)-GAPMul(2,j)-GAPMul(6,j)+GAPMul(j,u**22),GAPMul(-4,j**2)+GAPMul(3,j**2)-GAPMul(4,j**2)-GAPMul(16,j**2)+GAPMul(3,j**2),GAPMul(2,j**2)+GAPMul(j**2,u**8),GAPMul(2,j)+GAPMul(3,j),GAPMul(-3,u**12),GAPMul(9,j**2)+GAPMul(18,j**2),GAPMul(2,j**2)+GAPMul(3,j**2),GAPMul(-4,j)+GAPMul(3,j)-GAPMul(4,j)-GAPMul(16,j)+GAPMul(3,j),GAPMul(j**2,u**8)+GAPMul(8,j**2),GAPMul(2,j)+GAPMul(j,u**16),GAPMul(3,u**24)-GAPMul(5,u**25)+GAPMul(3,u**27),GAPMul(9,j)+GAPMul(18,j),GAPMul(j,u**16)+GAPMul(8,j),GAPMul(9,j**2)+GAPMul(18,j**2),GAPMul(45,j**2),GAPMul(u**24,v**24)+GAPMul(8,u**24),GAPMul(9,u**24)+GAPMul(18,u**24),GAPMul(9,j)+GAPMul(18,j),GAPMul(9,u**24)+GAPMul(18,u**24),GAPMul(45,j),GAPMul(45,u**24),GAPMul(45,j),GAPMul(45,j**2)]
    
    
    def f60a(u,v,w):
        return [60,GAPMul(18,u)+GAPMul(21,v),GAPMul(4,u)+GAPMul(4,u),GAPMul(14,u)+GAPMul(14,u),GAPMul(18,u**2)+GAPMul(21,v**2),GAPMul(-8,u)+GAPMul(2,u**3),GAPMul(5,u)+GAPMul(3,u),GAPMul(u,v),GAPMul(7,u)+GAPMul(7,u),GAPMul(-u,v)-GAPMul(u,v**2)-GAPMul(v**2,w**2),GAPMul(u**2,v**4)-GAPMul(u**2,v**7)-GAPMul(u**2,v**8)-GAPMul(u**2,v**9)-GAPMul(u**2,v**10)+GAPMul(u**2,v**13)-GAPMul(u**3,v**6)-GAPMul(u**3,v**7)-GAPMul(u**3,v**9)-GAPMul(u**3,v**10)+GAPMul(u**3,v**13)-GAPMul(u**6,v**3)+GAPMul(u**6,v**5)-GAPMul(u**6,v**6)-GAPMul(u**6,v**7)+GAPMul(u**6,v**8)-GAPMul(u**6,v**10)-GAPMul(u**7,v**3)+GAPMul(u**7,v**4)-GAPMul(u**7,v**6)+GAPMul(u**7,v**8)-GAPMul(u**7,v**9)+GAPMul(2,u**8)-GAPMul(u**9,v**2)+GAPMul(u**9,v**4)-GAPMul(u**9,v**8)-GAPMul(v**9,w**10)-GAPMul(u**10,v**2)-GAPMul(u**10,v**7)-GAPMul(v**10,w**9)+GAPMul(u**13,v**2),GAPMul(u,v)+GAPMul(u,v**2),0,GAPMul(14,u**2)+GAPMul(14,u**2),GAPMul(8,u**2)+GAPMul(8,u**2)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(7,v**3)-GAPMul(4,u**4)-GAPMul(4,u**4)-GAPMul(7,v**4)+GAPMul(2,u**7),GAPMul(-3,u)-GAPMul(3,u)+GAPMul(u,v**3)-GAPMul(2,u**2)+GAPMul(u**3,v),GAPMul(-4,u)+GAPMul(2,u)-GAPMul(4,u)-GAPMul(u,v**4)-GAPMul(u,w**4)-GAPMul(2,v)+GAPMul(3,u**2)-GAPMul(2,u**3)+GAPMul(v**3,w**2)-GAPMul(2,v**4)+v**5,0,GAPMul(-u**2,v**2)-GAPMul(u**2,v**4)-GAPMul(v**4,w**4),0,GAPMul(u**4,v**8)+GAPMul(u**4,v**9)-GAPMul(u**8,v**9)-GAPMul(u**9,v**8)-GAPMul(u**9,v**9)+GAPMul(u**13,v**4),GAPMul(-3,u)-GAPMul(3,u)+GAPMul(u**2,v**3)-GAPMul(2,u**3)+GAPMul(u**3,v**2),GAPMul(u**6,v**9)+GAPMul(u**7,v**8),GAPMul(u**5,v**5),GAPMul(u**30,v**39)+GAPMul(u**32,v**37),GAPMul(u**2,v**4)-GAPMul(2,u**2)-GAPMul(2,u**2)+GAPMul(u**2,v**12)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**3,v**12)-GAPMul(2,u**6)-GAPMul(3,u**6)-GAPMul(2,u**6)+GAPMul(2,u**7)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,v**9)+GAPMul(u**12,v**2),GAPMul(2,u)+GAPMul(2,u)-GAPMul(2,v**3),0,GAPMul(-u,v**2)-GAPMul(u,v**3)-GAPMul(2,u)-GAPMul(2,u)-GAPMul(2,v)-GAPMul(3,u**2)+GAPMul(8,u**2)-GAPMul(3,u**2)+GAPMul(4,u**2)-GAPMul(u**3,v)-GAPMul(u**3,v**2)-GAPMul(3,u**3)-GAPMul(3,u**3)-GAPMul(4,v**3)+GAPMul(3,u**4)-GAPMul(u**5,v)-GAPMul(u**5,w)-GAPMul(2,v**5)+v**6,0,GAPMul(24,u**2)-GAPMul(8,u**3)-GAPMul(8,u**3)-GAPMul(14,v**3)+GAPMul(2,u**6),GAPMul(-2,u**30)-GAPMul(2,u**30)+GAPMul(8,u**31)-GAPMul(2,u**33),GAPMul(u**4,v**8)-GAPMul(u**4,v**11)-GAPMul(u**4,v**12)-GAPMul(u**4,v**15)-GAPMul(u**4,v**16)+GAPMul(u**4,v**19)-GAPMul(u**6,v**9)+GAPMul(u**6,v**11)-GAPMul(u**6,v**16)+GAPMul(u**6,v**19)-GAPMul(u**9,v**6)+GAPMul(u**9,v**8)-GAPMul(u**9,v**16)-GAPMul(u**10,v**6)-GAPMul(u**10,v**10)-GAPMul(u**10,v**11)-GAPMul(u**10,v**15)+GAPMul(u**11,v**8)-GAPMul(u**11,v**10)+GAPMul(u**11,v**12)-GAPMul(u**15,v**4)+GAPMul(u**15,v**6)-GAPMul(u**15,v**12)-GAPMul(v**15,w**16)-GAPMul(u**16,v**4)-GAPMul(u**16,v**11)-GAPMul(v**16,w**15)+GAPMul(u**19,v**4),0,0,GAPMul(-6,u)+GAPMul(u,v**6)-GAPMul(2,u**3)+GAPMul(6,u**3)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(4,v**3)-GAPMul(2,u**4)-GAPMul(2,u**4)-GAPMul(4,v**4)+GAPMul(u**6,v),GAPMul(u**6,v**11)+GAPMul(u**8,v**9),GAPMul(-u**6,v**7)-GAPMul(u**6,v**12)+GAPMul(3,u**7)-GAPMul(u**8,v**7)-GAPMul(u**8,v**10)-GAPMul(u**9,v**7)+GAPMul(2,u**9)-GAPMul(u**9,v**9),GAPMul(u**18,v**25)+GAPMul(u**20,v**23),GAPMul(u**2,v**4)+GAPMul(2,u**2)-GAPMul(2,u**4)+GAPMul(u**4,v**6)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(u**6,v**2)-GAPMul(u**6,v**4)+GAPMul(u**6,v**6),0,0,GAPMul(-2,u**6)-GAPMul(2,u**6)+GAPMul(8,u**7)-GAPMul(2,u**9),GAPMul(u**2,v**4)+GAPMul(u**2,v**5)-GAPMul(u**4,v**5)+GAPMul(u**4,v**7)-GAPMul(u**5,v**4)-GAPMul(u**5,v**5)+GAPMul(u**7,v**2),GAPMul(-u**30,v**35)-GAPMul(u**30,v**39)-GAPMul(u**31,v**35)+GAPMul(3,u**31)-GAPMul(u**31,v**38)+GAPMul(2,u**32)-GAPMul(u**33,v**35)-GAPMul(u**33,v**36),GAPMul(u**30,v**37)+GAPMul(u**31,v**36),GAPMul(9,u**2)-GAPMul(6,u**2)+GAPMul(9,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(4,v**3)+GAPMul(6,u**4)-GAPMul(2,u**5)-GAPMul(2,u**5)-GAPMul(4,v**5)+GAPMul(u**6,v**2),GAPMul(-21,u**30)-GAPMul(21,u**30)-GAPMul(18,u**31),GAPMul(-u**6,v**7)-GAPMul(u**6,v**11)-GAPMul(u**7,v**7)+GAPMul(3,u**7)-GAPMul(u**7,v**10)+GAPMul(2,u**8)-GAPMul(u**9,v**7)-GAPMul(u**9,v**8),GAPMul(-u**24,v**30)-GAPMul(u**25,v**29)-GAPMul(u**25,v**30),0,GAPMul(-u**30,v**35)-GAPMul(u**30,v**40)+GAPMul(3,u**31)-GAPMul(u**32,v**35)-GAPMul(u**32,v**38)-GAPMul(u**33,v**35)+GAPMul(2,u**33)-GAPMul(u**33,v**37),GAPMul(-8,u**6)-GAPMul(12,u**6)-GAPMul(8,u**6)-GAPMul(14,u**8)-GAPMul(14,u**8)-GAPMul(4,u**10),GAPMul(-21,u**6)-GAPMul(21,u**6)-GAPMul(18,u**8),GAPMul(u**18,v**23)+GAPMul(u**19,v**22),GAPMul(-8,u**30)-GAPMul(6,u**30)-GAPMul(6,u**30)-GAPMul(8,u**30)-GAPMul(7,u**31)-GAPMul(7,u**31)-GAPMul(7,u**32)-GAPMul(7,u**32)-GAPMul(4,u**33),GAPMul(3,u**2)+GAPMul(2,u**2)-GAPMul(3,u**4)-GAPMul(3,u**4)+GAPMul(2,u**4)-GAPMul(3,u**5)+GAPMul(2,u**6),0,GAPMul(-u**24,v**32)-GAPMul(u**26,v**30)-GAPMul(u**26,v**32),0,GAPMul(-8,u**6)-GAPMul(6,u**6)-GAPMul(6,u**6)-GAPMul(8,u**6)-GAPMul(7,u**7)-GAPMul(7,u**7)-GAPMul(7,u**8)-GAPMul(7,u**8)-GAPMul(4,u**9),0,GAPMul(u**12,v**14)+GAPMul(u**12,v**18)-GAPMul(3,u**13)-GAPMul(3,u**13)+GAPMul(u**13,v**17)-GAPMul(2,u**14)+GAPMul(u**15,v**14),GAPMul(-u**12,v**16)-GAPMul(u**13,v**15)-GAPMul(u**13,v**16),GAPMul(6,u**2)+GAPMul(6,u**2)-GAPMul(9,u**4)+GAPMul(6,u**6),GAPMul(-u**6,v**7)+GAPMul(4,u**6)-GAPMul(u**6,v**14)-GAPMul(u**7,v**7)+GAPMul(6,u**7)-GAPMul(u**7,v**13)-GAPMul(9,u**8)-GAPMul(9,u**8)+GAPMul(4,u**9)-GAPMul(6,u**9)+GAPMul(2,u**9)-GAPMul(u**12,v**7)-GAPMul(u**12,v**8),0,GAPMul(u**12,v**14)-GAPMul(2,u**12)-GAPMul(4,u**12)-GAPMul(2,u**12)+GAPMul(u**12,v**22)-GAPMul(3,u**13)-GAPMul(3,u**13)+GAPMul(u**13,v**21)-GAPMul(2,u**15)-GAPMul(u**15,v**15)+GAPMul(5,u**15)-GAPMul(u**15,v**18)-GAPMul(2,u**15)-GAPMul(3,u**16)-GAPMul(u**16,v**15)+GAPMul(2,u**16)-GAPMul(u**16,v**17)-GAPMul(3,u**16)-GAPMul(u**17,v**14)-GAPMul(u**17,v**17)+GAPMul(u**19,v**14),GAPMul(6,u**4)+GAPMul(6,u**4)-GAPMul(9,u**8)+GAPMul(6,u**12),GAPMul(-8,u**18)-GAPMul(6,u**18)-GAPMul(6,u**18)-GAPMul(8,u**18)-GAPMul(7,u**19)-GAPMul(7,u**19)-GAPMul(7,u**20)-GAPMul(7,u**20)-GAPMul(4,u**21),GAPMul(-u**6,v**7)-GAPMul(2,u**6)-GAPMul(2,u**6)-GAPMul(u**6,v**11)-GAPMul(2,u**7)-GAPMul(u**7,v**8)-GAPMul(u**7,v**9)-GAPMul(2,u**7)-GAPMul(2,u**8)-GAPMul(3,u**8)-GAPMul(2,u**8)-GAPMul(u**9,v**7)-GAPMul(u**9,v**8),GAPMul(-u**12,v**18)-GAPMul(u**14,v**16)-GAPMul(u**14,v**18),GAPMul(-u**6,v**7)+GAPMul(4,u**6)-GAPMul(u**6,v**15)-GAPMul(u**8,v**7)-GAPMul(9,u**8)+GAPMul(6,u**8)-GAPMul(9,u**8)-GAPMul(u**8,v**13)+GAPMul(4,u**9)-GAPMul(6,u**10)+GAPMul(2,u**11)-GAPMul(u**12,v**7)-GAPMul(u**12,v**9),GAPMul(-u**18,v**21)-GAPMul(u**18,v**25)-GAPMul(u**19,v**21)+GAPMul(3,u**19)-GAPMul(u**19,v**24)+GAPMul(2,u**20)-GAPMul(u**21,v**21)-GAPMul(u**21,v**22),GAPMul(2,u**12)+GAPMul(2,u**12)-GAPMul(8,u**13)+GAPMul(2,u**15),GAPMul(u**24,v**28)+GAPMul(u**24,v**33)-GAPMul(3,u**25)-GAPMul(3,u**25)+GAPMul(u**26,v**28)-GAPMul(2,u**27)+GAPMul(u**27,v**30),GAPMul(2,u**24)+GAPMul(2,u**24)-GAPMul(8,u**25)+GAPMul(2,u**27),GAPMul(-u**18,v**21)-GAPMul(u**18,v**26)+GAPMul(3,u**19)-GAPMul(u**20,v**21)-GAPMul(u**20,v**24)-GAPMul(u**21,v**21)+GAPMul(2,u**21)-GAPMul(u**21,v**23),GAPMul(2,u**6)-GAPMul(2,u**7)-GAPMul(2,u**7)-GAPMul(3,u**8)-GAPMul(2,u**9)-GAPMul(2,u**9),GAPMul(u**12,v**14)-GAPMul(4,u**12)-GAPMul(4,u**12)+GAPMul(u**12,v**21)-GAPMul(6,u**13)+GAPMul(u**13,v**20)-GAPMul(4,u**15)-GAPMul(2,u**15)+GAPMul(6,u**15)-GAPMul(2,u**15)-GAPMul(4,u**15)-GAPMul(2,u**16)-GAPMul(2,u**16)+GAPMul(u**18,v**14),GAPMul(-2,u**6)+GAPMul(14,u**6)-GAPMul(2,u**6)-GAPMul(24,u**8)+GAPMul(8,u**9)-GAPMul(2,u**12),GAPMul(-u**6,v**7)-GAPMul(2,u**6)-GAPMul(2,u**6)-GAPMul(u**6,v**10)-GAPMul(3,u**7)-GAPMul(5,u**7)-GAPMul(3,u**7)-GAPMul(2,u**8)-GAPMul(2,u**8),GAPMul(2,u**12)+GAPMul(7,u**12),0,GAPMul(21,u**24)+GAPMul(21,u**24),GAPMul(-2,u**6)-GAPMul(7,u**6)-GAPMul(2,u**6)-GAPMul(4,u**7)-GAPMul(4,u**7)-GAPMul(2,u**8),GAPMul(2,u**12)-GAPMul(14,u**12)+GAPMul(2,u**12)-GAPMul(8,u**15)-GAPMul(8,u**15)+GAPMul(2,u**18),GAPMul(-8,u**6)-GAPMul(12,u**6)-GAPMul(8,u**6)-GAPMul(14,u**7)-GAPMul(14,u**7)-GAPMul(4,u**8),GAPMul(u**12,v**14)+GAPMul(2,u**12),GAPMul(-2,u**18)-GAPMul(2,u**18)+GAPMul(8,u**19)-GAPMul(2,u**21),GAPMul(-21,u**30)-GAPMul(21,u**30)-GAPMul(18,u**32),GAPMul(8,u**12)+GAPMul(12,u**12),GAPMul(-21,u**6)-GAPMul(21,u**6)-GAPMul(18,u**7),GAPMul(-60,u**6),GAPMul(-8,u**18)-GAPMul(12,u**18)-GAPMul(8,u**18)-GAPMul(14,u**19)-GAPMul(14,u**19)-GAPMul(4,u**20),GAPMul(-21,u**18)-GAPMul(21,u**18)-GAPMul(18,u**20),GAPMul(21,u**12)+GAPMul(21,u**12),GAPMul(-21,u**18)-GAPMul(21,u**18)-GAPMul(18,u**19),GAPMul(-60,u**30),GAPMul(-60,u**18),GAPMul(60,u**12),GAPMul(60,u**24)]
    
    
    def f60b(u,v,w):
        return [60,GAPMul(24,u)+GAPMul(18,v),GAPMul(6,u)+GAPMul(6,u),GAPMul(16,u)+GAPMul(16,u),GAPMul(24,u**2)+GAPMul(18,v**2),GAPMul(-7,u)+GAPMul(5,u**3),GAPMul(6,u)+GAPMul(3,u),GAPMul(u,v)+GAPMul(u**2,v),GAPMul(8,u)+GAPMul(8,u),GAPMul(-u,v)-GAPMul(u,v**2)-GAPMul(u**2,v),GAPMul(u**3,v**3)-GAPMul(u**3,v**6)-GAPMul(u**3,v**7)-GAPMul(u**3,v**9)-GAPMul(u**3,v**10)+GAPMul(u**3,v**13)-GAPMul(u**6,v**3)+GAPMul(u**6,v**5)-GAPMul(u**6,v**6)-GAPMul(u**6,v**7)+GAPMul(u**6,v**8)-GAPMul(u**6,v**10)-GAPMul(u**7,v**3)+GAPMul(u**7,v**4)-GAPMul(u**7,v**6)+GAPMul(u**7,v**8)-GAPMul(u**7,v**9)+GAPMul(2,u**8)-GAPMul(u**9,v**2)-GAPMul(u**9,v**3)+GAPMul(u**9,v**4)-GAPMul(u**9,v**7)-GAPMul(u**9,v**8)-GAPMul(u**10,v**2)-GAPMul(u**10,v**3)-GAPMul(u**10,v**6)-GAPMul(u**10,v**7)-GAPMul(u**11,v**8)-GAPMul(u**11,w**8)-GAPMul(u**12,v**7)-GAPMul(u**12,w**7)+GAPMul(u**13,v**2),GAPMul(2,u)+GAPMul(2,u),0,GAPMul(16,u**2)+GAPMul(16,u**2),GAPMul(7,u**2)+GAPMul(7,u**2)-GAPMul(6,u**3)-GAPMul(6,u**3)-GAPMul(4,v**3)-GAPMul(6,u**4)-GAPMul(6,u**4)-GAPMul(4,v**4)+GAPMul(5,u**7),GAPMul(-2,u)-GAPMul(2,u)+GAPMul(u,v**3)-GAPMul(3,u**2)+GAPMul(2,u**3),GAPMul(-4,u)+GAPMul(3,u)-GAPMul(4,u)-GAPMul(u,v**4)-GAPMul(u,w**4)-GAPMul(v,w**4)+GAPMul(2,u**2)-GAPMul(4,u**3)+GAPMul(u**3,v**2)-GAPMul(v**4,w)+u**5,0,GAPMul(-u**2,v**2)-GAPMul(u**2,v**4)-GAPMul(u**4,v**2),0,GAPMul(u**6,v**6)+GAPMul(u**6,v**7)-GAPMul(u**8,v**9)-GAPMul(u**9,v**8)-GAPMul(u**9,v**9)+GAPMul(u**13,v**4),GAPMul(-2,u)-GAPMul(2,u)+GAPMul(u**2,v**3)-GAPMul(3,u**3)+GAPMul(2,u**3),GAPMul(-u**9,v**7)-GAPMul(u**9,v**8)-GAPMul(u**10,v**7),GAPMul(u**5,v**5)+GAPMul(u**10,v**5),GAPMul(-u**42,v**32)-GAPMul(u**42,v**34)-GAPMul(u**44,v**32),GAPMul(u**3,v**3)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**3,v**12)-GAPMul(2,u**6)-GAPMul(3,u**6)-GAPMul(2,u**6)+GAPMul(2,u**7)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(u**12,v**2),GAPMul(3,u**2)+GAPMul(2,u**3)-GAPMul(u**4,v**2)-GAPMul(u**4,w**2),0,GAPMul(-2,u)-GAPMul(2,u)-GAPMul(2,u)-GAPMul(2,u)-GAPMul(v,w**5)-GAPMul(2,u**2)+GAPMul(7,u**2)-GAPMul(2,u**2)+GAPMul(3,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,v**3)+GAPMul(5,u**4)-GAPMul(2,u**5)-GAPMul(2,u**5)-GAPMul(v**5,w)+u**6,GAPMul(u**4,v**3)+GAPMul(u**4,v**5),GAPMul(21,u**2)-GAPMul(12,u**3)-GAPMul(12,u**3)-GAPMul(8,v**3)+GAPMul(5,u**6),GAPMul(u**40,v**30)+GAPMul(u**40,v**33)-GAPMul(7,u**41)+GAPMul(5,u**43),GAPMul(u**6,v**6)-GAPMul(u**6,v**9)-GAPMul(u**6,v**10)-GAPMul(u**6,v**15)-GAPMul(u**6,v**16)+GAPMul(u**6,v**19)-GAPMul(u**9,v**6)+GAPMul(u**9,v**8)-GAPMul(u**9,v**16)-GAPMul(u**10,v**6)-GAPMul(u**10,v**10)-GAPMul(u**10,v**11)-GAPMul(u**10,v**15)+GAPMul(u**11,v**8)-GAPMul(u**11,v**10)+GAPMul(u**11,v**12)-GAPMul(u**15,v**4)+GAPMul(u**15,v**8)-GAPMul(u**15,v**12)-GAPMul(u**16,v**4)-GAPMul(u**16,v**6)-GAPMul(u**16,v**9)-GAPMul(u**16,v**11)+GAPMul(u**19,v**4)-GAPMul(u**19,v**12)-GAPMul(u**19,w**12)-GAPMul(u**20,v**11)-GAPMul(u**20,w**11)+GAPMul(u**23,v**8),0,0,GAPMul(-4,u)+GAPMul(u,v**6)-GAPMul(4,u**3)+GAPMul(9,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,v**3)-GAPMul(4,u**4)-GAPMul(4,u**4)-GAPMul(2,v**4)+GAPMul(2,u**6),GAPMul(-u**10,v**8)-GAPMul(u**10,v**10)-GAPMul(u**12,v**8),GAPMul(-2,u**9)-GAPMul(2,u**9)+GAPMul(u**10,v**6)-GAPMul(3,u**11)+GAPMul(2,u**11),GAPMul(-u**26,v**20)-GAPMul(u**26,v**22)-GAPMul(u**28,v**20),GAPMul(2,u**3)+GAPMul(2,u**3)-GAPMul(2,u**4)+GAPMul(u**4,v**6)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(u**6,v**2),GAPMul(u**4,v**3),0,GAPMul(u**8,v**6)+GAPMul(u**8,v**9)-GAPMul(7,u**9)+GAPMul(5,u**11),GAPMul(u**3,v**3)+GAPMul(u**3,v**4)-GAPMul(u**4,v**5)+GAPMul(u**4,v**7)-GAPMul(u**5,v**4)-GAPMul(u**5,v**5)+GAPMul(u**7,v**2),GAPMul(u**41,v**30)-GAPMul(2,u**41)-GAPMul(2,u**41)+GAPMul(u**41,v**33)-GAPMul(3,u**42)+GAPMul(2,u**43),GAPMul(-u**41,v**31)-GAPMul(u**41,v**32)-GAPMul(u**42,v**31),GAPMul(6,u**2)-GAPMul(4,u**2)+GAPMul(6,u**2)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,v**3)+GAPMul(9,u**4)-GAPMul(4,u**5)-GAPMul(4,u**5)-GAPMul(2,v**5)+GAPMul(2,u**6),GAPMul(18,u**40)+GAPMul(18,u**40),GAPMul(u**9,v**6)-GAPMul(2,u**9)-GAPMul(2,u**9)+GAPMul(u**9,v**9)-GAPMul(3,u**10)+GAPMul(2,u**11),GAPMul(-u**33,v**25)-GAPMul(u**33,v**26)-GAPMul(u**34,v**25),0,GAPMul(-2,u**41)-GAPMul(2,u**41)+GAPMul(u**42,v**30)-GAPMul(3,u**43)+GAPMul(2,u**43),GAPMul(5,u**8)+GAPMul(10,u**8),GAPMul(18,u**8)+GAPMul(18,u**8),GAPMul(-u**25,v**19)-GAPMul(u**25,v**20)-GAPMul(u**26,v**19),GAPMul(5,u**40)+GAPMul(5,u**40),GAPMul(4,u**3)+GAPMul(2,u**3)-GAPMul(3,u**4)-GAPMul(3,u**4)+GAPMul(2,u**4)-GAPMul(3,u**5)+GAPMul(2,u**6),GAPMul(u**12,v**9),GAPMul(-u**34,v**26)-GAPMul(u**34,v**28)-GAPMul(u**36,v**26),GAPMul(4,u**4),GAPMul(5,u**8)+GAPMul(5,u**8),GAPMul(4,u**20),GAPMul(u**17,v**12)-GAPMul(2,u**17)-GAPMul(2,u**17)+GAPMul(u**17,v**15)-GAPMul(3,u**18)+GAPMul(2,u**19),GAPMul(-u**17,v**13)-GAPMul(u**17,v**14)-GAPMul(u**18,v**13),GAPMul(8,u**3)+GAPMul(8,u**3)-GAPMul(9,u**4)+GAPMul(6,u**6),GAPMul(-2,u**8)-GAPMul(2,u**8)+GAPMul(u**9,v**6)-GAPMul(4,u**9)+GAPMul(u**9,v**12)-GAPMul(4,u**11)-GAPMul(4,u**11)+GAPMul(9,u**11)-GAPMul(4,u**11)-GAPMul(4,u**11)-GAPMul(4,u**12)-GAPMul(4,u**12)+GAPMul(2,u**14),0,GAPMul(-u**16,v**15)-GAPMul(2,u**16)-GAPMul(u**16,v**17)+GAPMul(u**17,v**12)-GAPMul(2,u**17)-GAPMul(2,u**17)+GAPMul(u**17,v**19)-GAPMul(2,u**19)-GAPMul(2,u**19)+GAPMul(5,u**19)-GAPMul(2,u**19)-GAPMul(2,u**19)-GAPMul(4,u**20)-GAPMul(2,u**20)+GAPMul(3,u**20)-GAPMul(2,u**20)-GAPMul(4,u**20)-GAPMul(2,u**21)-GAPMul(2,u**21)+GAPMul(2,u**23),GAPMul(8,u**6)+GAPMul(8,u**6)-GAPMul(9,u**8)+GAPMul(6,u**12),GAPMul(5,u**24)+GAPMul(5,u**24),GAPMul(u**8,v**7)+GAPMul(u**8,v**9),GAPMul(-u**18,v**14)-GAPMul(u**18,v**16)-GAPMul(u**20,v**14),GAPMul(-2,u**8)-GAPMul(2,u**8)+GAPMul(u**10,v**6)-GAPMul(4,u**10)+GAPMul(6,u**10)-GAPMul(4,u**11)-GAPMul(4,u**11)-GAPMul(4,u**11)-GAPMul(4,u**11)+GAPMul(9,u**12)-GAPMul(4,u**13)-GAPMul(4,u**13)+GAPMul(2,u**14),GAPMul(u**25,v**18)-GAPMul(2,u**25)-GAPMul(2,u**25)+GAPMul(u**25,v**21)-GAPMul(3,u**26)+GAPMul(2,u**27),GAPMul(u**16,v**12)+GAPMul(u**16,v**15)-GAPMul(7,u**17)+GAPMul(5,u**19),GAPMul(-2,u**33)-GAPMul(2,u**33)+GAPMul(u**34,v**24)-GAPMul(3,u**35)+GAPMul(2,u**35),GAPMul(u**32,v**24)+GAPMul(u**32,v**27)-GAPMul(7,u**33)+GAPMul(5,u**35),GAPMul(-2,u**25)-GAPMul(2,u**25)+GAPMul(u**26,v**18)-GAPMul(3,u**27)+GAPMul(2,u**27),GAPMul(3,u**10)+GAPMul(2,u**11)-GAPMul(u**12,v**6)-GAPMul(u**12,v**8),GAPMul(-2,u**16)-GAPMul(2,u**16)+GAPMul(u**17,v**12)-GAPMul(4,u**17)+GAPMul(u**17,v**18)-GAPMul(4,u**19)-GAPMul(4,u**19)+GAPMul(9,u**19)-GAPMul(4,u**19)-GAPMul(4,u**19)-GAPMul(4,u**20)-GAPMul(4,u**20)+GAPMul(2,u**22),GAPMul(u**8,v**6)-GAPMul(8,u**8)+GAPMul(u**8,v**12)-GAPMul(12,u**11)-GAPMul(12,u**11)+GAPMul(5,u**14),GAPMul(u**8,v**7)+GAPMul(u**8,v**8),GAPMul(u**16,v**12)+GAPMul(4,u**16),GAPMul(4,u**12),GAPMul(18,u**32)+GAPMul(18,u**32),GAPMul(u**8,v**6)+GAPMul(4,u**8),GAPMul(u**16,v**12)-GAPMul(8,u**16)+GAPMul(u**16,v**18)-GAPMul(12,u**19)-GAPMul(12,u**19)+GAPMul(5,u**22),GAPMul(5,u**8)+GAPMul(10,u**8),GAPMul(u**16,v**13)+GAPMul(u**16,v**14),GAPMul(u**24,v**18)+GAPMul(u**24,v**21)-GAPMul(7,u**25)+GAPMul(5,u**27),GAPMul(18,u**40)+GAPMul(18,u**40),GAPMul(5,u**16)+GAPMul(10,u**16),GAPMul(18,u**8)+GAPMul(18,u**8),GAPMul(60,u**8),GAPMul(5,u**24)+GAPMul(10,u**24),GAPMul(18,u**24)+GAPMul(18,u**24),GAPMul(18,u**16)+GAPMul(18,u**16),GAPMul(18,u**24)+GAPMul(18,u**24),GAPMul(60,u**40),GAPMul(60,u**24),GAPMul(60,u**16),GAPMul(60,u**32)]
    
    
    def f60c(u,v,w):
        return [60,GAPMul(24,u)+GAPMul(21,v),GAPMul(8,u)+GAPMul(4,u),GAPMul(16,u)+GAPMul(12,u),GAPMul(24,u**2)+GAPMul(21,v**2),GAPMul(-8,u)+GAPMul(4,u**3),GAPMul(4,u)+GAPMul(4,u),GAPMul(u**2,v),GAPMul(8,u)+GAPMul(6,u),GAPMul(-u,v**2)-GAPMul(u**2,v)-GAPMul(u**2,v**2),GAPMul(-u**3,v**9)-GAPMul(u**3,v**10)+GAPMul(u**3,v**13)-GAPMul(u**6,v**10)+GAPMul(u**7,v**4)-GAPMul(u**7,v**9)-GAPMul(u**7,v**10)+GAPMul(2,u**8)-GAPMul(u**8,v**9)-GAPMul(u**9,v**2)-GAPMul(u**9,v**3)+GAPMul(u**9,v**4)-GAPMul(u**9,v**7)-GAPMul(u**9,v**8)-GAPMul(u**9,v**10)-GAPMul(u**10,v**2)-GAPMul(u**10,v**3)-GAPMul(u**10,v**6)-GAPMul(u**10,v**7)-GAPMul(u**10,v**9)-GAPMul(u**11,v**8)-GAPMul(u**12,v**7)+GAPMul(u**13,v**2),GAPMul(2,u)+GAPMul(u,v**2),0,GAPMul(16,u**2)+GAPMul(12,u**2),GAPMul(8,u**2)+GAPMul(8,u**2)-GAPMul(8,u**3)-GAPMul(4,u**3)-GAPMul(3,v**3)-GAPMul(8,u**4)-GAPMul(4,u**4)-GAPMul(3,v**4)+GAPMul(4,u**7),GAPMul(-2,u)-GAPMul(3,u)+GAPMul(u,v**3)-GAPMul(3,u**2)+GAPMul(u**3,v),GAPMul(-2,u)+GAPMul(3,u)-GAPMul(3,u)-GAPMul(2,u)-GAPMul(u,w**4)-GAPMul(v,w**4)+GAPMul(3,u**2)-GAPMul(3,u**3)+GAPMul(2,u**3)-GAPMul(2,u**4)-GAPMul(u**4,w)-GAPMul(v**4,w)+GAPMul(2,u**5),0,GAPMul(-u**2,v**4)-GAPMul(u**4,v**2)-GAPMul(u**4,v**4),0,GAPMul(u**6,v**13)+GAPMul(u**6,v**14)-GAPMul(u**8,v**9)+GAPMul(u**8,v**14)-GAPMul(u**9,v**8)-GAPMul(u**9,v**9)+GAPMul(u**9,v**13),GAPMul(-2,u)-GAPMul(3,u)+GAPMul(u**2,v**3)-GAPMul(3,u**3)+GAPMul(u**3,v**2),GAPMul(u**9,v**9)+GAPMul(u**10,v**8),GAPMul(u**10,v**5),GAPMul(u**42,v**39)+GAPMul(u**44,v**37),GAPMul(-2,u**3)+GAPMul(u**3,v**12)-GAPMul(2,u**6)+GAPMul(2,u**7)-GAPMul(2,u**7)+GAPMul(3,u**8)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**9)-GAPMul(2,u**11)+GAPMul(u**12,v**2),GAPMul(6,u**2)+GAPMul(2,u**2)-GAPMul(2,u**3)-GAPMul(u**4,v**2),0,GAPMul(-u,v**2)-GAPMul(2,u)-GAPMul(3,u)-GAPMul(u,w**5)-GAPMul(v,w**5)-GAPMul(u**2,v)+GAPMul(8,u**2)-GAPMul(u**2,v**3)+GAPMul(4,u**2)-GAPMul(2,u**3)-GAPMul(u**3,v**2)-GAPMul(6,u**3)-GAPMul(3,u**3)-GAPMul(2,v**3)+GAPMul(4,u**4)-GAPMul(3,u**5)-GAPMul(2,u**5)-GAPMul(v**5,w)+GAPMul(2,u**6),0,GAPMul(24,u**2)-GAPMul(16,u**3)-GAPMul(8,u**3)-GAPMul(6,v**3)+GAPMul(4,u**6),GAPMul(-2,u**40)+GAPMul(8,u**41)-GAPMul(4,u**43),GAPMul(-u**6,v**15)-GAPMul(u**6,v**16)+GAPMul(u**6,v**19)-GAPMul(u**9,v**16)+GAPMul(u**10,v**14)-GAPMul(u**11,v**16)+GAPMul(u**12,v**8)-GAPMul(u**12,v**15)+GAPMul(u**14,v**6)-GAPMul(u**15,v**4)+GAPMul(u**15,v**8)-GAPMul(u**15,v**12)-GAPMul(u**15,v**16)-GAPMul(u**16,v**4)-GAPMul(u**16,v**6)-GAPMul(u**16,v**9)-GAPMul(u**16,v**11)-GAPMul(u**16,v**15)+GAPMul(u**19,v**4)-GAPMul(u**19,v**12)-GAPMul(u**20,v**11)+GAPMul(u**23,v**8),0,0,GAPMul(-2,u)+GAPMul(u,v**6)-GAPMul(2,u**3)+GAPMul(9,u**3)-GAPMul(4,u**3)-GAPMul(6,u**3)-GAPMul(2,u**3)-GAPMul(2,v**3)-GAPMul(6,u**4)-GAPMul(4,u**4)-GAPMul(2,v**4)+GAPMul(u**6,v),GAPMul(u**10,v**11)+GAPMul(u**12,v**9),GAPMul(-u**8,v**12)+GAPMul(2,u**9)-GAPMul(u**10,v**10)-GAPMul(u**11,v**7)+GAPMul(3,u**11)-GAPMul(u**11,v**9)-GAPMul(2,u**13),GAPMul(u**26,v**25)+GAPMul(u**28,v**23),GAPMul(2,u**3)+GAPMul(2,u**3)-GAPMul(2,u**4)+GAPMul(2,u**4)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(2,u**5),0,0,GAPMul(-2,u**8)+GAPMul(8,u**9)-GAPMul(4,u**11),GAPMul(u**3,v**7)+GAPMul(u**3,v**8)-GAPMul(u**4,v**5)+GAPMul(u**4,v**7)-GAPMul(u**5,v**4)-GAPMul(u**5,v**5)+GAPMul(u**5,v**7),GAPMul(-u**40,v**39)+GAPMul(2,u**41)-GAPMul(u**41,v**38)+GAPMul(3,u**42)-GAPMul(u**43,v**35)-GAPMul(u**43,v**36)-GAPMul(2,u**44),GAPMul(u**41,v**37)+GAPMul(u**42,v**36),GAPMul(6,u**2)-GAPMul(2,u**2)+GAPMul(9,u**2)-GAPMul(2,u**3)-GAPMul(4,u**3)-GAPMul(6,u**3)-GAPMul(2,u**3)-GAPMul(2,v**3)+GAPMul(9,u**4)-GAPMul(6,u**5)-GAPMul(4,u**5)-GAPMul(2,v**5)+GAPMul(u**6,v**2),GAPMul(-15,u**40)-GAPMul(21,u**40)-GAPMul(24,u**41),GAPMul(-u**8,v**11)+GAPMul(2,u**9)-GAPMul(u**9,v**10)+GAPMul(3,u**10)-GAPMul(u**11,v**7)-GAPMul(u**11,v**8)-GAPMul(2,u**12),GAPMul(-u**33,v**30)-GAPMul(u**34,v**29)-GAPMul(u**34,v**30),0,GAPMul(-u**40,v**40)+GAPMul(2,u**41)-GAPMul(u**42,v**38)-GAPMul(u**43,v**35)+GAPMul(3,u**43)-GAPMul(u**43,v**37)-GAPMul(2,u**45),GAPMul(-4,u**8)-GAPMul(10,u**8)-GAPMul(8,u**8)-GAPMul(12,u**10)-GAPMul(16,u**10)-GAPMul(10,u**12),GAPMul(-15,u**8)-GAPMul(21,u**8)-GAPMul(24,u**10),GAPMul(u**25,v**23)+GAPMul(u**26,v**22),GAPMul(-4,u**40)-GAPMul(5,u**40)-GAPMul(5,u**40)-GAPMul(8,u**40)-GAPMul(6,u**41)-GAPMul(8,u**41)-GAPMul(6,u**42)-GAPMul(8,u**42)-GAPMul(10,u**43),GAPMul(2,u**3)+GAPMul(4,u**3)-GAPMul(2,u**4)-GAPMul(2,u**4)+GAPMul(3,u**4)-GAPMul(2,u**5)+GAPMul(2,u**5),0,GAPMul(-u**34,v**32)-GAPMul(u**36,v**30)-GAPMul(u**36,v**32),0,GAPMul(-4,u**8)-GAPMul(5,u**8)-GAPMul(5,u**8)-GAPMul(8,u**8)-GAPMul(6,u**9)-GAPMul(8,u**9)-GAPMul(6,u**10)-GAPMul(8,u**10)-GAPMul(10,u**11),0,GAPMul(u**16,v**18)-GAPMul(2,u**17)-GAPMul(3,u**17)+GAPMul(u**17,v**17)-GAPMul(3,u**18)+GAPMul(u**19,v**14),GAPMul(-u**17,v**16)-GAPMul(u**18,v**15)-GAPMul(u**18,v**16),GAPMul(8,u**3)-GAPMul(6,u**4)+GAPMul(6,u**4),GAPMul(2,u**8)+GAPMul(2,u**8)-GAPMul(u**8,v**14)+GAPMul(2,u**9)-GAPMul(u**9,v**13)-GAPMul(6,u**10)-GAPMul(9,u**10)+GAPMul(2,u**11)-GAPMul(9,u**11)+GAPMul(4,u**11)-GAPMul(u**14,v**7)-GAPMul(u**14,v**8)-GAPMul(2,u**15),0,GAPMul(-u**16,v**17)-GAPMul(2,u**16)-GAPMul(u**16,v**19)+GAPMul(u**16,v**22)-GAPMul(u**17,v**17)-GAPMul(u**17,v**18)+GAPMul(u**17,v**21)-GAPMul(u**19,v**14)-GAPMul(u**19,v**15)+GAPMul(5,u**19)-GAPMul(2,u**19)-GAPMul(3,u**19)-GAPMul(3,u**20)-GAPMul(u**20,v**15)+GAPMul(3,u**20)-GAPMul(2,u**20)-GAPMul(6,u**20)-GAPMul(2,u**21)-GAPMul(3,u**21)+GAPMul(u**23,v**14),GAPMul(8,u**6)-GAPMul(6,u**8)+GAPMul(6,u**8),GAPMul(-4,u**24)-GAPMul(5,u**24)-GAPMul(5,u**24)-GAPMul(8,u**24)-GAPMul(6,u**25)-GAPMul(8,u**25)-GAPMul(6,u**26)-GAPMul(8,u**26)-GAPMul(10,u**27),GAPMul(-u**8,v**8)-GAPMul(u**8,v**10)-GAPMul(u**8,v**11)-GAPMul(u**9,v**7)-GAPMul(2,u**9)-GAPMul(u**9,v**9)-GAPMul(3,u**9)-GAPMul(u**10,v**7)-GAPMul(u**10,v**8)-GAPMul(2,u**10)-GAPMul(2,u**11)-GAPMul(3,u**11)-GAPMul(2,u**12),GAPMul(-u**18,v**18)-GAPMul(u**20,v**16)-GAPMul(u**20,v**18),GAPMul(2,u**8)+GAPMul(2,u**8)-GAPMul(u**8,v**15)-GAPMul(6,u**10)+GAPMul(2,u**10)-GAPMul(9,u**10)-GAPMul(u**10,v**13)+GAPMul(2,u**11)-GAPMul(9,u**12)+GAPMul(4,u**13)-GAPMul(u**14,v**7)-GAPMul(u**14,v**9)-GAPMul(2,u**16),GAPMul(-u**24,v**25)+GAPMul(2,u**25)-GAPMul(u**25,v**24)+GAPMul(3,u**26)-GAPMul(u**27,v**21)-GAPMul(u**27,v**22)-GAPMul(2,u**28),GAPMul(2,u**16)-GAPMul(8,u**17)+GAPMul(4,u**19),GAPMul(u**32,v**33)-GAPMul(2,u**33)-GAPMul(3,u**33)+GAPMul(u**34,v**31)-GAPMul(3,u**35)+GAPMul(u**35,v**30),GAPMul(2,u**32)-GAPMul(8,u**33)+GAPMul(4,u**35),GAPMul(-u**24,v**26)+GAPMul(2,u**25)-GAPMul(u**26,v**24)-GAPMul(u**27,v**21)+GAPMul(3,u**27)-GAPMul(u**27,v**23)-GAPMul(2,u**29),GAPMul(-6,u**10)-GAPMul(2,u**10)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(2,u**11),GAPMul(-2,u**16)-GAPMul(2,u**16)+GAPMul(u**16,v**21)-GAPMul(2,u**17)+GAPMul(u**17,v**20)-GAPMul(2,u**19)-GAPMul(2,u**19)+GAPMul(9,u**19)-GAPMul(4,u**19)-GAPMul(6,u**19)-GAPMul(4,u**20)-GAPMul(6,u**20)+GAPMul(u**22,v**14),GAPMul(6,u**8)-GAPMul(2,u**8)-GAPMul(24,u**10)+GAPMul(8,u**11)-GAPMul(4,u**14),GAPMul(-u**8,v**8)-GAPMul(u**8,v**9)-GAPMul(u**8,v**10)-GAPMul(u**9,v**7)-GAPMul(4,u**9)-GAPMul(4,u**9)-GAPMul(3,u**10)-GAPMul(4,u**10)-GAPMul(2,u**11),GAPMul(3,u**16)+GAPMul(2,u**16),0,GAPMul(15,u**32)+GAPMul(21,u**32),GAPMul(-3,u**8)-GAPMul(2,u**8)-GAPMul(4,u**9)-GAPMul(8,u**9)-GAPMul(4,u**10),GAPMul(-6,u**16)+GAPMul(2,u**16)-GAPMul(8,u**19)-GAPMul(16,u**19)+GAPMul(4,u**22),GAPMul(-4,u**8)-GAPMul(10,u**8)-GAPMul(8,u**8)-GAPMul(12,u**9)-GAPMul(16,u**9)-GAPMul(10,u**10),GAPMul(u**16,v**15)+GAPMul(u**16,v**16),GAPMul(-2,u**24)+GAPMul(8,u**25)-GAPMul(4,u**27),GAPMul(-15,u**40)-GAPMul(21,u**40)-GAPMul(24,u**42),GAPMul(4,u**16)+GAPMul(10,u**16),GAPMul(-15,u**8)-GAPMul(21,u**8)-GAPMul(24,u**9),GAPMul(-60,u**8),GAPMul(-4,u**24)-GAPMul(10,u**24)-GAPMul(8,u**24)-GAPMul(12,u**25)-GAPMul(16,u**25)-GAPMul(10,u**26),GAPMul(-15,u**24)-GAPMul(21,u**24)-GAPMul(24,u**26),GAPMul(15,u**16)+GAPMul(21,u**16),GAPMul(-15,u**24)-GAPMul(21,u**24)-GAPMul(24,u**25),GAPMul(-60,u**40),GAPMul(-60,u**24),GAPMul(60,u**16),GAPMul(60,u**32)]
    
    
    def f80(u,v,w):
        return [80,GAPMul(32,u)+GAPMul(24,v),GAPMul(8,u)+GAPMul(8,u),GAPMul(20,u)+GAPMul(20,u),GAPMul(32,u**2)+GAPMul(24,v**2),GAPMul(-10,u)+GAPMul(6,u**3),GAPMul(8,u)+GAPMul(3,u),GAPMul(u,v)+GAPMul(u**2,v),GAPMul(10,u)+GAPMul(10,u),GAPMul(-u,v)-GAPMul(u,v**2)-GAPMul(2,u**2),GAPMul(u**3,v**3)-GAPMul(u**3,v**6)-GAPMul(u**3,v**7)-GAPMul(u**3,v**9)-GAPMul(u**3,v**10)+GAPMul(u**3,v**13)-GAPMul(u**6,v**3)+GAPMul(u**6,v**4)-GAPMul(u**6,v**6)-GAPMul(u**6,v**7)+GAPMul(2,u**6)-GAPMul(u**6,v**10)-GAPMul(u**7,v**2)-GAPMul(u**7,v**3)+GAPMul(2,u**7)-GAPMul(u**7,v**6)+GAPMul(2,u**7)-GAPMul(u**7,v**9)-GAPMul(u**7,v**10)-GAPMul(u**8,v**2)+GAPMul(2,u**8)-GAPMul(u**8,v**9)-GAPMul(u**9,v**2)-GAPMul(2,u**9)+GAPMul(u**9,v**4)-GAPMul(2,u**9)-GAPMul(u**9,v**8)-GAPMul(u**10,v**2)-GAPMul(2,u**10)-GAPMul(2,u**10)-GAPMul(u**10,v**7)-GAPMul(u**11,v**8)-GAPMul(u**11,w**8)-GAPMul(u**12,v**7)-GAPMul(u**12,w**7)+GAPMul(u**13,v**2),GAPMul(3,u)+GAPMul(3,u),0,GAPMul(20,u**2)+GAPMul(20,u**2),GAPMul(10,u**2)+GAPMul(10,u**2)-GAPMul(8,u**3)-GAPMul(8,u**3)-GAPMul(4,v**3)-GAPMul(8,u**4)-GAPMul(8,u**4)-GAPMul(4,v**4)+GAPMul(6,u**7),GAPMul(-3,u)-GAPMul(3,u)+GAPMul(u,v**3)-GAPMul(4,u**2)+GAPMul(2,u**3),GAPMul(-5,u)+GAPMul(4,u)-GAPMul(5,u)-GAPMul(u,v**4)-GAPMul(u,w**4)+GAPMul(3,u**2)-GAPMul(6,u**3)+GAPMul(2,u**3)-GAPMul(u**4,v)-GAPMul(u**4,w)+GAPMul(2,u**5),0,GAPMul(-u**2,v**2)-GAPMul(u**2,v**4)-GAPMul(2,u**4),0,GAPMul(u**6,v**6)+GAPMul(u**6,v**7)-GAPMul(u**8,v**9)+GAPMul(u**8,v**14)-GAPMul(u**9,v**8)-GAPMul(u**9,v**9)+GAPMul(u**9,v**13),GAPMul(-3,u)-GAPMul(3,u)+GAPMul(u**2,v**3)-GAPMul(4,u**3)+GAPMul(2,u**3),GAPMul(u**9,v**7)+GAPMul(u**9,v**8),GAPMul(u**5,v**5)+GAPMul(u**10,v**5),GAPMul(u**42,v**32)+GAPMul(u**42,v**34),GAPMul(u**3,v**3)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**3,v**12)-GAPMul(2,u**6)+GAPMul(3,u**6)-GAPMul(3,u**6)+GAPMul(3,u**6)-GAPMul(2,u**6)-GAPMul(2,u**7)+GAPMul(2,u**7)-GAPMul(2,u**7)+GAPMul(3,u**8)-GAPMul(2,u**9)-GAPMul(4,u**9)-GAPMul(4,u**9)-GAPMul(2,u**9)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(u**12,v**2),GAPMul(2,u**2)+GAPMul(3,u**2)-GAPMul(u**4,v**2)-GAPMul(u**4,w**2),0,GAPMul(-3,u)-GAPMul(3,u)-GAPMul(2,u)-GAPMul(2,u)-GAPMul(v,w**5)-GAPMul(2,u**2)+GAPMul(10,u**2)-GAPMul(2,u**2)+GAPMul(4,u**2)-GAPMul(3,u**3)-GAPMul(3,u**3)-GAPMul(5,u**3)-GAPMul(5,u**3)-GAPMul(2,v**3)+GAPMul(6,u**4)-GAPMul(3,u**5)-GAPMul(3,u**5)-GAPMul(v**5,w)+GAPMul(2,u**6),0,GAPMul(30,u**2)-GAPMul(16,u**3)-GAPMul(16,u**3)-GAPMul(8,v**3)+GAPMul(6,u**6),GAPMul(-2,u**40)-GAPMul(2,u**40)+GAPMul(10,u**41)-GAPMul(6,u**43),GAPMul(u**6,v**6)-GAPMul(u**6,v**9)-GAPMul(u**6,v**10)-GAPMul(u**6,v**15)-GAPMul(u**6,v**16)+GAPMul(u**6,v**19)-GAPMul(u**9,v**6)+GAPMul(u**9,v**8)-GAPMul(u**9,v**16)+GAPMul(u**10,v**7)-GAPMul(u**10,v**10)-GAPMul(u**10,v**11)+GAPMul(u**10,v**14)-GAPMul(u**11,v**4)+GAPMul(u**11,v**6)-GAPMul(u**11,v**10)+GAPMul(u**11,v**12)-GAPMul(u**11,v**16)-GAPMul(u**12,v**4)+GAPMul(u**12,v**8)-GAPMul(u**12,v**15)+GAPMul(u**14,v**6)-GAPMul(u**15,v**4)-GAPMul(u**15,v**6)+GAPMul(2,u**15)-GAPMul(u**15,v**10)-GAPMul(u**15,v**12)-GAPMul(u**16,v**4)-GAPMul(2,u**16)-GAPMul(2,u**16)-GAPMul(u**16,v**11)+GAPMul(u**19,v**4)-GAPMul(u**19,v**12)-GAPMul(u**19,w**12)-GAPMul(u**20,v**11)-GAPMul(u**20,w**11)+GAPMul(u**23,v**8),0,0,GAPMul(-4,u)+GAPMul(u,v**6)-GAPMul(6,u**3)+GAPMul(12,u**3)-GAPMul(6,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,v**3)-GAPMul(6,u**4)-GAPMul(6,u**4)-GAPMul(2,v**4)+GAPMul(2,u**6),GAPMul(u**10,v**8)+GAPMul(u**10,v**10),GAPMul(-u**8,v**8)-GAPMul(u**8,v**9)+GAPMul(3,u**9)-GAPMul(u**10,v**6)-GAPMul(u**10,v**9)-GAPMul(2,u**11)+GAPMul(4,u**11)-GAPMul(2,u**11)-GAPMul(2,u**13),GAPMul(u**26,v**20)+GAPMul(u**26,v**22),GAPMul(2,u**3)+GAPMul(2,u**3)-GAPMul(2,u**4)+GAPMul(u**4,v**6)-GAPMul(2,u**5)-GAPMul(2,u**5)+GAPMul(2,u**5),0,0,GAPMul(-2,u**8)-GAPMul(2,u**8)+GAPMul(10,u**9)-GAPMul(6,u**11),GAPMul(u**3,v**3)+GAPMul(u**3,v**4)-GAPMul(u**4,v**5)+GAPMul(u**4,v**7)-GAPMul(u**5,v**4)-GAPMul(u**5,v**5)+GAPMul(u**5,v**7),GAPMul(-u**40,v**31)-GAPMul(u**40,v**33)-GAPMul(u**41,v**30)+GAPMul(3,u**41)-GAPMul(u**41,v**33)+GAPMul(4,u**42)-GAPMul(2,u**43)-GAPMul(2,u**43)-GAPMul(2,u**44),GAPMul(u**41,v**31)+GAPMul(u**41,v**32),GAPMul(9,u**2)-GAPMul(4,u**2)+GAPMul(9,u**2)-GAPMul(6,u**3)-GAPMul(6,u**3)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,v**3)+GAPMul(12,u**4)-GAPMul(6,u**5)-GAPMul(6,u**5)-GAPMul(2,v**5)+GAPMul(2,u**6),GAPMul(-24,u**40)-GAPMul(24,u**40)-GAPMul(32,u**41),GAPMul(-u**8,v**7)-GAPMul(u**8,v**9)-GAPMul(u**9,v**6)+GAPMul(3,u**9)-GAPMul(u**9,v**9)+GAPMul(4,u**10)-GAPMul(2,u**11)-GAPMul(2,u**11)-GAPMul(2,u**12),GAPMul(-u**33,v**25)-GAPMul(u**33,v**26)-GAPMul(2,u**34),0,GAPMul(-u**40,v**32)-GAPMul(u**40,v**33)+GAPMul(3,u**41)-GAPMul(u**42,v**30)-GAPMul(u**42,v**33)-GAPMul(2,u**43)+GAPMul(4,u**43)-GAPMul(2,u**43)-GAPMul(2,u**45),GAPMul(-6,u**8)-GAPMul(16,u**8)-GAPMul(6,u**8)-GAPMul(20,u**10)-GAPMul(20,u**10)-GAPMul(12,u**12),GAPMul(-24,u**8)-GAPMul(24,u**8)-GAPMul(32,u**10),GAPMul(u**25,v**19)+GAPMul(u**25,v**20),GAPMul(-6,u**40)-GAPMul(8,u**40)-GAPMul(8,u**40)-GAPMul(6,u**40)-GAPMul(10,u**41)-GAPMul(10,u**41)-GAPMul(10,u**42)-GAPMul(10,u**42)-GAPMul(12,u**43),GAPMul(4,u**3)+GAPMul(2,u**3)-GAPMul(3,u**4)-GAPMul(3,u**4)+GAPMul(3,u**4)-GAPMul(3,u**5)+GAPMul(2,u**5),0,GAPMul(-u**34,v**26)-GAPMul(u**34,v**28)-GAPMul(2,u**36),0,GAPMul(-6,u**8)-GAPMul(8,u**8)-GAPMul(8,u**8)-GAPMul(6,u**8)-GAPMul(10,u**9)-GAPMul(10,u**9)-GAPMul(10,u**10)-GAPMul(10,u**10)-GAPMul(12,u**11),0,GAPMul(u**16,v**13)+GAPMul(u**16,v**15)-GAPMul(3,u**17)-GAPMul(3,u**17)+GAPMul(u**17,v**15)-GAPMul(4,u**18)+GAPMul(2,u**19),GAPMul(-u**17,v**13)-GAPMul(u**17,v**14)-GAPMul(2,u**18),GAPMul(8,u**3)+GAPMul(8,u**3)-GAPMul(9,u**4)+GAPMul(6,u**4),GAPMul(-u**8,v**7)+GAPMul(2,u**8)-GAPMul(u**8,v**12)-GAPMul(u**9,v**6)+GAPMul(4,u**9)-GAPMul(u**9,v**12)-GAPMul(9,u**10)-GAPMul(9,u**10)+GAPMul(4,u**11)-GAPMul(12,u**11)+GAPMul(6,u**11)-GAPMul(2,u**14)-GAPMul(2,u**14)-GAPMul(2,u**15),0,GAPMul(u**16,v**13)-GAPMul(u**16,v**15)-GAPMul(2,u**16)-GAPMul(u**16,v**17)+GAPMul(u**16,v**19)-GAPMul(2,u**17)-GAPMul(2,u**17)+GAPMul(u**17,v**19)-GAPMul(2,u**19)-GAPMul(3,u**19)+GAPMul(7,u**19)-GAPMul(3,u**19)-GAPMul(2,u**19)-GAPMul(5,u**20)-GAPMul(3,u**20)+GAPMul(4,u**20)-GAPMul(3,u**20)-GAPMul(5,u**20)-GAPMul(3,u**21)-GAPMul(3,u**21)+GAPMul(2,u**23),GAPMul(8,u**6)+GAPMul(8,u**6)-GAPMul(9,u**8)+GAPMul(6,u**8),GAPMul(-6,u**24)-GAPMul(8,u**24)-GAPMul(8,u**24)-GAPMul(6,u**24)-GAPMul(10,u**25)-GAPMul(10,u**25)-GAPMul(10,u**26)-GAPMul(10,u**26)-GAPMul(12,u**27),GAPMul(-u**8,v**7)-GAPMul(2,u**8)-GAPMul(u**8,v**9)-GAPMul(2,u**9)-GAPMul(3,u**9)-GAPMul(3,u**9)-GAPMul(2,u**9)-GAPMul(3,u**10)-GAPMul(2,u**10)-GAPMul(3,u**10)-GAPMul(3,u**11)-GAPMul(3,u**11)-GAPMul(2,u**12),GAPMul(-u**18,v**14)-GAPMul(u**18,v**16)-GAPMul(2,u**20),GAPMul(-u**8,v**8)+GAPMul(2,u**8)-GAPMul(u**8,v**12)-GAPMul(u**10,v**6)-GAPMul(9,u**10)+GAPMul(4,u**10)-GAPMul(9,u**10)-GAPMul(u**10,v**12)+GAPMul(4,u**11)-GAPMul(12,u**12)+GAPMul(6,u**13)-GAPMul(2,u**14)-GAPMul(2,u**14)-GAPMul(2,u**16),GAPMul(-u**24,v**19)-GAPMul(u**24,v**21)-GAPMul(u**25,v**18)+GAPMul(3,u**25)-GAPMul(u**25,v**21)+GAPMul(4,u**26)-GAPMul(2,u**27)-GAPMul(2,u**27)-GAPMul(2,u**28),GAPMul(2,u**16)+GAPMul(2,u**16)-GAPMul(10,u**17)+GAPMul(6,u**19),GAPMul(u**32,v**26)+GAPMul(u**32,v**27)-GAPMul(3,u**33)-GAPMul(3,u**33)+GAPMul(u**34,v**24)-GAPMul(4,u**35)+GAPMul(2,u**35),GAPMul(2,u**32)+GAPMul(2,u**32)-GAPMul(10,u**33)+GAPMul(6,u**35),GAPMul(-u**24,v**20)-GAPMul(u**24,v**21)+GAPMul(3,u**25)-GAPMul(u**26,v**18)-GAPMul(u**26,v**21)-GAPMul(2,u**27)+GAPMul(4,u**27)-GAPMul(2,u**27)-GAPMul(2,u**29),GAPMul(-2,u**10)-GAPMul(3,u**10)-GAPMul(2,u**10)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(u**12,v**6),GAPMul(u**16,v**13)-GAPMul(2,u**16)-GAPMul(2,u**16)+GAPMul(u**16,v**18)-GAPMul(4,u**17)+GAPMul(u**17,v**18)-GAPMul(4,u**19)-GAPMul(6,u**19)+GAPMul(12,u**19)-GAPMul(6,u**19)-GAPMul(4,u**19)-GAPMul(6,u**20)-GAPMul(6,u**20)+GAPMul(2,u**22),GAPMul(-2,u**8)+GAPMul(8,u**8)-GAPMul(2,u**8)-GAPMul(30,u**10)+GAPMul(16,u**11)-GAPMul(6,u**14),GAPMul(-2,u**8)-GAPMul(2,u**8)-GAPMul(3,u**9)-GAPMul(8,u**9)-GAPMul(3,u**9)-GAPMul(5,u**10)-GAPMul(5,u**10)-GAPMul(2,u**11),GAPMul(2,u**16)+GAPMul(4,u**16),0,GAPMul(24,u**32)+GAPMul(24,u**32),GAPMul(-2,u**8)-GAPMul(4,u**8)-GAPMul(2,u**8)-GAPMul(8,u**9)-GAPMul(8,u**9)-GAPMul(6,u**10),GAPMul(2,u**16)-GAPMul(8,u**16)+GAPMul(2,u**16)-GAPMul(16,u**19)-GAPMul(16,u**19)+GAPMul(6,u**22),GAPMul(-6,u**8)-GAPMul(16,u**8)-GAPMul(6,u**8)-GAPMul(20,u**9)-GAPMul(20,u**9)-GAPMul(12,u**10),GAPMul(2,u**16)+GAPMul(2,u**16),GAPMul(-2,u**24)-GAPMul(2,u**24)+GAPMul(10,u**25)-GAPMul(6,u**27),GAPMul(-24,u**40)-GAPMul(24,u**40)-GAPMul(32,u**42),GAPMul(6,u**16)+GAPMul(16,u**16),GAPMul(-24,u**8)-GAPMul(24,u**8)-GAPMul(32,u**9),GAPMul(-80,u**8),GAPMul(-6,u**24)-GAPMul(16,u**24)-GAPMul(6,u**24)-GAPMul(20,u**25)-GAPMul(20,u**25)-GAPMul(12,u**26),GAPMul(-24,u**24)-GAPMul(24,u**24)-GAPMul(32,u**26),GAPMul(24,u**16)+GAPMul(24,u**16),GAPMul(-24,u**24)-GAPMul(24,u**24)-GAPMul(32,u**25),GAPMul(-80,u**40),GAPMul(-80,u**24),GAPMul(80,u**16),GAPMul(80,u**32)]
    
    
    def f64(u,v,w,r):
        return [64,GAPMul(16,u)+GAPMul(24,v),GAPMul(4,v+w),GAPMul(4,v+u),GAPMul(16,u**2)+GAPMul(24,v**2),GAPMul(-8,u)+GAPMul(4,v**3),GAPMul(v+w,v**2+GAPMul(u,v)),GAPMul(v,w),GAPMul(6,u)+GAPMul(6,u),GAPMul(-u,v),GAPMul(-v**2,w**2),GAPMul(v+w,v+w),GAPMul(-r,u),GAPMul(4,v**2+u**2),GAPMul(-4,v+w),GAPMul(-3,u)-GAPMul(3,u)+GAPMul(u,v**3)-GAPMul(2,u**2)+GAPMul(2,v**3),GAPMul(-4,u)+GAPMul(2,u)-GAPMul(4,u)-GAPMul(v,w**4)+GAPMul(3,u**2)-GAPMul(4,u**3)+GAPMul(u**3,v**2)-GAPMul(u**4,v)-GAPMul(u**4,w)-GAPMul(v**4,w)+v**5,GAPMul(-u**2,v**3),GAPMul(-u**2,v**2)-GAPMul(u**2,v**4),0,GAPMul(u**4,v**8)+GAPMul(u**4,v**9)-GAPMul(u**8,v**9)+GAPMul(u**8,v**14)-GAPMul(u**9,v**8)-GAPMul(u**9,v**9)+GAPMul(u**9,v**13),GAPMul(-3,u)-GAPMul(3,u)+GAPMul(u**2,v**3)-GAPMul(2,u**3)+GAPMul(2,v**3),GAPMul(-r,u**6)-GAPMul(r,u**6),GAPMul(u**5,v**5)+GAPMul(v**5,w**10),GAPMul(-r,u**27)-GAPMul(r,u**27),GAPMul(u**2,v**4)-GAPMul(2,u**2)-GAPMul(2,u**2)+GAPMul(u**2,v**12)-GAPMul(2,u**3)-GAPMul(2,u**3)+GAPMul(u**3,v**12)-GAPMul(2,u**6)+GAPMul(3,u**6)-GAPMul(3,u**6)+GAPMul(3,u**6)-GAPMul(2,u**6)-GAPMul(2,u**7)+GAPMul(2,u**7)-GAPMul(2,u**7)-GAPMul(2,v**7)-GAPMul(2,v**11)+GAPMul(v**14,w**4),GAPMul(2,u)+GAPMul(2,u)-GAPMul(v**2,w**4)-GAPMul(v**4,w**2),GAPMul(-r,u**3),GAPMul(-2,u)-GAPMul(2,u)-GAPMul(u,v**5)-GAPMul(u,w**5)-GAPMul(3,v)-GAPMul(2,u**2)+GAPMul(8,u**2)-GAPMul(2,u**2)+GAPMul(4,u**2)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(6,v**3)+GAPMul(2,u**4)-GAPMul(u**5,v)-GAPMul(u**5,w)-GAPMul(3,v**5)+v**6,0,GAPMul(24,u**2)-GAPMul(8,u**3)-GAPMul(8,u**3)-GAPMul(16,v**3)+GAPMul(4,v**6),GAPMul(4,r)+GAPMul(4,r)-GAPMul(8,r),GAPMul(u**4,v**8)-GAPMul(u**4,v**11)-GAPMul(u**4,v**12)-GAPMul(u**4,v**15)-GAPMul(u**4,v**16)+GAPMul(u**4,v**19)-GAPMul(u**6,v**9)+GAPMul(u**6,v**11)-GAPMul(u**6,v**16)+GAPMul(u**6,v**19)-GAPMul(u**9,v**6)+GAPMul(u**9,v**8)-GAPMul(u**9,v**16)+GAPMul(u**10,v**7)-GAPMul(u**10,v**10)-GAPMul(u**10,v**11)+GAPMul(u**10,v**14)-GAPMul(u**11,v**4)+GAPMul(u**11,v**6)-GAPMul(u**11,v**10)+GAPMul(u**11,v**12)-GAPMul(u**11,v**16)-GAPMul(v**11,w**20)-GAPMul(u**12,v**4)+GAPMul(u**12,v**8)-GAPMul(u**12,v**15)-GAPMul(v**12,w**19)-GAPMul(v**19,w**12)-GAPMul(v**20,w**11)+GAPMul(v**23,w**8),0,GAPMul(-u**4,v**6),GAPMul(-4,u)+GAPMul(u,v**6)-GAPMul(4,u**3)+GAPMul(6,u**3)-GAPMul(4,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(6,v**3)-GAPMul(2,u**4)-GAPMul(2,u**4)-GAPMul(6,v**4)+GAPMul(2,v**6),GAPMul(-r,u**7),GAPMul(-r,u**5),GAPMul(-r,u**17),GAPMul(v**2,w**2),0,GAPMul(-r,u**11),GAPMul(-4,r),GAPMul(v**2,w**2),GAPMul(-r,u**25),GAPMul(-r,u**26),GAPMul(9,u**2)-GAPMul(4,u**2)+GAPMul(9,u**2)-GAPMul(4,u**3)-GAPMul(4,u**3)-GAPMul(2,u**3)-GAPMul(2,u**3)-GAPMul(6,v**3)+GAPMul(6,u**4)-GAPMul(2,u**5)-GAPMul(2,u**5)-GAPMul(6,v**5)+GAPMul(2,v**6),GAPMul(24,r)+GAPMul(24,r),GAPMul(r,u**5)+GAPMul(2,r)-GAPMul(3,r)-GAPMul(3,r)+GAPMul(r,u**6)-GAPMul(2,r),GAPMul(-u**21,v**31)-GAPMul(u**21,v**32),0,GAPMul(r,u**25)+GAPMul(2,r)-GAPMul(3,r)-GAPMul(3,r)+GAPMul(r,u**27)-GAPMul(2,r),GAPMul(8,r)+GAPMul(20,r),GAPMul(24,r)+GAPMul(24,r),GAPMul(-r,u**16)-GAPMul(r,u**16),GAPMul(8,r)+GAPMul(10,r),GAPMul(3,u**2)+GAPMul(2,u**2)-GAPMul(3,u**4)-GAPMul(3,u**4)+GAPMul(3,u**4)-GAPMul(3,u**5)+GAPMul(2,u**5),0,GAPMul(-u**22,v**32)-GAPMul(u**22,v**34),0,GAPMul(8,r)+GAPMul(10,r),0,GAPMul(u**10,v**15)+GAPMul(2,u**10)-GAPMul(3,u**11)-GAPMul(3,u**11)+GAPMul(u**11,v**18)-GAPMul(2,u**12),GAPMul(-u**11,v**16)-GAPMul(u**11,v**17),GAPMul(6,u**2)+GAPMul(6,u**2)-GAPMul(9,u**4)+GAPMul(6,u**4),GAPMul(r,u**5)+GAPMul(2,r)-GAPMul(6,r)-GAPMul(6,r)+GAPMul(2,r)-GAPMul(4,r)+GAPMul(r,u**6)-GAPMul(2,r)-GAPMul(4,r)+GAPMul(6,r)-GAPMul(4,r)-GAPMul(2,r)-GAPMul(2,r)-GAPMul(2,r),GAPMul(-u**6,v**9),GAPMul(u**10,v**15)+GAPMul(2,u**10)-GAPMul(3,u**10)-GAPMul(6,u**10)-GAPMul(3,u**10)+GAPMul(2,u**10)-GAPMul(2,u**11)-GAPMul(2,u**11)+GAPMul(u**11,v**22)-GAPMul(u**13,v**15)-GAPMul(2,u**13)+GAPMul(5,u**13)-GAPMul(2,u**13)-GAPMul(u**13,v**20)-GAPMul(2,u**14)-GAPMul(2,u**14)+GAPMul(2,u**14)-GAPMul(2,u**14)-GAPMul(2,u**14)-GAPMul(u**15,v**15)-GAPMul(u**15,v**18),GAPMul(6,u**4)+GAPMul(6,u**4)-GAPMul(9,u**8)+GAPMul(6,u**8),GAPMul(8,r)+GAPMul(10,r),GAPMul(r,u**5)+GAPMul(3,r),GAPMul(-u**12,v**17)-GAPMul(u**12,v**19),GAPMul(r,u**5)+GAPMul(2,r)-GAPMul(6,r)-GAPMul(6,r)+GAPMul(2,r)-GAPMul(4,r)+GAPMul(9,r)-GAPMul(2,r)-GAPMul(4,r)-GAPMul(4,r)-GAPMul(2,r)+GAPMul(6,r)-GAPMul(2,r)-GAPMul(2,r),GAPMul(r,u**15)+GAPMul(2,r)-GAPMul(3,r)-GAPMul(3,r)+GAPMul(r,u**16)-GAPMul(2,r),GAPMul(4,u**10)+GAPMul(4,u**10)-GAPMul(8,u**11),GAPMul(u**20,v**30)+GAPMul(2,u**20)-GAPMul(3,u**21)-GAPMul(3,u**21)+GAPMul(u**22,v**30)-GAPMul(2,u**23),GAPMul(4,u**20)+GAPMul(4,u**20)-GAPMul(8,u**21),GAPMul(r,u**15)+GAPMul(2,r)-GAPMul(3,r)-GAPMul(3,r)+GAPMul(r,u**17)-GAPMul(2,r),GAPMul(-r,u**5)-GAPMul(r,u**5)+GAPMul(2,r),GAPMul(u**10,v**15)+GAPMul(2,u**10)-GAPMul(6,u**10)-GAPMul(6,u**10)+GAPMul(2,u**10)-GAPMul(4,u**11)+GAPMul(u**11,v**21)-GAPMul(2,u**13)-GAPMul(4,u**13)+GAPMul(6,u**13)-GAPMul(4,u**13)-GAPMul(2,u**13)-GAPMul(2,u**14)-GAPMul(2,u**14),GAPMul(4,r)-GAPMul(16,r)+GAPMul(4,r)-GAPMul(8,r)-GAPMul(8,r),GAPMul(r,u**5)+GAPMul(5,r),GAPMul(4,u**10)+GAPMul(8,u**10),0,GAPMul(24,u**20)+GAPMul(24,u**20),GAPMul(4,r)+GAPMul(8,r),GAPMul(4,u**10)-GAPMul(16,u**10)+GAPMul(4,u**10)-GAPMul(8,u**13)-GAPMul(8,u**13),GAPMul(8,r)+GAPMul(20,r),GAPMul(u**10,v**15)+GAPMul(5,u**10),GAPMul(4,r)+GAPMul(4,r)-GAPMul(8,r),GAPMul(24,r)+GAPMul(24,r),GAPMul(8,u**10)+GAPMul(20,u**10),GAPMul(24,r)+GAPMul(24,r),GAPMul(64,r),GAPMul(8,r)+GAPMul(20,r),GAPMul(24,r)+GAPMul(24,r),GAPMul(24,u**10)+GAPMul(24,u**10),GAPMul(24,r)+GAPMul(24,r),GAPMul(64,r),GAPMul(64,r),GAPMul(64,u**10),GAPMul(64,u**20)]
    
    
    def f81(u,v,w,r):
        return [81,GAPMul(27,u)+GAPMul(27,v),GAPMul(3,v+u**2),GAPMul(9,v+u**2),GAPMul(27,u**2)+GAPMul(27,v**2),GAPMul(-12,w)+GAPMul(3,u**3),v+u**3,0,GAPMul(9,v+u),GAPMul(-u,w),GAPMul(w**2,v**2),GAPMul(w**2+v**2,v+u**2),GAPMul(r,u),GAPMul(9,w**2+v**2**2),GAPMul(12,w**3)+GAPMul(12,w**2)-GAPMul(6,v**4)-GAPMul(6,w**4)-GAPMul(6,w**4)-GAPMul(6,u**4)-GAPMul(6,u**4)-GAPMul(6,w**3)+GAPMul(3,u**7),GAPMul(v+u,v**3-GAPMul(4,w)+u**3),GAPMul(v+u,v**4-GAPMul(2,v**3)-GAPMul(2,w)+GAPMul(4,u**2)-GAPMul(2,v)-GAPMul(2,w**3)+u**4-GAPMul(2,w**3)+w**4-GAPMul(2,w)),GAPMul(r**2,u**2),GAPMul(-w**2,v**2),GAPMul(-r**2,u),GAPMul(u**4,v**4),GAPMul(w**2+v**2,v**3-GAPMul(4,w)+u**3),GAPMul(-r**2,u**7),0,GAPMul(-r,u**35),GAPMul(w**2,v**2),GAPMul(2,w),GAPMul(u**4,v**4),GAPMul(w**2+v**2,v**4-GAPMul(2,v**3)-GAPMul(2,w)+GAPMul(4,u**2)-GAPMul(2,v)-GAPMul(2,w**3)+u**4-GAPMul(2,w**3)+w**4-GAPMul(2,w)),0,GAPMul(36,w**2)-GAPMul(12,u**3)-GAPMul(12,u**3)-GAPMul(12,w**3)+GAPMul(3,u**6),GAPMul(3,r),GAPMul(u**4,v**4),GAPMul(-r,u**8),GAPMul(r,u**5),GAPMul(v+u,v**6-GAPMul(4,w**3)-GAPMul(4,u**3)+GAPMul(12,w**2)-GAPMul(4,u**3)+w**6),GAPMul(-r**2,u**8),GAPMul(r**2,u**6),GAPMul(-u**22,v**22),GAPMul(w**2,v**2),GAPMul(Mvp("f"),r),GAPMul(r**2,u**14),GAPMul(3,r**2),GAPMul(w**2,v**2),GAPMul(r,u**33),GAPMul(-r,u**34),GAPMul(v**6-GAPMul(4,w**3)-GAPMul(4,u**3)+GAPMul(12,w**2)-GAPMul(4,u**3)+w**6,w**2+v**2),GAPMul(27,r),GAPMul(r**2,u**6),GAPMul(-r**2,u**27),GAPMul(-u**5,v**5),GAPMul(r,u**33),GAPMul(9,r**2),GAPMul(27,r**2),GAPMul(-u**21,v**21),GAPMul(9,r),GAPMul(w**2,v**2),GAPMul(Mvp("f"),r),GAPMul(-r**2,u**28),GAPMul(-3,r),GAPMul(9,r**2),GAPMul(-3,r**2),GAPMul(r,u**13),GAPMul(-r,u**14),GAPMul(2,w**2),GAPMul(r**2,u**6),GAPMul(u**8,v**8),GAPMul(r,u**13),GAPMul(2,u**4),GAPMul(9,u**20),GAPMul(r**2,u**6),GAPMul(-r,u**15),GAPMul(r**2,u**6),GAPMul(u**20,v**20),GAPMul(3,r),GAPMul(r**2,u**26),GAPMul(3,r**2),GAPMul(u**20,v**20),GAPMul(2,r**2),GAPMul(r,u**13),GAPMul(3,r**2),GAPMul(r**2,u**6),GAPMul(3,r),GAPMul(-3,u**10),GAPMul(27,r**2),GAPMul(3,r**2),GAPMul(3,r),GAPMul(9,r**2),GAPMul(r,u**13),GAPMul(3,u**20),GAPMul(27,r),GAPMul(9,r),GAPMul(27,r**2),GAPMul(81,r**2),GAPMul(9,u**20),GAPMul(27,u**20),GAPMul(27,r),GAPMul(27,u**20),GAPMul(81,r),GAPMul(81,u**20),GAPMul(81,r),GAPMul(81,r**2)]
    
    
    res={"name":"H(G32)",
        "identifier":"H(G32)",
        "parameter":para,
        "size":155520,
        "order":155520,
        "dim":4,
        "degrees":[12,18,24,30],
        "reflclasses":[2],
        "powermap":ChevieData["G32"]["PowerMaps"],
        "irredinfo":map(lambda x: {"charparam":x,
        "charname":ChevieData["G32"]["CharName"](x,{})},ChevieData["G32"]["CharInfo"]()["charparams"]),
        "text":"origin: J.Michel, 2008/2012"}
    res.update(ChevieData["G32"]["ClassInfo"])
    res["centralizers"]=map(lambda x: GAPDiv(res["order"],x),res["classes"])
    res["irreducibles"]=[f1(u),f1(w),f1(v),f4(v,w),f4(u,v),f4(w,u),f4(w,v),f4(u,w),f4(v,u),f5(u,v,w),f5(w,u,v),f5(v,w,u),f5(u,w,v),f5(v,u,w),f5(w,v,u),f6(v,w),f6(u,v),f6(w,u),f10(u,v,w),f10(w,u,v),f10(v,w,u),f10(u,w,v),f10(v,u,w),f10(w,v,u),f15(u,v,w),f15b(u,v,w),f15(w,u,v),f15(v,u,w),f15b(w,u,v),f15b(v,u,w),f20a(u,v,w),f20b(u,v,w),f20c(u,v,w),f20c(w,u,v),f20c(v,w,u),f20c(u,w,v),f20c(v,u,w),f20c(w,v,u),f20d(u,v,w),f20d(w,u,v),f20d(v,w,u),f20d(u,w,v),f20d(v,u,w),f20d(w,v,u),f20a(v,u,w),f20a(w,u,v),f20b(w,u,v),f20b(v,u,w),f24(u,v,w),f24(w,u,v),f24(v,u,w),f30a(u,v,w),f30b(u,v,w),f30b(w,u,v),f30b(v,w,u),f30b(u,w,v),f30b(v,u,w),f30b(w,v,u),f30a(w,u,v),f30a(v,u,w),f36(u,v,w,ER(3)),f36(w,u,v,ER(3)),f36(v,u,w,ER(3)),f36(u,v,w,ER(3)**2),f36(v,u,w,ER(3)**2),f36(w,u,v,ER(3)**2),f40(u,v,w),f40(w,u,v),f40(v,w,u),f40(u,w,v),f40(v,u,w),f40(w,v,u),f45(u,v,w,ER(3)),f45(u,w,v,ER(3)),f45(v,w,u,ER(3)),f45(u,w,v,ER(3)**2),f45(u,v,w,ER(3)**2),f45(v,w,u,ER(3)**2),f60a(u,v,w),f60b(u,v,w),f60c(u,v,w),f60c(w,u,v),f60c(v,w,u),f60c(u,w,v),f60c(v,u,w),f60c(w,v,u),f60a(v,u,w),f60a(w,u,v),f60b(w,u,v),f60b(v,u,w),f64(u,v,w,GetRoot(GAPMul(v,w))),f64(u,v,w,-GetRoot(GAPMul(v,w))),f64(w,u,v,GetRoot(GAPMul(u,v))),f64(v,u,w,GetRoot(GAPMul(u,w))),f64(v,u,w,-GetRoot(GAPMul(u,w))),f64(w,u,v,-GetRoot(GAPMul(u,v))),f80(u,v,w),f80(v,u,w),f80(w,u,v),f81(u,v,w,GetRoot(GAPMul(u,v),3)),f81(u,v,w,GAPMul(ER(3)**2,GetRoot(GAPMul(u,v),3))),f81(u,v,w,GAPMul(ER(3),GetRoot(GAPMul(u,v),3)))]
    res=ChevieData["compat"]["MakeCharacterTable"](res)
    return res

ChevieData["G32"]["HeckeCharTable"]=lxg324

def lxg325():
    res=ChevieData["G32"]["HeckeCharTable"]([[1,ER(3),ER(3)**2]],[])
    res["identifier"]="G32"
    res["name"]="G32"
    for i,j in zip([41,58],[[0,0],[1,1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[ER(3),ER(3)**2],[ER(3)**2,ER(3)],[0,0],[0,0],[0,0],[-1,-1],[-1,-1],[-ER(3),-ER(3)**2],[-ER(3)**2,-ER(3)],[-1,-1],[-ER(3)**2,-ER(3)],[-ER(3),-ER(3)**2],[-ER(3),-ER(3)**2],[-ER(3)**2,-ER(3)],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[1,1],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[ER(3),ER(3)**2],[ER(3)**2,ER(3)],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]]):
        [res["irreducibles"][k-1] for k in range(31,102+1)][i-1]=j
    res["galomorphisms"]=PermutationGroup([Permutation("(2,3)(4,7)(5,8)(6,9)(10,13)(11,14)(12,15)(17,18)(19,22)(20,23)(21,24)(27,28)(29,30)(33,36)(34,37)(35,38)(39,42)(40,43)(41,44)(45,46)(47,48)(50,51)(53,56)(54,57)(55,58)(59,60)(61,64)(62,65)(63,66)(67,70)(68,71)(69,72)(73,76)(74,77)(75,78)(81,84)(82,85)(83,86)(87,88)(89,90)(93,94)(95,96)(98,99)(101,102)")])
    return ChevieData["compat"]["MakeCharacterTable"](res)

ChevieData["G32"]["CharTable"]=lxg325

ChevieData["G32"]["SchurModels"]={"f1_0":{"vcyc":[[[1,-1,0],1],[[1,-1,0],1],[[1,0,-1],1],[[1,0,-1],1],[[3,-2,-1],1],[[3,-1,-2],1],[[5,-2,-3],1],[[5,-3,-2],1],[[4,-3,-1],2],[[4,-1,-3],2],[[2,-1,-1],2],[[2,-1,-1],2],[[1,-1,0],6],[[1,0,-1],6],[[3,-2,-1],6],[[3,-1,-2],6],[[2,-1,-1],6],[[2,-1,-1],4],[[1,-1,0],4],[[1,0,-1],4],[[2,-1,-1],3],[[1,-1,0],10],[[1,0,-1],10],[[2,-1,-1],5]]},
    "f4_1":{"vcyc":[[[4,-1,-3],1],[[3,-1,-2],1],[[3,-2,-1],1],[[2,1,-3],1],[[-1,1,0],1],[[0,1,-1],1],[[1,0,-1],1],[[1,0,-1],1],[[5,-1,-4],2],[[3,1,-4],2],[[3,-1,-2],2],[[2,-1,-1],2],[[1,0,-1],2],[[1,1,-2],2],[[1,0,-1],6],[[1,-1,0],6],[[1,0,-1],4],[[2,-1,-1],3],[[1,-1,0],10],[[1,0,-1],15]]},
    "f5_4":{"vcyc":[[[3,2,-5],1],[[2,1,-3],1],[[1,0,-1],1],[[1,0,-1],1],[[-1,1,0],1],[[-1,1,0],1],[[0,1,-1],1],[[0,1,-1],1],[[3,-1,-2],2],[[1,2,-3],2],[[0,1,-1],2],[[2,-1,-1],2],[[1,1,-2],2],[[4,1,-5],2],[[1,0,-1],2],[[1,0,-1],2],[[1,0,-1],6],[[1,0,-1],6],[[1,-1,0],6],[[1,-1,0],4],[[1,1,-2],3],[[1,0,-1],12]]},
    "f6_8":{"factor":[2,-2,0],
    "vcyc":[[[-1,1,0],1],[[1,-1,0],1],[[0,1,-1],1],[[1,0,-1],1],[[0,1,-1],1],[[1,0,-1],1],[[2,1,-3],1],[[1,2,-3],1],[[2,1,-3],2],[[1,2,-3],2],[[-1,2,-1],2],[[2,-1,-1],2],[[1,1,-2],2],[[1,1,-2],2],[[1,0,-1],2],[[0,1,-1],2],[[1,1,-2],6],[[0,1,-1],6],[[1,0,-1],6],[[-1,1,0],10],[[1,1,-2],5]]},
    "f10_2":{"vcyc":[[[2,1,-3],1],[[3,-1,-2],1],[[0,1,-1],1],[[0,1,-1],1],[[-1,1,0],1],[[-1,0,1],1],[[1,0,-1],1],[[1,0,-1],1],[[4,-3,-1],2],[[3,-1,-2],2],[[1,1,-2],2],[[1,-2,1],2],[[1,0,-1],2],[[1,0,-1],2],[[0,1,-1],2],[[2,-1,-1],2],[[2,1,-3],6],[[1,0,-1],6],[[1,-1,0],6],[[1,0,-1],4],[[2,-1,-1],3]]},
    "f15_6":{"vcyc":[[[3,-2,-1],1],[[3,-1,-2],1],[[1,0,-1],1],[[1,0,-1],1],[[0,1,-1],1],[[0,1,-1],1],[[-1,1,0],1],[[1,-1,0],1],[[3,1,-4],2],[[3,-4,1],2],[[-1,-1,2],2],[[1,-2,1],2],[[1,-1,0],2],[[1,0,-1],2],[[2,-1,-1],2],[[2,-1,-1],2],[[2,-1,-1],6],[[1,0,-1],6],[[1,-1,0],6],[[2,-1,-1],4]]},
    "f15_8":{"vcyc":[[[2,-3,1],1],[[-3,2,1],1],[[0,1,-1],1],[[0,1,-1],1],[[1,0,-1],1],[[1,0,-1],1],[[1,-1,0],1],[[-1,1,0],1],[[1,-2,1],2],[[-2,1,1],2],[[1,1,-2],2],[[1,1,-2],2],[[1,0,-1],2],[[1,0,-1],2],[[0,1,-1],2],[[0,1,-1],2],[[0,1,-1],6],[[1,0,-1],6],[[1,1,-2],4]]},
    "f20_3":{"vcyc":[[[2,-3,1],1],[[1,-1,0],1],[[1,-1,0],1],[[-1,0,1],1],[[1,0,-1],1],[[4,-1,-3],1],[[3,-1,-2],1],[[0,1,-1],1],[[1,2,-3],2],[[-1,2,-1],2],[[2,-1,-1],2],[[1,1,-2],2],[[1,0,-1],2],[[-1,0,1],2],[[3,-2,-1],6],[[1,0,-1],6],[[1,0,-1],4],[[1,1,-2],3]]},
    "f20_5":{"coeff":-1,
    "vcyc":[[[3,-2,-1],1],[[-2,3,-1],1],[[2,1,-3],1],[[1,2,-3],1],[[-1,0,1],1],[[-1,0,1],1],[[0,1,-1],1],[[0,1,-1],1],[[3,-1,-2],2],[[-1,3,-2],2],[[1,1,-2],2],[[1,1,-2],2],[[1,1,-2],6],[[1,-1,0],6],[[1,0,-1],6],[[0,1,-1],6],[[1,1,-2],3]]},
    "f20_7":{"vcyc":[[[3,1,-4],1],[[1,2,-3],1],[[-1,1,0],1],[[-1,1,0],1],[[-1,0,1],1],[[1,0,-1],1],[[0,1,-1],1],[[0,1,-1],1],[[1,0,-1],2],[[-1,0,1],2],[[3,-4,1],2],[[1,2,-3],2],[[1,1,-2],2],[[-1,2,-1],2],[[1,0,-1],6],[[1,0,-1],6],[[0,1,-1],6],[[2,-1,-1],3]]},
    "f20_12":{"coeff":2,
    "vcyc":[[[0,1,-1],1],[[0,-1,1],1],[[-1,1,0],1],[[-1,0,1],1],[[-1,1,0],1],[[-1,0,1],1],[[1,-1,0],1],[[1,0,-1],1],[[1,-3,2],2],[[1,2,-3],2],[[2,-1,-1],2],[[-2,1,1],2],[[1,0,-1],2],[[1,-1,0],2],[[1,0,-1],2],[[1,-1,0],2],[[0,1,-1],6],[[0,-1,1],6],[[2,-1,-1],3]]},
    "f24_6":{"vcyc":[[[-2,-1,3],1],[[-2,3,-1],1],[[1,0,-1],1],[[1,-1,0],1],[[1,0,-1],1],[[1,-1,0],1],[[0,1,-1],1],[[0,-1,1],1],[[1,0,-1],2],[[1,-1,0],2],[[1,1,-2],2],[[1,-2,1],2],[[1,0,-1],6],[[1,-1,0],6],[[1,0,-1],4],[[1,-1,0],4],[[2,-1,-1],5]]},
    "f30_4":{"vcyc":[[[5,-3,-2],1],[[1,0,-1],1],[[-1,1,0],1],[[-1,1,0],1],[[0,1,-1],1],[[0,1,-1],1],[[1,0,-1],1],[[1,0,-1],1],[[-1,1,0],2],[[0,1,-1],2],[[-1,0,1],2],[[5,-1,-4],2],[[1,-3,2],2],[[1,0,-1],2],[[1,-2,1],2],[[2,-1,-1],2],[[1,-1,0],6],[[0,1,-1],6],[[1,0,-1],6],[[1,0,-1],4]]},
    "f30_12p":{"vcyc":[[[2,-3,1],1],[[2,1,-3],1],[[-1,1,0],1],[[-1,1,0],1],[[1,-1,0],1],[[-1,0,1],1],[[-1,0,1],1],[[1,0,-1],1],[[0,1,-1],2],[[0,-1,1],2],[[-1,2,-1],2],[[-1,-1,2],2],[[1,0,-1],2],[[1,0,-1],2],[[1,-1,0],2],[[1,-1,0],2],[[0,1,-1],6],[[0,-1,1],6],[[1,-1,0],6],[[1,0,-1],6]]},
    "f36_5":{"rootUnity":ER(3),
    "vcyc":[[[0,0,0,-1],1],[[1,-1,0],1],[[-1,0,1],1],[[2,-1,-1,1],1],[[1,1,-2,2],1],[[-1,2,-1,-2],1],[[-2,1,1],2],[[2,1,-3,-1],2],[[2,-3,1,2],2],[[2,-1,-1],6],[[1,0,-1],6],[[1,-1,0],6],[[0,-1,1],6],[[1,-1,0,1],5],[[1,0,-1,1],5]]},
    "f40_8":{"vcyc":[[[3,2,-5],1],[[-1,1,0],1],[[1,-1,0],1],[[1,0,-1],1],[[-1,0,1],1],[[1,0,-1],1],[[-3,2,1],1],[[0,-1,1],1],[[1,-1,0],2],[[1,1,-2],2],[[2,-1,-1],2],[[1,0,-1],2],[[1,-1,0],6],[[0,1,-1],6],[[1,-1,0],4],[[1,0,-1],4],[[1,-2,1],3]]},
    "f45_6":{"rootUnity":ER(3),
    "vcyc":[[[0,0,0,1],1],[[-1,2,-1,2],1],[[-2,1,1,1],1],[[1,1,-2,1],1],[[0,-1,1],1],[[1,0,-1],1],[[-3,2,1,2],2],[[2,-3,1,2],2],[[0,1,-1,-2],2],[[1,0,-1,1],2],[[1,1,-2],2],[[1,-1,0],6],[[1,0,-1],6],[[0,1,-1],6],[[1,1,-2],6],[[0,1,-1,1],4],[[1,0,-1,1],4]]},
    "f60_7":{"vcyc":[[[1,2,-3],1],[[1,-1,0],1],[[1,-1,0],1],[[0,1,-1],1],[[0,1,-1],1],[[1,0,-1],1],[[1,0,-1],1],[[-3,1,2],1],[[1,-1,0],2],[[4,1,-5],2],[[-1,2,-1],2],[[-2,1,1],2],[[0,1,-1],2],[[0,1,-1],2],[[1,-1,0],6],[[0,-1,1],6],[[1,-1,0],4]]},
    "f60_11s":{"vcyc":[[[1,-4,3],1],[[-1,1,0],1],[[-1,1,0],1],[[1,0,-1],1],[[1,0,-1],1],[[0,-1,1],1],[[0,-1,1],1],[[-4,1,3],1],[[2,-1,-1],2],[[1,1,-2],2],[[1,1,-2],2],[[-1,2,-1],2],[[-1,1,0],2],[[-1,1,0],2],[[1,1,-2],6],[[1,-1,0],6]]},
    "f60_12":{"coeff":2,
    "vcyc":[[[1,2,-3],1],[[1,-3,2],1],[[-1,0,1],1],[[-1,0,1],1],[[-1,0,1],1],[[-1,1,0],1],[[-1,1,0],1],[[-1,1,0],1],[[0,1,-1],2],[[0,-1,1],2],[[2,-1,-1],2],[[2,-1,-1],2],[[2,-1,-1],6],[[0,-1,1],6],[[0,1,-1],6],[[1,0,-1],4],[[1,-1,0],4]]},
    "f64_8":{"coeff":2,
    "root":GAPDiv([1,1,0],2),
    "vcyc":[[[1,0,-2,1],1],[[0,-1,2,-1],1],[[0,1,-1],1],[[-1,0,1],1],[[-1,1,0],1],[[1,-1,0],1],[[-1,3,-2],1],[[-3,1,2],1],[[-2,2,-1,1],2],[[2,-2,-1,1],2],[[1,1,-2],3],[[0,0,-1,1],10],[[0,-1,0,1],15]]},
    "f80_9":{"coeff":2,
    "vcyc":[[[1,2,-3],1],[[1,-3,2],1],[[1,0,-1],1],[[1,0,-1],1],[[-1,1,0],1],[[-1,1,0],1],[[0,1,-1],1],[[0,1,-1],1],[[1,-1,0],2],[[1,0,-1],2],[[-2,1,1],4],[[1,0,-1],4],[[1,-1,0],4],[[2,-1,-1],3],[[0,-1,1],12]]},
    "f81_10":{"coeff":3,
    "root":GAPDiv([1,1,1],3),
    "vcyc":[[[-2,0,1,1],2],[[0,-2,1,1],2],[[1,0,-2,1],2],[[1,-2,0,1],2],[[-2,1,0,1],2],[[0,1,-2,1],2],[[1,1,-2],2],[[1,-2,1],2],[[-2,1,1],2],[[0,0,-1,1],2],[[-1,0,0,1],2],[[0,-1,0,1],2],[[-1,-1,0,2],4],[[-1,0,-1,2],4],[[0,-1,-1,2],4],[[-1,0,0,1],5],[[0,0,-1,1],5],[[0,-1,0,1],5]]}}

ChevieData["G32"]["SchurData"]=[{"name":"f1_0",
    "order":[1,3,2]},{"name":"f1_0",
    "order":[3,2,1]},{"name":"f1_0",
    "order":[2,1,3]},{"name":"f4_1",
    "order":[3,2,1]},{"name":"f4_1",
    "order":[2,1,3]},{"name":"f4_1",
    "order":[1,3,2]},{"name":"f4_1",
    "order":[2,3,1]},{"name":"f4_1",
    "order":[3,1,2]},{"name":"f4_1",
    "order":[1,2,3]},{"name":"f5_4",
    "order":[3,1,2]},{"name":"f5_4",
    "order":[2,3,1]},{"name":"f5_4",
    "order":[1,2,3]},{"name":"f5_4",
    "order":[2,1,3]},{"name":"f5_4",
    "order":[3,2,1]},{"name":"f5_4",
    "order":[1,3,2]},{"name":"f6_8",
    "order":[3,2,1]},{"name":"f6_8",
    "order":[2,1,3]},{"name":"f6_8",
    "order":[1,3,2]},{"name":"f10_2",
    "order":[2,3,1]},{"name":"f10_2",
    "order":[1,2,3]},{"name":"f10_2",
    "order":[3,1,2]},{"name":"f10_2",
    "order":[3,2,1]},{"name":"f10_2",
    "order":[1,3,2]},{"name":"f10_2",
    "order":[2,1,3]},{"name":"f15_8",
    "order":[3,2,1]},{"name":"f15_6",
    "order":[1,3,2]},{"name":"f15_8",
    "order":[2,1,3]},{"name":"f15_8",
    "order":[1,3,2]},{"name":"f15_6",
    "order":[3,2,1]},{"name":"f15_6",
    "order":[2,1,3]},{"name":"f20_5",
    "order":[3,2,1]},{"name":"f20_12",
    "order":[1,3,2]},{"name":"f20_3",
    "order":[2,1,3]},{"name":"f20_3",
    "order":[1,3,2]},{"name":"f20_3",
    "order":[3,2,1]},{"name":"f20_3",
    "order":[3,1,2]},{"name":"f20_3",
    "order":[1,2,3]},{"name":"f20_3",
    "order":[2,3,1]},{"name":"f20_7",
    "order":[3,2,1]},{"name":"f20_7",
    "order":[2,1,3]},{"name":"f20_7",
    "order":[1,3,2]},{"name":"f20_7",
    "order":[2,3,1]},{"name":"f20_7",
    "order":[3,1,2]},{"name":"f20_7",
    "order":[1,2,3]},{"name":"f20_5",
    "order":[1,3,2]},{"name":"f20_5",
    "order":[2,1,3]},{"name":"f20_12",
    "order":[3,2,1]},{"name":"f20_12",
    "order":[2,1,3]},{"name":"f24_6",
    "order":[1,3,2]},{"name":"f24_6",
    "order":[3,2,1]},{"name":"f24_6",
    "order":[2,1,3]},{"name":"f30_12p",
    "order":[1,3,2]},{"name":"f30_4",
    "order":[2,1,3]},{"name":"f30_4",
    "order":[1,3,2]},{"name":"f30_4",
    "order":[3,2,1]},{"name":"f30_4",
    "order":[3,1,2]},{"name":"f30_4",
    "order":[1,2,3]},{"name":"f30_4",
    "order":[2,3,1]},{"name":"f30_12p",
    "order":[3,2,1]},{"name":"f30_12p",
    "order":[2,1,3]},{"name":"f36_5",
    "order":[1,3,2],
    "rootUnityPower":2},{"name":"f36_5",
    "order":[3,2,1],
    "rootUnityPower":2},{"name":"f36_5",
    "order":[2,1,3],
    "rootUnityPower":2},{"name":"f36_5",
    "order":[1,3,2],
    "rootUnityPower":1},{"name":"f36_5",
    "order":[2,1,3],
    "rootUnityPower":1},{"name":"f36_5",
    "order":[3,2,1],
    "rootUnityPower":1},{"name":"f40_8",
    "order":[3,2,1]},{"name":"f40_8",
    "order":[2,1,3]},{"name":"f40_8",
    "order":[1,3,2]},{"name":"f40_8",
    "order":[2,3,1]},{"name":"f40_8",
    "order":[3,1,2]},{"name":"f40_8",
    "order":[1,2,3]},{"name":"f45_6",
    "order":[2,1,3],
    "rootUnityPower":1},{"name":"f45_6",
    "order":[1,3,2],
    "rootUnityPower":1},{"name":"f45_6",
    "order":[3,2,1],
    "rootUnityPower":1},{"name":"f45_6",
    "order":[1,3,2],
    "rootUnityPower":2},{"name":"f45_6",
    "order":[2,1,3],
    "rootUnityPower":2},{"name":"f45_6",
    "order":[3,2,1],
    "rootUnityPower":2},{"name":"f60_11s",
    "order":[3,2,1]},{"name":"f60_12",
    "order":[1,3,2]},{"name":"f60_7",
    "order":[1,2,3]},{"name":"f60_7",
    "order":[3,1,2]},{"name":"f60_7",
    "order":[2,3,1]},{"name":"f60_7",
    "order":[1,3,2]},{"name":"f60_7",
    "order":[2,1,3]},{"name":"f60_7",
    "order":[3,2,1]},{"name":"f60_11s",
    "order":[1,3,2]},{"name":"f60_11s",
    "order":[2,1,3]},{"name":"f60_12",
    "order":[3,2,1]},{"name":"f60_12",
    "order":[2,1,3]},{"name":"f64_8",
    "order":[3,2,1],
    "rootPower":-1},{"name":"f64_8",
    "order":[3,2,1],
    "rootPower":1},{"name":"f64_8",
    "order":[2,1,3],
    "rootPower":-1},{"name":"f64_8",
    "order":[1,3,2],
    "rootPower":-1},{"name":"f64_8",
    "order":[1,3,2],
    "rootPower":1},{"name":"f64_8",
    "order":[2,1,3],
    "rootPower":1},{"name":"f80_9",
    "order":[1,3,2]},{"name":"f80_9",
    "order":[2,1,3]},{"name":"f80_9",
    "order":[3,2,1]},{"name":"f81_10",
    "order":[1,2,3],
    "rootPower":1},{"name":"f81_10",
    "order":[1,2,3],
    "rootPower":ER(3)**2},{"name":"f81_10",
    "order":[1,2,3],
    "rootPower":ER(3)}]

ChevieData["G32"]["sparseFakeDegrees"]=[[1,0],[1,80],[1,40],[1,61,1,67,1,73,1,79],[1,21,1,27,1,33,1,39],[1,11,1,17,1,23,1,29],[1,41,1,47,1,53,1,59],[1,51,1,57,1,63,1,69],[1,1,1,7,1,13,1,19],[1,36,1,42,1,48,1,54,1,60],[1,44,1,50,1,56,1,62,1,68],[1,4,1,10,1,16,1,22,1,28],[1,12,1,18,1,24,1,30,1,36],[1,52,1,58,1,64,1,70,1,76],[1,20,1,26,1,32,1,38,1,44],[1,48,1,54,2,60,1,66,1,72],[1,8,1,14,2,20,1,26,1,32],[1,28,1,34,2,40,1,46,1,52],[1,30,1,36,2,42,2,48,2,54,1,60,1,66],[1,2,1,8,2,14,2,20,2,26,1,32,1,38],[1,34,1,40,2,46,2,52,2,58,1,64,1,70],[1,42,1,48,2,54,2,60,2,66,1,72,1,78],[1,10,1,16,2,22,2,28,2,34,1,40,1,46],[1,14,1,20,2,26,2,32,2,38,1,44,1,50],[1,24,1,30,2,36,2,42,3,48,2,54,2,60,1,66,1,72],[1,6,2,12,3,18,3,24,3,30,2,36,1,42],[1,8,1,14,2,20,2,26,3,32,2,38,2,44,1,50,1,56],[1,16,1,22,2,28,2,34,3,40,2,46,2,52,1,58,1,64],[1,38,2,44,3,50,3,56,3,62,2,68,1,74],[1,22,2,28,3,34,3,40,3,46,2,52,1,58],[1,33,2,39,3,45,4,51,4,57,3,63,2,69,1,75],[1,12,1,18,3,24,3,30,4,36,3,42,3,48,1,54,1,60],[1,13,2,19,3,25,4,31,4,37,3,43,2,49,1,55],[1,9,2,15,3,21,4,27,4,33,3,39,2,45,1,51],[1,35,2,41,3,47,4,53,4,59,3,65,2,71,1,77],[1,29,2,35,3,41,4,47,4,53,3,59,2,65,1,71],[1,3,2,9,3,15,4,21,4,27,3,33,2,39,1,45],[1,25,2,31,3,37,4,43,4,49,3,55,2,61,1,67],[1,31,2,37,3,43,4,49,4,55,3,61,2,67,1,73],[1,9,2,15,3,21,4,27,4,33,3,39,2,45,1,51],[1,17,2,23,3,29,4,35,4,41,3,47,2,53,1,59],[1,29,2,35,3,41,4,47,4,53,3,59,2,65,1,71],[1,21,2,27,3,33,4,39,4,45,3,51,2,57,1,63],[1,7,2,13,3,19,4,25,4,31,3,37,2,43,1,49],[1,19,2,25,3,31,4,37,4,43,3,49,2,55,1,61],[1,5,2,11,3,17,4,23,4,29,3,35,2,41,1,47],[1,20,1,26,3,32,3,38,4,44,3,50,3,56,1,62,1,68],[1,16,1,22,3,28,3,34,4,40,3,46,3,52,1,58,1,64],[1,6,2,12,3,18,4,24,4,30,4,36,3,42,2,48,1,54],[1,26,2,32,3,38,4,44,4,50,4,56,3,62,2,68,1,74],[1,16,2,22,3,28,4,34,4,40,4,46,3,52,2,58,1,64],[1,12,2,18,4,24,5,30,6,36,5,42,4,48,2,54,1,60],[1,12,2,18,4,24,5,30,6,36,5,42,4,48,2,54,1,60],[1,8,2,14,4,20,5,26,6,32,5,38,4,44,2,50,1,56],[1,28,2,34,4,40,5,46,6,52,5,58,4,64,2,70,1,76],[1,24,2,30,4,36,5,42,6,48,5,54,4,60,2,66,1,72],[1,4,2,10,4,16,5,22,6,28,5,34,4,40,2,46,1,52],[1,20,2,26,4,32,5,38,6,44,5,50,4,56,2,62,1,68],[1,20,2,26,4,32,5,38,6,44,5,50,4,56,2,62,1,68],[1,16,2,22,4,28,5,34,6,40,5,46,4,52,2,58,1,64],[1,7,3,13,5,19,7,25,7,31,6,37,4,43,2,49,1,55],[1,27,3,33,5,39,7,45,7,51,6,57,4,63,2,69,1,75],[1,17,3,23,5,29,7,35,7,41,6,47,4,53,2,59,1,65],[1,5,2,11,4,17,6,23,7,29,7,35,5,41,3,47,1,53],[1,15,2,21,4,27,6,33,7,39,7,45,5,51,3,57,1,63],[1,25,2,31,4,37,6,43,7,49,7,55,5,61,3,67,1,73],[1,24,3,30,5,36,7,42,8,48,7,54,5,60,3,66,1,72],[1,14,3,20,5,26,7,32,8,38,7,44,5,50,3,56,1,62],[1,10,3,16,5,22,7,28,8,34,7,40,5,46,3,52,1,58],[1,18,3,24,5,30,7,36,8,42,7,48,5,54,3,60,1,66],[1,22,3,28,5,34,7,40,8,46,7,52,5,58,3,64,1,70],[1,8,3,14,5,20,7,26,8,32,7,38,5,44,3,50,1,56],[1,6,2,12,5,18,7,24,9,30,8,36,7,42,4,48,2,54],[1,14,2,20,5,26,7,32,9,38,8,44,7,50,4,56,2,62],[1,22,2,28,5,34,7,40,9,46,8,52,7,58,4,64,2,70],[2,18,4,24,7,30,8,36,9,42,7,48,5,54,2,60,1,66],[2,10,4,16,7,22,8,28,9,34,7,40,5,46,2,52,1,58],[2,26,4,32,7,38,8,44,9,50,7,56,5,62,2,68,1,74],[1,15,3,21,6,27,9,33,11,39,11,45,9,51,6,57,3,63,1,69],[2,12,4,18,8,24,10,30,12,36,10,42,8,48,4,54,2,60],[1,7,3,13,6,19,9,25,11,31,11,37,9,43,6,49,3,55,1,61],[1,15,3,21,6,27,9,33,11,39,11,45,9,51,6,57,3,63,1,69],[1,17,3,23,6,29,9,35,11,41,11,47,9,53,6,59,3,65,1,71],[1,11,3,17,6,23,9,29,11,35,11,41,9,47,6,53,3,59,1,65],[1,9,3,15,6,21,9,27,11,33,11,39,9,45,6,51,3,57,1,63],[1,19,3,25,6,31,9,37,11,43,11,49,9,55,6,61,3,67,1,73],[1,13,3,19,6,25,9,31,11,37,11,43,9,49,6,55,3,61,1,67],[1,11,3,17,6,23,9,29,11,35,11,41,9,47,6,53,3,59,1,65],[2,20,4,26,8,32,10,38,12,44,10,50,8,56,4,62,2,68],[2,16,4,22,8,28,10,34,12,40,10,46,8,52,4,58,2,64],[1,18,3,24,6,30,10,36,12,42,12,48,10,54,6,60,3,66,1,72],[2,21,5,27,8,33,11,39,12,45,11,51,8,57,5,63,2,69],[1,8,3,14,6,20,10,26,12,32,12,38,10,44,6,50,3,56,1,62],[2,16,5,22,8,28,11,34,12,40,11,46,8,52,5,58,2,64],[1,13,3,19,6,25,10,31,12,37,12,43,10,49,6,55,3,61,1,67],[2,11,5,17,8,23,11,29,12,35,11,41,8,47,5,53,2,59],[1,9,4,15,8,21,12,27,15,33,15,39,12,45,8,51,4,57,1,63],[1,13,4,19,8,25,12,31,15,37,15,43,12,49,8,55,4,61,1,67],[1,17,4,23,8,29,12,35,15,41,15,47,12,53,8,59,4,65,1,71],[1,12,4,18,7,24,12,30,14,36,15,42,12,48,9,54,5,60,2,66],[2,14,5,20,9,26,12,32,15,38,14,44,12,50,7,56,4,62,1,68],[1,10,2,16,6,22,10,28,14,34,15,40,14,46,10,52,6,58,2,64,1,70]]

def lxg326(para,root,i):
    u=para[1-1][1-1]
    v=para[1-1][2-1]
    w=para[1-1][3-1]
    f1=lambda u: [[[u]],[[u]],[[u]],[[u]]]
    def f4(w,v):
        return WGraph2Representation([[[1],[2],[3],[4]],[[1,2,w,-v],[2,3,w,-v],[3,4,w,-v]]],[w,v])
    
    
    def f5(u,w,v):
        return GAPMul(u**0,v**0)
    
    
    def f6(v,w):
        return map(lambda x: GAPDiv(ExteriorPower(x,2),w),f4(v,w)+GAPMul(0,v))
    
    
    def f10(u,w,v):
        return WGraph2Representation([[[[2],[]],[[],[1,2]],[[1],[]],[[],[2,3]],[[3],[]],[[],[1,3]],[[],[2,4]],[[],[1,4]],[[],[3,4]],[[4],[]]],[[1,2,-1,GAPMul(u,v)+w**2],[1,3,w,w],[1,4,1,GAPMul(-u,v)-w**2],[1,5,w,w],[1,6,v,0],[2,3,GAPMul(-u,v)-w**2,1],[2,6,GAPMul(-v,w),1],[4,5,GAPMul(u,v)+w**2,-1],[4,6,GAPMul(v,w),-1],[4,7,GAPMul(-v,w),1],[5,7,v,0],[5,9,-1,GAPMul(u,v)+w**2],[5,10,-w,-w],[6,8,v,-w],[7,8,-v,w],[7,9,1,GAPMul(-v,w)],[9,10,GAPMul(u,v)+w**2,-1]]],[u,w,v])
    
    
    def f15a(v,u,w):
        return WGraph2Representation([[[[2,3],[]],[[3],[1,2]],[[1,3],[]],[[2],[1,3,4]],[[1],[2,3,4]],[[1,2,4],[]],[[2],[3,4]],[[3],[1,2,4]],[[1,3],[4]],[[2,4],[1]],[[1,4],[2,3]],[[],[1,2,3,4]],[[2,4],[]],[[4],[1,2,3]],[[1,3,4],[]]],[[1,2,-v,GAPMul(v**-1,w**2)+u],[1,3,w,w],[1,7,v,GAPMul(-v**-1,w**2)-u],[1,13,w,w],[2,3,GAPMul(-v**-1,w**2)-u,v],[2,4,v,[2,-w,4,-u]],[2,8,0,-u],[2,10,w,[2,0,4,w]],[2,12,w,-w],[2,14,0,w],[3,4,0,[2,GAPMul(v**-1,w**2)+u,4,0]],[3,5,v,GAPMul(-v**-1,w**2)-u],[3,6,w,w],[3,9,0,GAPMul(-v**-1,w**2)-u],[3,11,0,[2,0,4,GAPMul(v**-1,w**2)+u]],[3,15,0,w],[4,5,-w,v],[4,7,u,0],[4,10,u,-v],[4,12,w-GAPMul(u,v),0],[5,6,GAPMul(v**-1,w**2)+u,-v],[5,7,w,0],[5,11,0,-w],[5,12,w,0],[6,10,v,0],[6,13,w,0],[7,8,-v,[1,u,3,w]],[7,9,w,[1,w,3,0]],[7,12,-w,w],[7,13,GAPMul(v**-1,w**2)+u,-v],[8,9,-u,v],[8,12,w-GAPMul(u,v),0],[8,13,[1,0,3,GAPMul(v**-1,w**2)+u],0],[8,14,w,-v],[9,10,[1,0,3,w],[2,w,4,0]],[9,11,v,[2,-u,4,-w]],[9,12,w,-w],[9,15,0,-v],[10,11,-v,[1,w,3,u]],[10,12,-w,w],[10,13,GAPMul(v**-1,w**2)+u,0],[11,12,w-GAPMul(u,v),0],[11,13,[1,GAPMul(v**-1,w**2)+u,3,0],0],[11,14,w,0],[12,14,0,-w],[13,14,-v,GAPMul(v**-1,w**2)+u],[13,15,w,w],[14,15,GAPMul(-v**-1,w**2)-u,v]]],[v,w,u])
    
    
    def f15b(v,w,u):
        return WGraph2Representation([[[[2],[]],[[],[1,2]],[[1],[]],[[2],[]],[[],[2,3]],[[3],[1]],[[3],[]],[[1],[3]],[[],[3,4]],[[1],[4]],[[4],[1]],[[2],[4]],[[4],[2]],[[3],[]],[[4],[]]],[[1,2,-1,GAPMul(u,v)+w**2],[1,3,w,w],[1,5,-1,GAPMul(u,v)+GAPMul(v,w)],[1,6,0,[1,0,3,GAPMul(v,w)-v**2]],[1,7,1,GAPMul(v,w)],[1,8,1,0],[2,3,GAPMul(-u,v)-w**2,1],[2,4,u,0],[2,6,0,v],[2,8,-w,[1,0,3,u]],[3,8,0,GAPMul(u,v)-GAPMul(u,w)],[4,5,v-w,w],[4,6,u,[1,0,3,-v]],[4,7,-v+w,w],[4,8,-v,[1,u,3,0]],[4,12,0,-w],[5,6,-u,[1,w,3,0]],[5,7,-w-GAPMul(u,v),w],[5,8,0,u],[5,12,u,[2,0,4,-w]],[5,13,0,w],[5,14,GAPMul(-u,v),0],[6,7,v-w,0],[6,11,-v,u],[6,14,v,0],[7,9,-v,u+w],[7,12,u,0],[7,13,0,[2,0,4,v-w]],[7,15,v,w],[8,10,u,-w],[9,12,0,v],[9,13,u,[2,-w,4,0]],[9,14,w,v-w],[9,15,-w-GAPMul(u,v),w],[10,12,u,-v],[11,13,u,-w],[12,14,[2,v,4,0],-u],[13,14,[2,0,4,v],-u],[13,15,-v+w,0],[14,15,-v+w,w]]],[v,w,u])
    
    
    rep=[[f1,u],[f1,w],[f1,v],[f4,v,w],[f4,u,v],[f4,w,u],[f4,w,v],[f4,u,w],[f4,v,u],[f5,u,w,v],[f5,w,v,u],[f5,v,u,w],[f5,u,v,w],[f5,v,w,u],[f5,w,u,v],[f6,v,w],[f6,u,v],[f6,w,u],[f10,u,w,v],[f10,w,v,u],[f10,v,u,w],[f10,u,v,w],[f10,v,w,u],[f10,w,u,v],[f15a,v,u,w],[f15b,v,w,u],[f15a,v,w,u],[f15a,u,v,w],[f15b,u,v,w],[f15b,w,u,v]]
    if rep[i]==None :
        return rep[i-1][1-1](*[rep[i-1][k-1] for k in range(2,len(rep[i-1])+1)])+GAPMul(0,prod(para[1-1]))
    else:
        return false

ChevieData["G32"]["HeckeRepresentation"]=lxg326

ChevieData["G32"]["CachedRepresentations"]=[]

def lxg327(i):
    J=ER(3)
    r=ChevieData["G32"]["HeckeRepresentation"](map(lambda i: [1,J,J**2],range(1,4+1)),[],i)
    if r!=false :
        return r
    cached=ChevieData["G32"]["CachedRepresentations"]
    def f(i):
        InfoChevie("calling rep(",i,")\n")
        if not cached[i]==None :
            cached[i-1]=ChevieData["G32"]["Representation"](i)
        return cached[i-1]
    
    
    def expand(l,n):
        res=GAPMul(range(1,n+1),0)
        for i,j in zip([l[k-1] for k in range(1,GAPDiv(len(l),2)+1)],[l[k-1] for k in range(GAPDiv(len(l),2)+1,len(l)+1)]):
            res[i-1]=j
        return res
    
    
    if i<80 :
        if i==31 :
            r=Zip(f(4),f(15),KroneckerProduct)
        else:
            if i==32 :
                r=map(lambda x: SchurFunctor(x,[2,2]),f(5))
            else:
                if i==33 :
                    r=GAPMul(J,f(34))
                else:
                    if i==34 :
                        r=map(lambda x: SymmetricPower(x,3),f(4))
                    else:
                        if i==35 :
                            r=GAPMul(J**2,f(34))
                        else:
                            if i==36 :
                                r=ComplexConjugate(f(33))
                            else:
                                if i==37 :
                                    r=GAPMul(J,f(36))
                                else:
                                    if i==38 :
                                        r=GAPMul(J**2,f(36))
                                    else:
                                        if i==39 :
                                            r=map(lambda x: SchurFunctor(x,[2,2,1]),f(6))
                                        else:
                                            if i==40 :
                                                r=GAPMul(J**2,f(39))
                                            else:
                                                if i==41 :
                                                    r=GAPMul(J,f(39))
                                                else:
                                                    if i==42 :
                                                        r=ComplexConjugate(f(39))
                                                    else:
                                                        if i==43 :
                                                            r=GAPMul(J,f(42))
                                                        else:
                                                            if i==44 :
                                                                r=GAPMul(J**2,f(42))
                                                            else:
                                                                if i==45 :
                                                                    r=GAPMul(J,f(31))
                                                                else:
                                                                    if i==46 :
                                                                        r=GAPMul(J**2,f(31))
                                                                    else:
                                                                        if i==47 :
                                                                            r=GAPMul(J**2,f(32))
                                                                        else:
                                                                            if i==48 :
                                                                                r=GAPMul(J,f(32))
                                                                            else:
                                                                                if i==49 :
                                                                                    r=map(lambda x: SchurFunctor(x,[2,1,1,1]),f(10))
                                                                                else:
                                                                                    if i==50 :
                                                                                        r=GAPMul(J**2,f(49))
                                                                                    else:
                                                                                        if i==52 :
                                                                                            r=map(lambda x: map(lambda y: expand(y,30),x),[[[2,1],[5,1],[6,1],[7,1],[1,1],[8,-1],[14,1],[3,-1],[15,1],[17,1],[24,1],[8,10,13,14,16,21,23,25,-1,-1,1,1,1,1,1,-1],[9,1],[4,1],[13,1],[30,-1],[20,1],[18,1],[21,1],[10,1],[27,1],[12,1],[23,1],[28,1],[3,4,9,17,22,23,27,30,1,1,1,-1,-1,1,1,-1],[25,1],[19,1],[11,1],[29,1],[6,7,12,15,19,20,23,26,1,1,-1,1,1,-1,1,-1]],[[3,1],[9,1],[10,1],[11,1],[17,-1],[15,1],[7,1],[2,1],[8,1],[1,1],[18,1],[19,-1],[5,-1],[4,6,8,9,17,22,25,26,27,29,30,-1,1,-1,-1,1,1,-1,-1,-1,1,1],[20,-1],[1,2,4,5,7,9,13,14,15,18,19,21,23,27,29,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1],[13,1],[4,1],[23,1],[6,-1],[22,-1],[6,7,9,10,11,12,13,16,17,18,19,24,26,28,29,30,1,1,-1,1,1,-1,-1,-1,1,1,1,1,-1,1,1,1],[12,-1],[14,1],[6,7,10,12,15,16,17,18,19,26,30,1,1,1,-1,1,-1,1,1,1,-1,1],[26,1],[27,1],[28,1],[30,1],[2,8,9,26,27,28,29,30,1,1,1,1,1,-1,-1,-1]],[[4,1],[7,1],[3,1],[6,7,12,15,19,20,23,26,1,1,-1,1,1,-1,1,-1],[14,1],[6,1],[16,-1],[8,1],[3,5,6,7,11,12,20,23,25,26,29,-1,1,-1,-1,-1,1,1,-1,1,1,-1],[27,1],[10,1],[13,1],[2,8,9,26,27,28,29,30,1,1,1,1,1,-1,-1,-1],[30,1],[1,3,4,6,9,13,16,17,21,22,23,24,27,29,30,1,1,1,-1,1,1,1,-1,1,-1,1,-1,1,-1,-1],[2,-1],[19,1],[18,1],[24,1],[21,1],[28,1],[15,1],[29,1],[17,1],[26,1],[3,4,9,17,22,23,27,30,1,1,1,-1,-1,1,1,-1],[11,1],[20,1],[4,6,8,9,17,22,25,26,27,29,30,1,-1,1,1,-1,-1,1,1,1,-1,-1],[5,1]],[[6,-1],[8,1],[15,-1],[12,1],[3,-1],[13,-1],[8,10,13,14,16,21,23,25,-1,-1,1,1,1,1,1,-1],[9,1],[2,1],[20,1],[19,-1],[5,8,14,18,20,21,28,30,1,-1,1,1,1,1,1,1],[1,1],[22,1],[5,1],[16,1],[10,1],[23,-1],[25,1],[17,1],[3,4,9,17,22,23,27,30,1,1,1,-1,-1,1,1,-1],[2,6,7,16,17,18,19,24,1,1,1,-1,1,1,1,1],[6,7,10,12,15,16,17,18,19,26,30,1,1,1,-1,1,-1,1,1,1,-1,1],[21,-1],[11,-1],[28,-1],[26,1],[27,-1],[29,1],[30,1]]])
                                                                                        else:
                                                                                            if i==51 :
                                                                                                r=GAPMul(J,f(49))
                                                                                            else:
                                                                                                if i==53 :
                                                                                                    r=Zip(f(10),f(16),KroneckerProduct)
                                                                                                else:
                                                                                                    if i==54 :
                                                                                                        r=GAPMul(J**2,f(53))
                                                                                                    else:
                                                                                                        if i==55 :
                                                                                                            r=GAPMul(J,f(53))
                                                                                                        else:
                                                                                                            if i==56 :
                                                                                                                r=ComplexConjugate(f(53))
                                                                                                            else:
                                                                                                                if i==57 :
                                                                                                                    r=GAPMul(J,f(56))
                                                                                                                else:
                                                                                                                    if i==58 :
                                                                                                                        r=GAPMul(J**2,f(56))
                                                                                                                    else:
                                                                                                                        if i==59 :
                                                                                                                            r=GAPMul(J**2,f(52))
                                                                                                                        else:
                                                                                                                            if i==60 :
                                                                                                                                r=GAPMul(J,f(52))
                                                                                                                            else:
                                                                                                                                if i==61 :
                                                                                                                                    r=map(lambda x: SchurFunctor(x,[3,1,1]),f(7))
                                                                                                                                else:
                                                                                                                                    if i==62 :
                                                                                                                                        r=GAPMul(J**2,f(61))
                                                                                                                                    else:
                                                                                                                                        if i==63 :
                                                                                                                                            r=GAPMul(J,f(61))
                                                                                                                                        else:
                                                                                                                                            if i==64 :
                                                                                                                                                r=ComplexConjugate(f(61))
                                                                                                                                            else:
                                                                                                                                                if i==65 :
                                                                                                                                                    r=GAPMul(J,f(64))
                                                                                                                                                else:
                                                                                                                                                    if i==66 :
                                                                                                                                                        r=GAPMul(J**2,f(64))
                                                                                                                                                    else:
                                                                                                                                                        if i==67 :
                                                                                                                                                            r=map(lambda x: SchurFunctor(x,[2,1]),f(13))
                                                                                                                                                        else:
                                                                                                                                                            if i==68 :
                                                                                                                                                                r=GAPMul(J**2,f(67))
                                                                                                                                                            else:
                                                                                                                                                                if i==69 :
                                                                                                                                                                    r=GAPMul(J,f(67))
                                                                                                                                                                else:
                                                                                                                                                                    if i==70 :
                                                                                                                                                                        r=ComplexConjugate(f(67))
                                                                                                                                                                    else:
                                                                                                                                                                        if i==71 :
                                                                                                                                                                            r=GAPMul(J,f(70))
                                                                                                                                                                        else:
                                                                                                                                                                            if i==72 :
                                                                                                                                                                                r=GAPMul(J**2,f(70))
                                                                                                                                                                            else:
                                                                                                                                                                                if i==73 :
                                                                                                                                                                                    r=map(lambda x: ExteriorPower(x,2),f(22))
                                                                                                                                                                                else:
                                                                                                                                                                                    if i==74 :
                                                                                                                                                                                        r=GAPMul(J**2,f(73))
                                                                                                                                                                                    else:
                                                                                                                                                                                        if i==75 :
                                                                                                                                                                                            r=GAPMul(J,f(73))
                                                                                                                                                                                        else:
                                                                                                                                                                                            if i==76 :
                                                                                                                                                                                                r=ComplexConjugate(f(73))
                                                                                                                                                                                            else:
                                                                                                                                                                                                if i==77 :
                                                                                                                                                                                                    r=GAPMul(J,f(76))
                                                                                                                                                                                                else:
                                                                                                                                                                                                    if i==78 :
                                                                                                                                                                                                        r=GAPMul(J**2,f(76))
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        if i==79 :
                                                                                                                                                                                                            r=map(lambda x: SchurFunctor(x,[3,2]),f(5))
    else:
        if i==80 :
            r=map(lambda x: map(lambda y: expand(y,60),x),[[[1,8,11,14,25,57,1,1,1,-1,1,1],[1,14,30,42,51,57,60,-1,1,-1,1,1,1,2],[1,6,11,14,16,25,30,33,39,52,59,1,-1,1,-1,-1,1,1,-1,1,1,1],[12,29,1,-1],[1,3,14,16,25,31,33,59,60,1,-1,-1,1,2,-1,-1,-1,-1],[5,11,14,16,25,30,31,39,52,1,1,-1,1,1,1,1,1,1],[1,7,30,46,51,1,-1,1,-1,-1],[11,14,25,57,-1,1,-2,-1],[1,14,25,30,31,33,39,49,54,57,59,60,-1,2,-2,-1,1,1,-1,1,-1,1,1,2],[7,11,14,24,33,54,57,59,1,1,-1,1,1,1,1,1],[1,25,34,59,60,-1,1,-1,-1,1],[12,1],[1,7,10,14,30,31,39,51,52,54,59,1,-1,-1,-1,1,1,1,-1,1,-1,1],[14,25,1,-1],[59,-1],[16,25,50,59,-1,-1,-1,1],[14,16,25,31,33,54,56,57,60,1,1,-1,1,1,-1,-1,1,2],[14,52,54,60,1,1,-1,1],[7,11,33,39,45,57,59,60,1,1,1,-1,1,1,1,1],[54,55,-1,1],[14,25,30,31,33,35,51,52,54,57,59,60,1,-1,-1,1,1,1,-1,1,-1,1,1,1],[4,12,14,31,52,53,54,60,1,-1,1,1,1,1,-3,2],[37,1],[7,13,14,33,39,51,54,1,-1,-1,-1,1,1,1],[15,25,59,1,-1,1],[16,17,30,39,54,-1,-1,1,1,1],[1,7,14,19,30,31,33,51,52,60,1,-1,-1,-1,1,1,1,-2,1,-1],[21,39,51,54,-1,1,1,1],[22,53,59,-1,1,-1],[14,25,38,51,59,60,1,-1,-1,1,1,1],[25,31,-1,1],[25,31,33,39,51,1,-1,-1,1,1],[14,30,33,36,39,51,57,1,-1,1,1,-1,-1,1],[1,11,25,59,60,-1,-1,-1,-1,1],[14,28,33,39,51,54,60,1,-1,-1,1,1,-1,1],[39,1],[57,58,60,1,-1,1],[14,25,30,51,59,60,1,-1,-1,1,1,1],[31,32,33,51,1,1,1,-1],[20,31,54,-1,-1,1],[2,11,14,51,57,60,-1,1,1,1,1,2],[1,11,25,30,41,1,1,1,1,-1],[12,47,53,-1,1,-1],[12,25,43,59,1,-1,1,1],[7,14,27,31,39,52,1,-1,-1,1,1,1],[7,11,51,57,59,60,1,1,1,1,1,2],[14,25,31,44,52,53,54,60,1,-1,1,1,1,1,-3,2],[9,11,31,33,54,57,59,-1,1,1,1,1,1,1],[1,11,14,25,30,31,39,48,52,54,59,1,1,-1,1,1,1,1,-1,1,-1,1],[14,16,25,59,60,-1,1,1,-1,-1],[14,30,57,1,-1,1],[52,1],[14,25,31,52,53,54,59,60,1,-1,1,1,1,-3,1,2],[18,25,31,54,59,60,1,-1,1,-1,1,1],[14,25,40,52,54,59,60,1,-1,-1,1,-1,1,2],[14,16,25,26,30,33,39,52,54,57,59,60,1,-1,-1,1,-1,1,-1,-1,1,1,1,1],[57,1],[23,57,60,-1,1,1],[25,59,-1,1],[60,1]],[[8,13,14,49,-1,1,1,-1],[6,14,18,19,28,33,37,50,57,58,60,-1,-1,1,1,1,-1,-1,1,1,1,1],[6,12,13,14,18,20,40,43,49,52,54,55,60,1,1,1,1,-1,1,-1,1,-1,-1,-1,1,-1],[18,28,30,57,58,60,-1,-1,1,1,-1,1],[11,13,14,18,23,28,30,31,36,37,40,50,53,54,57,58,1,1,1,-1,1,-2,1,1,-1,1,-1,-1,-1,-1,1,-2],[13,14,31,45,49,1,1,-1,1,-1],[7,1],[13,14,18,28,37,40,46,49,54,58,-1,-1,1,1,-1,1,-1,1,1,1],[2,13,14,18,28,31,37,40,50,53,54,57,58,60,-1,-1,-2,1,2,-1,-1,1,1,1,1,1,2,1],[5,7,13,14,18,20,28,33,36,37,49,53,57,1,-1,1,1,-2,1,1,1,1,1,-1,1,-1],[6,10,18,20,23,28,33,-1,1,1,-1,-1,-1,-1],[37,57,60,-1,1,1],[6,7,14,31,42,1,1,1,-1,-1],[14,18,28,37,58,-1,1,1,-1,1],[17,18,20,22,53,54,58,-1,1,-1,1,-1,1,1],[20,23,26,28,36,1,-1,-1,1,1],[12,14,17,18,20,28,29,31,37,40,50,54,57,58,60,-1,-1,-1,2,-1,1,1,-1,-1,1,1,2,1,2,1],[14,18,37,51,57,58,-1,1,-1,-1,1,1],[7,9,13,18,20,28,33,49,50,52,53,55,58,-1,-1,1,-1,1,1,1,-1,1,-1,1,1,1],[20,1],[14,28,31,37,40,50,53,57,58,60,-1,1,-1,-1,1,1,1,1,1,1],[14,17,18,28,31,32,33,37,40,50,54,57,58,-1,-1,3,1,-1,-1,-1,-1,1,1,1,1,2],[23,1],[7,13,14,40,44,52,53,55,-1,1,1,-1,-1,-1,-1,1],[16,20,28,-1,1,1],[23,25,36,-1,1,1],[6,7,14,17,18,20,31,33,34,53,1,1,1,-1,-1,-1,-1,1,1,1],[28,1],[17,18,20,54,58,-1,1,-1,1,1],[14,18,28,37,40,50,54,58,-1,1,1,-1,1,1,1,1],[18,20,28,30,31,37,54,58,1,-1,1,-1,-1,-1,1,1],[15,17,20,28,31,33,40,50,53,54,57,58,-1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1],[14,18,21,33,53,57,60,-1,-1,-1,1,1,1,1],[12,13,17,18,20,47,49,53,54,58,-1,-1,-1,1,-1,1,1,-1,1,1],[14,18,33,37,53,54,57,58,-1,2,-1,-1,-1,1,1,1],[36,1],[12,57,60,-1,1,1],[14,20,28,30,50,57,60,-1,1,1,1,1,1,1],[20,31,40,53,55,59,60,-1,-1,1,1,-1,1,1],[18,20,31,40,52,54,55,-1,1,1,-1,-1,-1,1],[3,14,18,28,37,49,50,54,58,1,-1,1,1,-1,-1,1,1,2],[13,49,1,-1],[30,41,57,60,-1,1,-1,-1],[6,18,30,33,48,1,-1,1,1,-1],[7,13,14,20,31,-1,1,1,-1,-1],[1,7,13,20,28,37,49,50,52,55,58,1,-1,1,1,1,-1,-1,1,-1,1,1],[13,14,17,18,27,28,31,33,37,40,50,54,57,58,-1,-1,-1,3,1,1,-1,-1,-2,1,1,2,1,3],[13,18,24,28,31,33,49,50,53,60,1,-1,1,1,-1,1,-1,1,1,1],[6,13,14,31,49,1,1,1,-1,-1],[4,12,14,20,28,37,50,52,55,58,1,-1,1,-1,-1,1,-1,1,-1,-1],[14,57,60,-1,1,1],[52,1],[14,18,28,31,33,35,37,40,50,54,57,58,-1,3,1,-1,-1,-1,-2,1,1,1,1,2],[18,28,31,37,40,50,54,58,1,1,-1,-1,1,1,1,1],[14,20,28,30,37,38,50,55,57,58,-1,1,1,1,-1,-1,1,1,1,1],[14,18,20,28,33,39,50,52,53,58,60,-1,-1,1,2,1,-1,1,-1,1,1,1],[57,1],[58,1],[18,20,28,30,33,37,56,-1,1,1,1,1,1,-1],[37,58,-1,1]],[[23,30,37,41,42,1,1,1,-1,1],[1,8,23,30,37,42,51,1,1,1,-1,1,-1,1],[1,5,16,19,25,30,36,42,50,59,-1,1,1,1,1,1,1,1,1,-1],[1,8,12,29,43,-1,-1,1,1,1],[1,6,8,16,25,27,30,39,42,51,59,-1,-1,-1,1,-1,1,1,-1,1,-1,-1],[5,6,16,30,36,39,45,1,1,1,1,1,1,-1],[16,23,42,1,-1,1],[1,2,8,23,30,37,59,1,1,1,-1,-1,-1,1],[1,6,8,23,25,30,35,36,37,39,42,49,51,59,1,1,1,1,1,-2,1,-1,1,1,-1,-1,1,1],[1,8,16,23,25,30,37,49,55,-2,-1,-1,2,1,1,1,1,-1],[1,23,25,42,1,-1,-1,-1],[12,1],[5,6,16,20,23,25,30,36,39,42,49,1,1,1,1,-1,1,1,1,1,1,-1],[1,8,30,38,1,1,-1,1],[1,8,25,59,1,1,-1,1],[7,16,25,-1,-1,1],[1,6,8,10,16,23,30,37,39,49,51,59,2,1,1,-1,1,1,-1,1,1,-1,1,2],[1,5,6,8,9,16,30,49,1,1,1,1,1,1,-1,-1],[1,6,23,25,36,37,50,51,52,-1,1,2,1,-1,1,1,1,-1],[6,26,49,1,-1,-1],[5,6,8,16,23,25,30,37,39,49,51,54,1,1,1,1,1,1,-1,1,1,-1,1,1],[1,5,6,8,16,22,29,30,39,44,49,51,59,3,1,2,2,1,1,-1,-1,1,1,-3,1,1],[23,1],[6,30,36,40,49,50,-1,1,1,1,1,1],[25,1],[13,23,36,49,-1,-1,1,1],[1,5,6,16,23,30,39,42,-1,1,1,2,-1,1,1,1],[6,36,49,-1,1,1],[1,8,12,22,25,47,59,1,1,1,1,-1,-1,1],[1,8,11,23,25,30,51,59,1,1,1,1,1,-1,1,1],[1,8,32,39,59,1,1,1,1,1],[33,36,39,51,59,1,1,-1,-1,-1],[1,23,30,31,36,37,-1,1,-1,1,-1,1],[1,14,23,25,42,59,1,1,-1,-1,-1,1],[1,8,18,30,36,49,59,2,1,1,-1,1,-1,1],[36,1],[37,1],[23,25,30,34,51,1,1,-1,1,1],[39,1],[1,39,49,50,56,59,-1,-1,1,1,1,-1],[1,8,23,30,37,51,59,1,1,1,-1,1,1,1],[42,1],[12,22,53,-1,-1,1],[1,8,25,29,-1,-1,1,1],[5,16,30,36,39,1,1,1,1,1],[23,25,37,50,51,2,1,1,1,1],[1,5,6,8,12,16,22,29,30,39,49,51,59,3,1,2,2,1,1,1,-1,-1,1,-3,1,2],[1,21,23,25,37,39,49,51,-1,-1,1,1,1,1,1,1],[5,6,16,25,28,30,36,39,42,49,1,1,1,1,-1,1,1,1,1,-1],[8,25,30,46,50,51,-1,-1,1,-1,-1,-1],[8,23,30,37,1,1,-1,1],[3,5,6,16,50,-1,1,1,1,-1],[1,4,5,6,8,16,22,25,29,30,39,49,51,59,3,1,1,2,2,1,1,1,-1,-1,1,-3,1,1],[1,6,25,39,48,49,51,59,1,1,1,1,-1,-1,1,1],[5,6,16,17,25,30,49,51,1,1,2,1,1,-1,-1,1],[1,5,6,16,23,24,25,30,36,37,49,50,51,-1,-1,-1,-1,2,1,1,-1,-1,1,1,1,1],[23,37,58,1,1,-1],[23,37,60,1,1,-1],[1,8,15,25,-1,-1,1,1],[57,1]],[[1,6,-1,1],[1,9,20,30,32,39,46,55,57,59,1,-1,1,2,1,2,-1,1,-1,1],[1,6,24,28,37,39,50,51,55,57,-1,1,-1,1,1,-1,-1,-1,-1,1],[12,20,22,29,40,55,59,-1,1,-1,1,-1,1,-1],[1,7,10,16,30,32,37,39,40,57,59,-1,-1,1,-1,-1,-1,1,-2,-1,1,-2],[1,6,7,13,20,28,-1,1,1,-1,1,1],[7,20,-1,-1],[1,6,31,32,39,57,59,1,-1,1,1,1,-1,1],[1,19,28,30,32,37,39,40,46,55,57,59,2,-1,-1,2,1,-1,2,1,-1,1,-2,2],[1,6,7,11,20,25,32,37,39,40,57,-1,1,1,1,1,1,-1,-1,-1,1,1],[5,16,25,30,39,1,1,-1,1,1],[4,20,22,29,32,39,40,55,57,-1,1,-1,1,1,1,-1,1,-1],[1,28,-1,1],[1,8,32,39,57,59,1,1,1,1,-1,1],[15,32,39,59,1,1,1,1],[7,16,1,1],[1,15,30,32,37,39,40,46,50,55,57,59,1,1,2,2,-1,3,1,-1,1,1,-2,2],[1,30,32,39,46,57,59,60,1,1,1,1,-1,-1,1,1],[2,6,7,28,30,37,40,46,51,59,1,1,1,-1,1,-1,1,-1,-1,1],[7,1],[1,30,32,37,39,46,55,57,59,1,1,1,-1,1,-1,1,-2,1],[1,7,12,22,30,32,39,46,53,57,59,1,1,1,1,2,2,2,-1,-1,-2,2],[16,20,25,26,-1,1,1,1],[1,15,20,28,34,37,51,57,-1,1,1,1,-1,1,-1,1],[25,1],[16,25,28,36,1,-1,1,-1],[1,7,20,30,37,41,-1,-1,-1,-1,-1,1],[20,28,1,1],[29,32,39,57,59,1,1,1,-1,1],[1,30,32,39,40,46,54,57,59,1,1,1,1,1,-1,1,-1,1],[14,32,39,57,59,1,1,1,-1,1],[20,28,35,37,39,40,59,1,1,-1,1,-1,-1,-1],[1,7,20,28,37,46,55,57,58,1,-1,-1,-1,-1,-1,1,-1,1],[3,6,15,30,32,39,50,59,1,-1,1,1,1,2,1,1],[1,20,28,30,32,37,39,46,57,59,1,1,1,1,1,1,1,-1,-1,1],[20,23,28,1,-1,1],[15,17,30,39,50,55,1,-1,1,1,1,1],[1,18,20,30,46,55,57,1,-1,1,1,-1,1,-1],[21,37,39,51,55,-1,-1,1,1,1],[51,57,-1,1],[1,6,30,32,39,40,46,48,57,59,1,1,2,1,2,1,-1,-1,-1,2],[6,49,1,-1],[20,22,29,40,44,55,57,-1,1,-1,1,1,-1,1],[12,22,47,-1,-1,1],[1,20,28,42,-1,1,1,1],[6,7,20,30,32,39,40,46,51,59,1,1,1,2,1,1,1,-1,-1,1],[1,7,12,29,30,32,39,43,46,57,59,1,1,1,1,2,3,3,1,-1,-3,3],[6,27,32,37,40,46,55,1,-1,-1,-1,1,-1,1],[1,6,28,45,-1,1,1,-1],[1,30,32,39,46,50,51,59,-1,-1,-1,-1,1,1,1,-1],[1,7,46,55,57,1,-1,-1,1,-1],[57,-1],[1,7,12,30,32,39,46,57,59,1,1,1,2,2,2,-1,-3,2],[7,30,32,39,57,59,1,1,1,1,-1,1],[1,30,32,39,46,51,57,59,1,2,1,1,-1,-1,-1,1],[1,28,30,33,37,39,40,46,55,59,1,-1,1,-1,-1,1,1,-1,1,1],[52,57,1,-1],[30,39,40,56,59,1,1,1,-1,1],[32,39,-1,-1],[30,32,38,39,59,1,1,-1,1,1]]])
        else:
            if i==81 :
                r=Zip(f(4),f(25),KroneckerProduct)
            else:
                if i==82 :
                    r=GAPMul(J**2,f(81))
                else:
                    if i==83 :
                        r=GAPMul(J,f(81))
                    else:
                        if i==84 :
                            r=ComplexConjugate(f(81))
                        else:
                            if i==85 :
                                r=GAPMul(J,f(84))
                            else:
                                if i==86 :
                                    r=GAPMul(J**2,f(84))
                                else:
                                    if i==87 :
                                        r=GAPMul(J,f(79))
                                    else:
                                        if i==88 :
                                            r=GAPMul(J**2,f(79))
                                        else:
                                            if i==89 :
                                                r=GAPMul(J**2,f(80))
                                            else:
                                                if i==90 :
                                                    r=GAPMul(J,f(80))
                                                else:
                                                    if i==91 :
                                                        r=map(lambda x: map(lambda y: expand(y,64),x),[[[5,20,54,61,1,1,1,1],[1,10,11,20,38,39,42,46,49,51,54,55,57,58,1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,1,-1,-1],[6,10,19,20,33,42,45,49,51,54,55,58,61,64,1,1,-1,-1,-1,1,-1,1,1,-1,-1,-1,-1,1],[13,38,39,61,-1,1,1,-1],[2,18,45,64,1,-1,1,-1],[3,6,10,38,39,41,42,49,64,-1,-1,-1,-1,-1,1,-1,1,1],[4,10,11,42,45,46,49,51,55,57,58,-1,-1,-1,-1,1,-1,1,-1,1,-1,-1],[11,20,25,38,39,41,45,54,58,64,-1,-1,-1,-1,-1,1,2,-1,1,-1],[19,38,45,54,1,-1,1,-1],[45,-1],[10,11,15,29,34,41,42,45,46,51,54,57,-2,-1,1,1,1,1,-1,1,-1,-1,1,-1],[15,27,32,34,42,45,49,58,61,64,-1,1,1,-1,-1,-1,1,-1,-1,2],[7,10,18,45,58,1,1,-1,1,1],[8,10,33,42,49,51,55,64,1,1,-1,1,1,1,-1,1],[9,33,49,51,56,58,61,64,1,-1,1,1,-1,-1,-1,1],[11,12,14,18,20,33,38,39,45,46,51,55,61,-1,-1,1,1,-1,-1,-2,-2,1,-1,1,1,1],[10,17,20,23,27,42,49,54,58,64,1,-1,-1,-1,-1,1,-1,-1,1,-1],[10,11,38,39,42,45,46,49,51,55,57,61,-1,-1,-1,-1,-1,1,-1,1,-1,1,-1,1],[10,19,42,45,49,58,61,64,-1,-1,-1,-1,1,-1,-1,1],[33,49,58,1,-1,1],[19,45,54,61,1,1,-1,-1],[19,33,38,39,41,45,49,53,58,61,64,1,1,-2,-1,1,2,-2,1,2,1,-1],[10,15,17,27,34,38,39,49,51,54,57,64,1,-1,1,1,-1,-1,-1,1,1,-1,1,1],[33,39,51,54,61,1,1,-1,-1,-1],[10,11,14,15,29,33,34,38,39,42,46,49,51,54,55,57,58,61,3,1,-1,-1,-1,-1,-1,-1,-1,2,1,1,2,-1,-1,1,1,1],[11,15,19,30,33,38,39,45,49,55,58,61,64,-1,-1,1,-1,1,-1,-1,2,-1,1,1,1,-2],[10,15,19,27,34,38,39,45,49,51,54,57,64,-1,1,1,-1,1,1,1,1,-1,-1,1,-1,-1],[10,20,38,39,42,45,49,51,54,57,58,60,64,1,-1,-1,-1,1,1,-1,1,-1,1,1,-1,-1],[11,18,19,20,29,33,38,39,45,49,51,55,58,61,64,-1,1,1,-1,-1,-1,-4,-4,2,-1,2,1,1,3,-2],[10,11,15,19,29,34,38,39,42,45,46,49,51,57,58,59,61,64,2,1,-1,1,-1,-1,-2,-2,1,1,1,-1,2,1,2,1,2,-1],[34,36,39,45,49,-1,1,1,1,-1],[10,16,25,42,45,46,51,56,57,58,1,-1,-1,1,1,1,1,-1,1,1],[20,21,33,45,49,51,54,56,64,1,1,-1,1,1,1,1,-1,1],[15,24,33,34,49,51,58,1,-1,1,1,-1,-1,1],[10,18,28,29,33,38,39,42,45,49,51,58,61,64,1,1,1,-1,-1,-2,-2,1,1,1,1,1,2,-1],[31,33,34,36,45,61,64,-1,1,1,-1,-1,-1,1],[10,15,34,49,63,-1,1,1,-1,-1],[10,34,42,49,56,64,1,1,1,1,-1,1],[15,33,45,1,-1,1],[19,45,-1,-1],[10,20,33,42,49,51,54,55,61,64,1,-1,-1,1,1,1,-1,-1,-1,1],[15,19,34,45,49,51,-1,1,-1,1,-1,1],[10,33,38,39,42,45,50,51,57,58,61,64,1,-1,-2,-2,1,1,1,2,1,1,2,-1],[20,49,-1,-1],[20,54,61,1,1,1],[10,18,19,20,27,29,33,38,39,42,45,49,51,54,58,61,64,2,1,1,-2,-1,-1,-2,-4,-4,2,2,-1,3,-1,1,3,-2],[11,18,29,33,38,39,45,51,52,55,58,61,64,-1,1,-1,-1,-3,-3,2,1,-1,1,1,3,-2],[10,19,29,33,38,39,42,45,47,51,58,61,1,1,-1,-1,-1,-1,1,1,1,1,1,1],[33,38,39,40,49,51,56,64,-1,-1,-1,-1,1,1,-1,1],[20,27,43,50,51,54,57,64,-1,-1,-1,-1,-1,-1,-1,-1],[10,15,33,34,42,44,45,51,54,56,58,64,1,1,-1,1,1,-1,1,1,1,-1,1,1],[10,42,45,48,58,61,64,1,1,1,-1,1,1,-1],[10,22,34,38,41,42,53,55,56,1,-1,1,1,-1,1,-1,1,-1],[10,15,34,42,45,56,58,-1,-1,-1,-1,-1,1,-1],[10,19,20,33,38,39,41,42,45,49,51,54,55,58,1,1,-2,-1,-2,-2,1,1,2,-1,2,-1,-1,1],[19,20,38,39,45,49,51,1,-1,-1,-1,1,-1,1],[15,19,20,27,33,34,38,39,42,45,49,51,54,58,61,64,-1,-1,1,1,1,-1,1,1,-1,-2,2,-1,-1,-1,-2,2],[20,38,39,54,-1,-1,-1,-1],[26,33,38,41,49,51,55,64,-1,1,1,-1,-1,-1,1,-1],[15,20,27,33,34,35,42,46,57,-1,1,1,1,-1,-1,-1,1,1],[15,33,34,42,45,49,56,1,-1,1,1,1,1,-1],[11,15,18,19,29,34,37,38,39,45,49,51,55,58,61,64,-1,-1,1,1,-1,-1,1,-2,-2,2,-1,1,1,1,2,-2],[15,29,33,34,38,39,42,45,49,51,56,61,62,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1],[58,-1]],[[10,15,45,49,58,64,1,-1,-1,1,-1,1],[11,15,17,23,33,37,40,45,52,58,64,1,1,1,1,-1,1,1,1,1,-1,1],[1,4,11,15,17,37,45,49,60,-1,-1,1,1,1,-1,1,-1,1],[33,49,58,64,1,-1,1,-1],[20,1],[33,61,-1,1],[17,29,37,40,41,45,46,52,64,1,1,1,1,1,1,-1,1,1],[15,33,34,42,45,56,58,1,-1,1,1,1,-1,1],[2,4,14,17,37,40,45,60,1,1,1,1,1,1,1,1],[3,17,29,45,46,-1,-1,-1,-1,1],[11,14,29,37,46,52,60,-1,1,1,1,-1,1,-1],[11,40,43,49,50,56,57,58,61,1,1,1,-1,1,1,1,-1,1],[39,-1],[50,60,1,1],[6,17,49,60,61,1,1,-1,1,1],[11,14,15,25,31,33,36,45,49,56,64,1,-1,1,1,1,-2,1,1,1,-1,1],[15,61,1,-1],[33,37,40,49,52,58,64,-1,1,1,1,1,-1,1],[49,61,-1,1],[5,20,-1,-1],[4,7,14,17,37,40,45,58,60,1,1,1,1,1,1,1,1,1],[4,8,11,31,33,36,46,49,56,57,1,-1,1,1,-1,1,1,1,-1,1],[9,11,14,29,33,37,40,45,46,52,60,61,1,1,-1,-1,-1,-1,1,1,1,-1,1,1],[12,17,31,33,36,37,49,1,1,-1,1,-1,1,-1],[11,14,16,25,29,31,33,36,37,46,49,52,56,60,1,-1,-1,-1,-1,1,-1,1,-2,2,1,-1,-1,2],[4,26,31,33,36,37,45,49,56,58,62,1,-1,1,-1,1,1,1,1,-1,1,1],[4,11,14,29,33,37,46,52,58,60,61,1,-1,1,1,1,1,-1,1,1,-1,-1],[11,14,15,29,31,33,36,37,45,46,48,52,56,58,60,1,-1,1,-1,1,-1,1,-1,1,1,1,-1,-1,1,1],[4,11,14,15,17,29,31,33,36,45,46,49,56,60,64,1,1,-1,1,-1,-1,3,-4,3,2,2,3,-3,1,1],[4,11,14,17,29,31,33,36,37,46,49,52,55,56,60,1,1,-1,-1,-1,2,-2,2,-1,2,2,-1,-1,-1,1],[11,17,33,40,49,54,56,57,63,1,1,1,1,-1,-1,1,1,-1],[17,34,37,52,54,60,61,1,1,-1,-1,1,1,1],[15,17,19,60,61,-1,1,1,1,1],[14,53,54,1,1,1],[14,17,29,31,33,36,40,46,49,56,57,60,61,64,-1,-1,-1,1,-2,1,-1,1,2,-2,-1,1,-1,1],[14,54,59,61,1,1,1,1],[14,1],[17,54,60,61,1,1,1,1],[13,39,1,-1],[4,14,17,18,37,40,60,-1,-1,-1,-1,-1,-1,-1],[11,15,17,21,37,40,45,49,58,60,1,1,1,1,-1,1,1,-1,1,1],[4,11,17,22,29,31,36,40,45,53,54,57,1,1,1,-1,1,1,1,1,1,-1,-1,1],[14,17,24,29,31,33,36,37,45,46,49,52,56,57,60,-1,-1,1,-1,1,-2,1,-1,1,1,2,-1,-1,-1,1],[11,15,30,49,57,60,1,1,1,-1,1,-1],[15,45,49,58,-1,-1,1,-1],[4,11,14,15,29,31,33,36,37,45,46,49,56,60,61,64,1,2,-1,2,-1,3,-4,3,-1,2,2,3,-3,2,-1,1],[14,17,29,31,33,36,45,46,49,56,57,60,64,-1,-1,-1,2,-3,2,1,1,3,-2,-1,1,1],[4,28,31,33,36,46,48,49,56,60,1,-1,1,-1,1,1,-1,1,-1,1],[33,60,61,-1,1,1],[15,37,52,61,1,1,1,-1],[17,36,37,54,60,61,1,1,-1,1,1,1],[61,-1],[32,54,1,1],[17,38,54,60,-1,-1,-1,-1],[4,11,15,17,31,33,36,37,40,44,45,46,56,57,58,60,1,2,2,1,2,-2,2,-1,1,-1,2,1,-1,1,1,1],[4,11,14,15,17,31,33,36,40,45,47,57,1,1,1,1,1,1,-1,1,1,1,1,1],[4,15,31,33,35,36,45,49,56,58,61,-1,-1,-2,1,-1,-2,-1,-1,1,-1,1],[15,33,45,1,-1,1],[51,54,1,1],[15,52,61,-1,-1,1],[17,60,1,1],[4,11,14,26,31,33,36,45,46,49,56,60,64,1,1,-1,-1,2,-2,2,1,1,2,-2,1,1],[14,17,29,31,33,36,46,49,51,54,56,57,1,2,1,-1,1,-1,-1,-1,1,1,1,1],[11,17,27,58,1,1,-1,-1]],[[12,56,57,-1,1,1],[7,13,16,17,20,25,27,30,43,50,51,54,57,59,61,64,-1,1,1,-1,1,1,2,-1,1,1,1,1,1,1,-1,1],[17,20,27,31,33,38,43,49,50,51,54,56,64,-1,1,1,1,-1,1,1,1,1,1,2,-1,1],[27,28,45,57,58,-1,-1,-1,-1,-1],[17,32,33,1,-1,1],[38,39,61,1,1,-1],[7,13,20,23,27,30,33,35,50,51,54,59,61,64,-1,1,1,1,1,-1,1,1,1,1,1,1,-1,1],[2,7,17,27,33,38,39,40,51,61,1,-1,1,1,2,1,1,1,-1,-1],[9,17,20,23,24,27,31,33,39,54,64,-1,1,1,1,1,1,-1,1,1,1,1],[17,20,23,27,33,42,54,64,-1,-1,-1,-1,-1,1,-1,-1],[4,7,30,33,37,38,45,54,56,58,59,61,63,-1,-1,-1,1,-1,-1,-1,-2,1,-1,1,-1,-1],[17,20,25,27,30,33,38,43,51,54,61,64,-1,1,1,1,-1,-1,1,1,1,1,-1,1],[17,33,50,51,60,1,1,-1,-1,-1],[5,13,20,38,39,54,1,-1,1,1,1,1],[15,17,20,34,38,39,50,51,54,-1,-1,1,-1,1,1,1,1,1],[1,7,8,27,33,38,39,40,43,50,54,56,57,58,59,1,-1,1,2,1,1,1,1,1,1,1,1,2,1,1],[6,17,38,50,51,53,61,1,1,-1,-1,-1,1,1],[7,13,27,30,33,46,57,59,61,-1,1,1,-1,1,1,1,1,-1],[17,33,36,38,51,61,-1,-1,-1,1,1,-1],[50,51,54,-1,-1,-1],[17,20,23,31,33,39,43,54,56,57,64,1,1,1,-1,1,1,-1,1,-1,-1,1],[17,27,31,33,39,40,50,51,54,56,57,58,2,1,-1,2,1,1,-1,-2,-1,1,1,1],[3,22,27,38,39,45,54,56,58,1,1,1,2,1,1,2,-1,1],[9,20,23,27,64,-1,1,1,1,1],[1,7,17,23,30,37,38,39,45,49,51,54,56,58,59,61,63,-1,1,1,-1,1,1,2,1,1,1,-1,3,-1,1,-1,1,1],[7,17,18,27,31,33,39,40,45,49,51,54,56,57,-1,1,1,1,-1,2,1,1,-1,-1,-1,-1,1,1],[17,23,27,31,33,38,43,45,54,55,56,57,58,1,1,-1,-1,1,-2,-1,-1,-1,-1,1,-1,-1],[11,17,27,30,33,38,39,40,51,54,57,58,61,1,1,1,1,1,1,1,1,-1,1,1,1,1],[7,13,17,20,23,27,31,33,38,39,40,43,50,51,54,56,57,58,62,63,64,-1,1,1,-1,-1,2,-1,2,1,2,1,1,1,-1,1,1,3,2,1,1,-1],[7,17,20,23,30,31,33,37,38,39,50,51,54,57,58,59,61,63,64,1,2,-1,-1,1,-1,1,1,1,1,-1,-2,1,1,1,-1,1,1,-1],[17,20,23,27,31,33,54,64,1,1,1,1,-1,1,1,1],[14,17,20,33,38,39,51,54,59,61,-1,1,1,1,1,1,-1,1,-1,1],[20,33,38,39,50,54,1,1,1,1,1,1],[15,17,38,50,51,54,1,1,-1,-1,-1,-1],[20,23,30,33,37,38,39,50,51,54,57,58,63,64,-1,-1,1,1,1,1,1,1,-1,1,1,1,1,-1],[19,33,36,50,54,1,-1,-1,-1,-1],[37,38,52,54,-1,-1,-1,-1],[20,39,54,61,1,1,1,1],[17,33,54,1,1,1],[17,20,31,33,39,45,54,58,64,-1,-1,1,-1,-1,1,-1,1,-1],[20,38,39,49,54,56,57,64,1,1,1,1,2,-1,-1,1],[10,17,20,23,27,31,33,42,54,64,-1,1,1,1,1,-1,1,-1,1,1],[17,20,22,23,33,38,39,51,54,57,58,61,64,1,-1,1,-1,1,1,1,-1,1,1,1,1,-1],[27,40,43,56,57,1,1,1,1,1],[21,23,27,1,-1,-1],[17,23,26,27,30,31,33,37,38,39,40,43,49,50,51,54,57,58,61,63,2,-1,1,2,1,-1,2,1,1,3,1,1,1,1,-1,3,3,2,1,1],[7,13,17,20,23,27,29,33,38,39,50,51,54,57,58,63,64,-1,1,1,-1,-1,1,1,2,1,1,1,-1,1,2,1,1,-1],[17,31,33,39,49,51,54,63,1,-1,1,1,1,-1,1,1],[38,39,54,1,1,1],[38,53,-1,1],[17,20,33,39,49,51,54,61,1,1,1,1,1,-1,1,1],[17,33,37,51,1,1,1,-1],[38,61,-1,1],[17,20,33,39,51,54,61,-1,-1,-1,-1,1,-1,-1],[17,20,27,31,33,38,39,40,43,49,51,54,57,58,64,2,1,2,-1,2,1,2,1,1,1,-1,2,1,1,1],[17,20,27,31,33,39,43,45,54,57,64,1,1,1,-1,1,1,1,-1,1,1,1],[17,31,33,38,39,41,45,51,56,57,61,64,-2,1,-2,1,-1,1,1,1,-1,-1,-1,1],[27,43,44,57,1,1,1,1],[13,38,39,61,1,-1,-1,1],[38,49,59,1,-1,-1],[20,33,39,50,54,1,1,1,1,1],[7,13,17,27,31,33,38,39,40,47,50,51,54,56,57,58,63,-1,1,1,2,-1,2,1,1,1,1,1,-1,1,1,2,1,1],[17,20,23,27,33,38,48,61,63,64,1,2,1,1,1,-1,-1,1,-1,1],[20,27,43,50,51,54,57,64,1,1,1,1,1,1,1,1]],[[4,1],[4,10,18,29,36,41,46,50,1,1,1,-1,1,-1,1,-1],[3,27,50,-1,-1,1],[1,4,-1,-1],[13,-1],[17,54,61,-1,-1,-1],[2,4,10,29,36,41,46,50,1,1,1,-1,1,-1,1,-1],[17,35,46,55,-1,-1,1,-1],[3,10,40,41,1,1,-1,-1],[10,64,-1,-1],[17,29,36,46,-1,-1,1,1],[10,19,29,41,47,54,55,61,1,1,-1,-1,1,-1,1,-1],[5,13,1,-1],[50,60,1,1],[49,51,54,61,1,-1,-1,-1],[4,10,13,28,42,46,48,50,55,1,1,1,-1,1,1,-1,-1,-1],[19,54,61,-1,1,1],[4,7,10,29,36,41,46,50,1,1,1,-1,1,-1,1,-1],[6,54,61,1,-1,-1],[39,1],[3,9,10,41,1,1,1,-1],[3,10,17,39,42,55,57,1,1,-1,1,1,-1,-1],[19,36,41,54,61,1,-1,-1,-1,-1],[42,56,-1,1],[28,29,36,42,46,50,55,1,1,-1,1,-1,1,-1],[3,10,16,25,39,42,46,50,55,1,1,-1,-1,1,1,1,-1,-1],[3,19,36,54,61,1,-1,1,1,1],[29,36,42,55,62,1,-1,1,-1,-1],[3,4,10,11,13,39,42,46,50,55,1,1,2,1,1,1,3,1,-1,-3],[3,10,12,29,36,39,42,46,55,1,1,-1,1,-1,1,2,-1,-1],[10,22,41,55,1,-1,-1,1],[36,51,52,54,-1,-1,-1,-1],[15,51,54,61,1,-1,-1,-1],[61,1],[4,13,29,41,42,54,55,63,1,1,1,1,1,1,-2,1],[53,54,-1,-1],[14,1],[51,54,-1,-1],[20,39,-1,-1],[3,10,21,41,-1,-1,-1,1],[23,41,50,1,-1,1],[3,10,39,41,42,1,2,1,-1,1],[36,42,55,-1,1,-1],[24,-1],[45,58,-1,-1],[3,4,10,13,19,29,39,42,54,55,61,1,1,2,1,-1,1,1,3,1,-3,1],[4,10,13,30,42,46,50,55,1,1,1,-1,2,1,-1,-2],[3,10,26,39,42,55,1,1,1,1,1,-1],[33,51,54,61,1,-1,-1,-1],[19,36,54,61,-1,1,1,1],[34,51,54,-1,-1,-1],[54,59,61,1,1,1],[17,50,51,61,1,-1,-1,1],[51,61,1,-1],[3,10,17,39,41,42,43,50,55,1,2,-1,1,-1,2,1,1,-1],[3,10,39,41,42,44,1,2,1,-1,1,-1],[3,10,19,31,39,42,54,55,61,-1,-1,1,1,-1,-2,-1,1,-1],[45,1],[17,32,50,61,1,-1,-1,1],[19,36,37,54,61,1,-1,1,-1,-1],[38,51,1,-1],[3,4,10,13,25,39,42,46,50,55,1,1,2,1,-1,1,2,1,-1,-2],[8,42,51,55,61,-1,-1,-1,1,1],[10,1]]])
                                                    else:
                                                        if i==92 :
                                                            r=map(lambda x: map(lambda y: expand(y,64),x),[[[3,8,18,19,21,23,27,38,39,42,43,45,53,62,63,1,1,-J,1,J**2,-1,-1,1,1,-1,J**2,1,-1,J**2,2],[1,6,8,18,21,23,38,45,53,62,63,1,-1,-J**2,2,-J,-1,1,1,-1,J**2,2],[2,8,18,24,39,42,53,62,1,J,J**2,-J,1,1,-J,J],[6,8,18,19,21,24,39,42,63,-1,J**2,-J**2,-1,1,1,-1,J,1],[7,42,45,63,-1,-1,-1,J],[21,24,27,39,42,45,62,63,J**2,1,-1,1,J,1,-1,2],[5,7,8,21,53,62,63,1,-1,1,J**2,-1,-J,1],[8,18,63,J**2,-1,J**2],[8,15,18,19,21,23,24,38,39,42,53,62,63,J-J**2,1,GAPMul(-2,J)-J**2,1,-J,-1,-1,1,1,J**2,-1,J**2,J],[8,18,19,24,39,42,43,45,46,56,62,63,J-J**2,-J,J**2,-1,J**2,1,-J**2,J**2,-1,J,-J**2,-2],[8,9,18,19,21,23,24,38,39,53,63,J**2,-1,J,-1,J,1,J,-1,-1,-J**2,-1],[8,10,16,18,19,23,38,39,42,53,63,-J,1,-J**2,J,J**2,-J**2,J**2,J**2,J,J,1],[8,15,21,24,28,39,53,63,1,-1,J,-J**2,1,-1,-J**2,1],[14,18,24,53,62,J,1,J,J,J**2],[8,11,19,23,38,39,42,45,53,62,63,1,-1,1,-1,1,1,J**2,1,-1,J**2,1],[8,17,18,23,38,42,43,45,56,63,J+GAPMul(2,J**2),-J,J-J**2,1,-1,J,-1,1,J**2,-J],[8,18,19,35,39,40,42,43,45,62,63,GAPMul(-2,J)-J**2,J**2,J**2,1,J**2,J,1,1,-J,-J**2,-J+J**2],[18,J],[8,39,45,63,1,-1,1,1],[8,18,24,36,39,53,-1,J,-J,-1,1,J**2],[8,18,24,42,53,62,J**2,J**2,1,J,1,J],[18,22,24,53,62,1,J,J,J,J**2],[8,18,19,20,24,42,45,53,62,63,2,-J,1,1,J,J**2,1,J,J**2,1],[8,45,63,1,1,GAPMul(-2,J)-J**2],[8,18,21,24,32,45,53,62,63,GAPMul(-2,J)-J**2,-1,-1,-J**2,-J**2,1,J,J**2,2],[24,42,43,50,53,62,63,1,J,J,1,1,J,1],[4,18,19,21,23,38,42,1,-1,-1,-1,1,-1,1],[8,11,18,19,24,37,39,53,63,-1,-1,J,1,J**2,1,1,J**2,-1],[8,18,42,43,61,63,-J**2,-1,-J,-J**2,-J**2,J],[8,18,24,39,53,63,GAPMul(2,J)+J**2,J,-J,1,J**2,J],[8,18,19,45,63,J,1,-1,-1,J],[8,18,21,24,25,32,42,45,53,62,J,1,-J,J**2,J,-1,-J**2,J,J**2,1],[8,19,39,42,55,63,J,-1,-1,1,-1,J],[19,39,45,56,63,J,J,-1,1,J],[8,16,18,21,23,24,38,43,53,62,63,-J**2,-J**2,J**2,-1,-J**2,J,J**2,J,J-J**2,-1,J],[18,21,38,J,J,-1],[13,19,1,-1],[8,20,24,30,42,53,62,-J,1,J,-1,J**2,J,J**2],[31,45,63,1,-1,-1],[8,18,19,34,39,42,45,63,-1,-J,J,1,J,1,-1,J+GAPMul(2,J**2)],[8,18,19,21,23,24,38,39,41,42,53,62,63,GAPMul(2,J)+J**2,-J-GAPMul(3,J**2),J,1,J**2,-J+J**2,-J**2,J**2,J**2,-J**2,J**2,-J**2,-J],[8,18,58,63,-1,-1,J**2,-1],[8,18,42,-J**2,-J,-J],[18,24,44,53,62,1,J,J,J,J**2],[8,18,24,45,63,J,1,-1,-1,-1],[8,12,18,21,23,24,35,38,40,42,43,45,53,62,63,J,-1,1,1,J**2,J**2,1,-J**2,J,1,1,-1,-J+J**2,-J-GAPMul(2,J**2),-1],[18,19,39,42,48,63,-1,1,1,J**2,J**2,-1],[19,39,60,J,J,-1],[8,18,19,24,26,42,43,45,53,60,62,63,-1,J,-1,J**2,1,1,1,-1,J**2,J**2,1,-1],[18,19,24,42,43,48,49,53,62,63,-J,1,J,J**2,J**2,J**2,1,J,J**2,-1],[8,18,23,33,38,39,43,52,J**2,GAPMul(2,J),1,-1,-1,1,-J**2,-J**2],[19,39,43,55,57,J,J,J,J,J],[18,23,38,45,63,J**2,J,-J,-1,-1],[8,18,19,39,45,54,63,-J,-J,1,J,-J,J**2,-J+J**2],[8,18,19,39,43,51,53,62,63,64,J,J**2,1,1,J,1,1,J,-1,1],[8,18,19,39,40,43,45,-1,1,J,J,1,J**2,-1],[8,18,19,24,42,51,53,63,J**2,J-J**2,-1,-J,J,-1,J**2,1],[18,43,J**2,-1],[8,18,21,23,24,38,42,53,59,62,63,2,GAPMul(2,J**2),-1,J,J-J**2,-J,J**2,J-J**2,J**2,J**2,-J**2],[8,19,39,43,47,-J**2,-J,-J,-J**2,-J],[8,18,29,42,43,61,63,J**2,1,J,J,J**2,-1,-J],[8,18,21,23,24,38,43,53,62,63,-J**2,2,-J,-1,-1,1,-J,-1,-J,1],[63,J],[8,18,19,21,23,24,38,42,43,45,52,53,62,63,-J-GAPMul(2,J**2),GAPMul(-2,J),1,J**2,-1,J,1,J**2,J**2,1,J**2,J,J**2,1]],[[1,6,20,23,36,55,57,-1,1,2,1,J**2,-1,-1],[9,20,36,38,42,57,-1,2,J**2,-J-GAPMul(2,J**2),J**2,-1],[23,25,32,38,57,1,-1,J**2,J+GAPMul(2,J**2),1],[13,20,23,38,57,1,1,-1,1,-1],[2,19,20,36,42,1,-1,J,1,1],[1,20,23,36,38,39,55,57,-1,2,1,-1,J**2,-1,-1,-1],[4,20,38,57,1,1,-J**2,-1],[20,21,J**2,1],[5,19,20,23,36,42,57,-1,-1,J,1,-J,-J,1],[20,23,35,36,38,39,40,42,55,57,-2,J**2,J,1,J,-J**2,J**2,J**2,-J**2,1],[20,23,36,37,38,-1,-1,J,-1,1],[20,23,38,41,57,59,1,J**2,-J**2,1,-1,1],[7,20,23,38,42,57,1,1,-1,1,-1,-1],[8,38,42,1,1,J**2],[20,23,27,36,1,1,1,J**2],[12,20,35,36,39,40,42,55,57,-J**2,-J,J**2,J,-1,1,1,-1,-1],[17,19,20,23,39,42,55,J**2,-J-GAPMul(2,J**2),-J+J**2,J**2,-J**2,GAPMul(2,J)+J**2,1],[22,-1],[19,20,23,38,42,57,1,1,-1,1,-1,-1],[23,38,42,1,-1,1],[14,38,1,J**2],[18,22,38,1,-1,1],[20,38,42,1,1,-1],[20,36,42,55,57,62,GAPMul(-2,J)-J**2,-1,-1,-1,-1,-1],[15,19,20,36,38,42,57,-1,1,2,-1,1,-1,-1],[19,20,39,55,57,-1,1,-1,-1,-1],[19,25,36,1,-1,J],[3,20,23,38,42,57,1,-1,1,-1,1,1],[20,38,47,50,55,57,J,J,-1,1,1,1],[20,23,38,42,43,J,1,-1,1,J],[20,42,44,63,J,-J,-J**2,-1],[15,19,28,36,38,42,-J,J,J,-J,J,-J],[19,20,23,29,38,39,42,55,1,J,-1,-1,-J**2,1,J**2,1],[20,23,38,39,40,55,J,J,1,-J,J,1],[20,36,38,39,41,42,54,J,J,1,J**2,1,J**2,-J],[36,J],[11,36,37,1,-1,-1],[38,1],[20,55,57,-1,1,1],[20,23,38,39,54,55,57,J+GAPMul(2,J**2),J,-J,-J,1,1,-J-GAPMul(2,J**2)],[10,20,23,36,38,39,42,57,J**2,-J,J**2,1,J,J,-J,-1],[20,38,-1,J**2],[44,-J**2],[20,30,38,42,1,-1,1,-J],[19,20,31,42,43,57,-1,-1,-1,-J,1,1],[20,36,38,39,46,55,57,-1,GAPMul(-2,J)-J**2,-1,-J**2,J**2,1,1],[19,20,23,33,38,39,42,52,57,-1,-1,1,1,-1,-1,-J**2,J**2,1],[23,38,39,49,J,1,-J,J],[20,38,39,42,48,49,55,57,-1,J,1,1,-J**2,-1,1,1],[20,52,57,-1,J**2,1],[23,36,39,42,51,64,1,J,-1,1,-1,-1],[23,38,57,61,J,1,J,1],[20,39,53,55,57,-1,-J,J,1,1],[20,23,34,38,39,42,55,57,-J+J**2,J,J**2,-J,-J**2,J,J,J-J**2],[19,20,23,26,38,39,57,-1,-1,1,-1,J+GAPMul(2,J**2),-1,1],[19,23,38,39,55,56,-J+J**2,J,-J,-J,J**2,J**2],[20,26,38,42,57,60,1,1,-J**2,1,-1,J**2],[58,J],[16,20,36,38,39,42,-J,-J**2,-1,1,-J,-1],[19,23,38,39,42,55,J,-J,J,J,-J,J],[20,38,50,57,-J,-J,J,J],[20,24,36,38,39,42,62,1,1,J**2,-J**2,1,J**2,-1],[19,20,45,1,-J**2,1],[20,36,42,51,55,57,1,J**2,-1,1,-1,-1]],[[12,19,23,34,36,39,48,57,58,60,61,J**2,-J**2,-J,-J**2,-1,J**2,-1,-J,-1,J,-1],[17,19,23,36,42,48,57,58,60,61,J**2,-J-GAPMul(2,J**2),-J,-1,-1,-2,-J,-2,-1,GAPMul(2,J**2)],[16,19,23,34,38,58,60,61,-J,-1,-J,-J,J,1,J**2,J],[19,34,36,38,46,48,58,60,61,-J,1,-J,-1,J**2,-1,-1,1,-J],[5,34,36,48,J**2,-J**2,1,J**2],[12,23,34,35,36,38,40,58,J**2,-J,1,-J**2,J**2,-1,-1,-1],[7,19,36,48,58,60,J**2,-J**2,-1,J,-1,J],[8,42,47,48,58,60,61,-1,1,-J**2,-J**2,1,1,-J**2],[2,4,19,23,34,36,38,42,48,57,60,61,J,-J,-J**2,-J,J,-J**2,1,-1,GAPMul(2,J**2),-J,J+GAPMul(2,J**2),J+GAPMul(2,J**2)],[23,34,36,37,38,39,42,48,58,60,61,-1,J**2,-J**2,-1,1,-J**2,-1,J+GAPMul(2,J**2),1,J+GAPMul(2,J**2),-1],[3,19,23,27,36,38,48,57,60,61,-J,-J,J,J,1,-J,1,J,1,1],[15,19,23,34,48,57,58,60,61,1,1,-1,1,J,-1,-1,-J**2,1],[4,19,23,36,38,42,48,58,60,J,-J,J,-1,J**2,J,J,-1,J],[19,38,44,58,61,63,1,-J,J,J,J**2,J**2],[1,19,23,34,36,57,60,J,-J**2,-J,J,J,-J,J],[11,34,36,37,39,42,48,57,58,60,61,J,1,J**2,-J,-1,-J,GAPMul(-2,J)-J**2,J,-1,GAPMul(-2,J)-J**2,GAPMul(-2,J)-J**2],[9,13,19,23,34,36,39,42,48,58,60,61,1,1,-J,-1,J**2,J,1,-J**2,J-J**2,-J**2,J-J**2,J],[29,61,1,1],[36,48,58,60,-1,J,-1,J],[19,23,38,42,48,52,60,61,J,-J,J,-J,-J,1,-J,1],[19,34,36,38,42,53,58,60,61,62,J**2,1,-J,-1,1,-1,1,1,J,-J],[14,19,38,58,61,J,1,-J,J,J**2],[19,34,36,38,42,48,58,60,61,64,1,J,J,-J,J,J,J,GAPMul(2,J),-1,J],[20,30,36,42,48,58,60,-1,1,-1,J,J,-1,J],[19,25,32,36,38,48,58,60,61,1,-1,J**2,-1,J**2,J-J**2,-1,J-J**2,-J**2],[26,34,38,39,42,48,58,J,1,-1,J,J,-1,-1],[10,34,48,57,61,-J**2,-J,-J**2,J,-J**2],[1,6,19,23,38,42,48,58,60,61,J,-J,J,-J,-J**2,-J,GAPMul(-2,J)-J**2,GAPMul(-2,J)-J**2,-J,1],[19,34,39,58,60,61,63,J,-1,-J**2,-J,-1,-J**2,1],[19,23,33,38,42,48,52,58,60,61,J,-J,J,J,-J+J**2,GAPMul(-2,J),1,-J,-J+J**2,1],[36,42,43,48,60,61,1,-1,-1,J**2,J**2,J**2],[19,25,34,36,38,48,60,61,J,-J,-J,J**2,-J**2,-1,J**2,J**2],[24,34,42,48,58,60,J**2,J**2,J**2,-1,-J,J**2],[36,48,1,J],[19,23,28,38,39,42,48,57,60,61,1,-1,1,-J,J,-1,J,-1,-1,J],[48,55,61,1,-J,1],[27,36,J,1],[19,34,36,38,51,58,60,64,1,J,-J**2,-J,J,J,-J**2,J],[36,58,1,1],[19,34,36,48,58,60,61,J**2,J**2,1,-J**2,-J-GAPMul(2,J**2),-J,-1],[23,34,36,38,42,48,57,58,59,60,61,J**2,-J,J**2,J-J**2,J**2,GAPMul(2,J**2),1,-1,1,-J+J**2,GAPMul(-2,J)+J**2],[19,42,48,56,58,60,61,J**2,-J,1,J**2,1,-J,-J**2],[31,34,42,43,60,61,1,-1,J,-1,-1,-1],[18,19,22,38,58,61,-J,1,J,-J,J,J**2],[21,36,38,42,48,60,61,-J,1,1,-1,J**2,J**2,J**2],[13,19,34,38,39,48,57,58,60,61,1,-1,J**2,-J**2,1,J**2,1,1,J**2,J**2],[8,19,34,42,48,58,61,J,J,J,1,GAPMul(-2,J)-J**2,-J,-J**2],[48,J],[19,34,36,38,39,42,48,49,58,60,61,J,J**2,1,-J**2,1,-J,1,J,1,-J,1],[34,38,39,48,50,58,61,J,-J,J**2,-J,J,1,-1],[19,39,42,48,57,60,61,-J**2,-J**2,-J,2,J,1,2],[39,48,53,58,J,J,-J,J],[20,36,48,57,58,61,-J**2,1,J,J**2,1,J],[19,36,42,48,54,58,60,61,J**2,J,-J**2,-J**2,J,J-J**2,-J**2,-1],[19,39,48,58,60,61,-1,J,-J,1,J**2,J],[19,36,39,42,60,61,J**2,1,J**2,-1,-J,J**2],[19,23,34,38,42,58,60,61,-J**2,-J,1,J,-J,-1,1,GAPMul(-2,J)-J**2],[39,40,48,61,-1,1,-1,J],[19,23,34,38,41,42,48,57,59,60,61,1,J,J,-J+J**2,-1,J,GAPMul(2,J),J**2,-1,GAPMul(2,J),GAPMul(2,J)],[19,39,48,60,-J**2,-J**2,J**2,-1],[19,34,39,58,60,61,-J,1,J**2,J,1,J**2],[19,20,38,39,42,45,48,57,58,60,61,-J**2,J,1,-J,-1,J,-2,-J,-1,-1,GAPMul(2,J**2)],[18,1],[34,36,38,39,42,48,57,58,60,61,J,-1,-J,J**2,J,-1,-J,-1,GAPMul(2,J)+J**2,-2]],[[32,38,49,52,57,58,60,61,-1,-1,-J,1,J,-J,1,2],[20,25,32,43,44,45,49,58,60,61,J,J,-1,1,J**2,J,-J,GAPMul(-2,J),1,2],[23,25,32,38,57,J,-J,1,1,J],[20,25,32,38,52,57,58,61,J,J,-1,J,-1,-J,-J,1],[38,44,48,58,60,61,63,-1,1,-1,1,-1,J,J],[32,36,38,48,57,60,61,64,-1,J,J,1,J,1,2,J],[25,32,58,61,J,-1,J**2,1],[42,43,58,61,-1,-1,-1,J**2],[25,31,32,38,43,44,48,49,52,57,58,61,-J,J,1,J**2,1,-J,-1,-J,1,J,2,J],[16,25,32,34,38,43,44,48,52,57,58,60,61,64,1,J**2,1,1,1,1,J**2,-1,J**2,1,GAPMul(-2,J)-J**2,J**2,-2,1],[39,48,49,52,57,58,61,-J,1,J,-1,-J,J,-1],[25,32,38,40,48,49,52,57,58,61,J,-1,J,1,J,-1,J**2,1,J**2,1],[25,32,43,44,57,58,61,J,-1,-J,-1,-J,J**2,1],[44,J**2],[19,38,49,52,57,60,61,-J,J**2,-J,1,J,1,1],[16,32,38,43,44,48,49,58,60,61,64,J,-1,J,J,1,1,J,J-J**2,1,-J,J],[25,38,43,44,46,52,56,57,58,60,61,64,J,1,J**2,GAPMul(2,J)+J**2,J,J**2,1,1,J+GAPMul(2,J**2),-J,-J+J**2,1],[18,J**2],[25,32,44,55,58,60,61,J,-1,-1,J,J**2,1,1],[43,44,50,57,58,J,1,J,J,-J**2],[38,43,J,-1],[22,J**2],[26,38,43,44,52,58,60,61,J,J**2,-J,-1,1,J**2,1,1],[24,32,43,44,48,53,58,60,61,62,-1,-1,-J,-1,1,J**2,J**2,1,GAPMul(-2,J)-J**2,1],[25,32,44,48,58,60,61,J,-1,-1,1,J+GAPMul(2,J**2),1,2],[27,32,38,43,58,61,64,J,-1,J,-J,-J,1,J],[23,38,48,49,52,58,J,1,1,J,-1,-1],[25,32,43,44,52,57,58,61,-J,1,J,1,1,J,J-J**2,-1],[5,32,38,61,J,1,-J,J],[8,43,44,50,57,58,61,1,J-J**2,1,J,J,GAPMul(-2,J**2),J],[21,33,43,44,58,60,61,J**2,J,1,-J,1,-1,J],[38,44,48,58,60,-J**2,-J,J,-J,J],[9,25,38,43,44,52,57,58,61,64,J,J,1,-J**2,J**2,-1,-J,-J,J,-J],[10,16,25,34,52,57,58,60,61,64,-1,J**2,J,-1,J,J**2,J**2,-1,J,J**2],[35,43,44,49,58,61,64,J,1,J**2,-1,J**2,J,-1],[58,J],[48,52,1,-1],[38,J**2],[32,51,60,61,64,1,-J,-1,-1,-J],[12,25,32,38,40,52,57,58,60,61,64,-1,1,-J-GAPMul(2,J**2),1,-1,J,J**2,-1,-1,J+GAPMul(2,J**2),J**2],[25,32,38,43,44,48,49,52,54,57,58,59,61,64,J,-1,-J**2,-J**2,-J,J**2,1,J,1,1,2,-J,-J,-J**2],[20,30,43,58,61,1,-1,J,J,-1],[21,38,43,J**2,-J,-J],[14,44,-1,-J],[25,32,43,44,47,58,60,61,-J,1,1,-J,-J,1,-1,-1],[32,38,46,48,49,58,60,61,64,1,1,J,-1,1,1,-1,-1,1],[2,4,25,32,38,43,44,52,57,58,61,64,-J,J,-J,1,J**2,-1,-J**2,1,J,J-J**2,-1,J],[1,52,57,58,64,-J**2,J,J**2,J**2,J**2],[1,6,32,38,43,44,52,60,61,64,J,-J,1,1,J,1,-1,-1,-1,-J],[4,25,32,38,52,58,61,J,-J,1,J**2,1,-J**2,-1],[11,37,43,44,48,49,57,58,64,J,-J,J,1,1,J,J,GAPMul(2,J),J],[13,25,32,52,57,58,J**2,-J**2,J,J,J**2,J**2],[32,48,49,53,58,60,61,64,1,-1,J**2,J,J**2,-1,-1,J**2],[25,32,41,43,44,52,54,57,58,59,60,61,64,1,J-J**2,-1,J**2,J,1,-1,J**2,-1,-1,-J,-J+J**2,1],[15,25,32,52,57,58,61,64,-J,-J,1,1,J,-J**2,-1,J],[17,25,43,46,52,56,57,60,64,-1,1,1,1,J,-1,J**2,-1,J**2],[25,28,32,38,43,44,52,61,J,J,-1,J,J,1,-1,1],[36,58,-J,-J],[38,43,44,49,58,59,61,64,J**2,-J,-1,J**2,GAPMul(2,J**2),J,-J**2,J**2],[3,25,27,44,52,57,58,64,J**2,J**2,-J**2,-J,-J,-J**2,1,-J**2],[7,25,32,38,61,J**2,-J**2,J,J,-J],[24,43,44,49,53,58,61,64,-1,1,J**2,-J,-1,GAPMul(-2,J),1,-J],[29,61,J,J],[32,37,38,43,44,49,52,58,60,61,-1,J,J**2,-J,-1,-J,1,-J,1,1]]])
                                                        else:
                                                            if i==93 :
                                                                r=GAPMul(J**2,f(91))
                                                            else:
                                                                if i==94 :
                                                                    r=GAPMul(J,f(91))
                                                                else:
                                                                    if i==95 :
                                                                        r=GAPMul(J,f(92))
                                                                    else:
                                                                        if i==96 :
                                                                            r=GAPMul(J**2,f(92))
                                                                        else:
                                                                            if i==97 :
                                                                                r=map(lambda x: map(lambda y: expand(y,80),x),[[[29,J],[1,-J],[3,J],[32,-J],[19,-J],[3,6,7,8,12,16,19,29,30,31,33,34,35,36,38,39,42,43,50,71,J**2,-J,J,1,J,-J,-1,J,J**2,J,J,J,J,-J**2,J,-J,-J,J,-J,J],[49,J],[35,J**2],[9,J],[10,J],[11,J],[3,6,8,19,34,36,39,40,42,43,71,J**2,-J,1,-1,J,-J**2,-J,J**2,-J,J,J],[3,4,7,9,10,13,15,18,21,25,27,30,32,34,37,40,42,43,46,50,51,53,59,61,63,64,66,75,78,-J,-1,-1,-1,1,1,-J**2,1,J,J,-J**2,-J,-J,J**2,1,1,1,J**2,1,1,-J,J**2,1,1,-J,-1,J,1,-J],[14,J],[15,J],[2,19,37,38,47,52,1,J,J,-J,J,1],[17,J],[14,18,36,46,61,75,-J**2,-J,J**2,J**2,J**2,J**2],[31,-J**2],[33,J],[21,J],[3,6,7,8,12,16,18,19,22,29,30,31,33,34,35,38,39,42,43,46,50,61,71,75,J,J,1,J**2,1,-1,-1,-J**2,1,1,J,1,1,1,1,1,-1,-1,1,J,-1,-1,1,-1],[8,15,23,25,27,35,37,64,J,-1,1,1,J**2,-1,-1,1],[3,5,19,24,25,31,36,39,46,69,74,78,1,1,-1,-J,J,J,J,J**2,-1,J**2,-J**2,1],[25,J],[27,1],[37,64,J,-J],[1,2,3,10,15,16,19,20,28,37,38,41,44,47,63,71,78,1,J**2,-1,-1,1,1,1,1,-J,1,-1,-J**2,J**2,1,-J**2,-1,J**2],[2,-J],[1,2,3,11,15,25,26,27,29,30,34,37,64,75,-1,1,-J,J**2,-J**2,-1,-1,-J**2,-1,-J,-1,-J**2,J**2,1],[5,1],[1,2,3,4,9,15,25,26,27,29,32,37,64,78,1,-1,-1,J,J,-J,-J**2,-J**2,-J,1,-J,-J,J,J**2],[37,-J**2],[30,J**2],[8,15,20,21,25,26,27,33,35,37,39,64,75,-1,-J,J**2,-J**2,-J**2,-J**2,-J,J**2,-J,J**2,J,J,J**2],[36,J],[20,-1],[38,52,-J,1],[39,J],[42,-1],[28,1],[3,36,39,40,42,J**2,-J**2,-J,J**2,-J],[50,-J],[51,-1],[1,5,9,10,11,16,20,29,31,33,36,38,44,45,46,47,48,59,63,71,-J,1,J,J,J**2,1,-J,J**2,J,J**2,J,-1,J**2,-J,-1,1,-J**2,J,-J**2,-1],[46,J],[1,20,31,44,63,71,-J**2,-J**2,J**2,1,-1,-J],[45,1],[44,63,1,-1],[11,17,21,43,50,1,-J,-J**2,J,-J],[7,10,14,17,25,39,49,51,59,63,-1,-J,-J,-1,-J**2,-1,-1,-J,-J,J**2],[38,-J**2],[66,-J**2],[7,10,14,39,44,49,51,54,57,62,-J**2,J**2,J**2,J,J**2,1,J**2,1,-1,-J],[9,46,53,55,66,J,J**2,J,1,1],[11,21,43,50,56,1,J,-1,-J,1],[7,14,25,39,44,49,57,59,62,63,J,1,1,-1,1,J,-J,-1,1,-1],[65,68,-J,-J**2],[59,J],[1,2,4,9,11,15,25,26,27,30,32,34,37,60,64,75,J,1,J,-J**2,-1,1,J,J,1,J**2,J**2,-1,1,1,-1,1],[18,-1],[57,-J**2],[7,51,-J**2,-1],[20,26,-1,-J**2],[3,4,6,8,12,19,22,23,34,36,39,40,42,71,76,80,-1,-J**2,-J,1,-1,-1,J**2,J**2,J,1,J**2,-1,J**2,1,J**2,-1],[9,10,46,53,66,1,-1,-1,1,-J],[68,J**2],[3,8,19,34,36,39,40,42,43,71,72,-1,-J,J,1,1,J**2,-1,J**2,1,1,1],[36,39,40,42,69,-1,1,1,1,1],[1,2,3,4,6,7,8,9,10,11,12,14,17,19,20,22,23,25,27,30,32,33,34,35,39,43,49,50,51,56,59,60,63,65,66,68,73,77,78,79,-1,-J**2,J**2,J,-J,1,-J**2,J,J,-1,-1,J,2,J**2,-1,-1,-1,J**2,1,-ER(-3),J**2,J**2,-2,J**2,GAPDiv(3+ER(-3),2),GAPDiv(-3-ER(-3),2),1,1,J,J,J,-J**2,-J**2,J,J**2,-J,J,-J,-1,-1],[7,16,29,33,38,J,-J,J,J,J],[7,16,29,30,31,33,35,38,40,50,67,-J,J,-J,-J**2,1,-J,1,-J,-J,J,J],[2,7,9,11,14,15,16,17,19,21,29,33,37,38,43,47,49,50,56,71,73,77,-J,-1,1,J**2,1,1,1,-1,1,1,-1,-1,-J**2,-1,-J**2,1,-1,-1,-J,-1,-J,J],[24,36,39,40,42,69,1,-1,1,1,1,1],[75,J],[3,4,9,18,20,27,31,33,35,40,42,51,53,60,61,67,70,71,73,75,1,1,1,-J**2,1,-1,-1,-J**2,J,-J**2,-J**2,1,1,J**2,-J**2,J**2,1,J**2,1,1],[56,73,1,-J],[78,J],[80,-J],[4,7,9,15,16,18,19,20,22,23,25,27,29,30,32,34,35,36,37,38,39,40,43,46,51,53,58,60,61,64,67,70,73,J**2,J,J**2,-J**2,-J,1,1,J**2,J**2,J**2,J**2,ER(-3),J,1,1,-J,1,-J,-J**2,J,J,-J**2,-J,1,J**2,J**2,J**2,J,1,J**2,-1,J**2,J**2]],[[30,J**2],[11,1],[1,1],[4,J],[38,1],[6,J],[5,16,29,33,38,1,1,J**2,J**2,-1],[8,J],[1,2,4,9,11,29,30,32,34,75,78,-1,1,1,1,-1,-1,J**2,-1,J,-J,J],[70,J],[1,2,3,11,15,25,26,27,29,30,34,37,64,75,J**2,-J**2,1,-J,J,J**2,J**2,J,J**2,1,J**2,J,-J,-J**2],[19,-1],[13,28,-J,J],[6,14,18,22,36,46,61,-1,1,J**2,J,J**2,J**2,J**2],[8,15,23,25,26,27,J**2,1,J,-1,-1,1],[7,1],[1,2,3,5,8,12,15,17,19,20,25,26,27,29,30,33,34,35,37,39,42,43,47,49,50,64,75,J,1,J**2,-1,1,J,-J**2,-J,J,-J**2,-1,-1,-J**2,J,J**2,-J**2,J,J,-J**2,-J,-J,J,J,-J,-J,J**2,1],[18,J],[43,-J**2],[35,-1],[8,15,20,21,25,26,27,33,35,37,39,64,75,-J**2,-1,J,-J,-J,-J,-1,J,-1,J,1,1,J],[22,J],[23,J],[44,1],[26,-1],[8,15,23,25,27,37,64,-J,1,-1,-1,-J**2,1,-1],[27,J],[13,-J],[29,J],[3,J],[31,40,-J,J**2],[78,J],[33,J],[34,J],[39,-J],[1,20,31,52,71,1,-J,-1,1,-1],[21,1],[7,16,29,33,38,1,-1,1,1,1],[20,J**2],[31,-1],[1,3,9,10,18,35,40,41,42,44,46,51,53,60,61,63,66,67,70,73,75,J**2,-J**2,1,J,J,-1,J,1,J,-1,J,-J**2,1,-J,J,1,J**2,-J,-J**2,-J**2,-J**2],[52,-J],[12,J],[4,7,9,15,16,18,19,20,22,23,25,27,29,30,32,34,35,36,37,38,39,40,43,46,51,53,58,60,61,64,67,70,73,1,J**2,1,-1,-J**2,J,J,1,1,1,1,GAPDiv(-3-ER(-3),2),J**2,J,J,-J**2,J,-J**2,-1,J**2,J**2,-1,-J**2,J,1,1,1,J**2,J,1,-J,1,1],[55,1],[1,20,31,52,61,71,-1,J,1,-1,-1,1],[56,J**2],[2,3,4,7,9,11,15,16,18,19,20,23,25,27,29,30,32,34,35,36,37,38,39,40,43,44,46,48,51,53,58,60,61,64,67,70,73,78,J**2,1,GAPDiv(3-ER(-3),2),J**2,GAPDiv(3-ER(-3),2),-J**2,-1,-J**2,J,J,1,1,1,GAPDiv(-3-ER(-3),2),-1,ER(-3),ER(-3),GAPDiv(3+ER(-3),2),J,-J**2,-1,J**2,J**2,-1,-J**2,-1,J,1,1,1,1,GAPMul(2,J**2),J,1,-J,1,1,1],[11,17,43,50,56,J**2,J,1,J,J**2],[5,42,1,J],[53,J],[7,16,29,33,38,50,J,-J,J,J,J,-J],[2,3,4,7,9,11,16,18,27,30,32,34,38,42,50,51,52,53,60,78,-1,-J,J**2,-1,J**2,1,1,1,J,1,1,-J,-1,1,1,-J,-1,-J,-1,-J],[6,22,27,33,47,54,56,66,73,J**2,J,J**2,-1,1,1,-J**2,-1,1],[45,55,-J**2,-J],[1,3,8,11,12,17,19,20,29,30,33,34,35,39,43,47,49,50,68,J,J**2,-J**2,J,J,1,-1,J,J,J**2,J,J,-1,1,-1,-1,1,1,-J],[7,10,14,17,25,39,44,49,51,54,57,62,63,ER(-3),-J,-ER(-3),J,-J,J,-J,-J**2,J**2,-J**2,J**2,-J,-1],[74,-J],[1,2,4,7,9,14,16,17,19,20,23,25,26,27,29,30,32,33,34,35,38,39,43,47,49,50,51,58,60,71,73,75,77,-1,-J**2,J,GAPDiv(3+ER(-3),2),J,-1,-1,1,-1,J,J,-1,-1,1,1,J**2,J**2,-J**2,-1,-1,1,1,-1,-1,1,-J,J,J,1,1,J,-J**2,-J],[9,J**2],[6,18,22,36,46,61,75,-1,-J,J,J**2,J**2,-J,-J],[1,2,4,5,7,9,10,11,15,16,18,20,23,25,27,30,32,33,34,37,38,40,43,44,46,53,58,60,61,62,63,64,66,67,71,75,J,1,J,-J,-J**2,J,1,-1,1,J**2,1,J,J,J,1,J**2,J**2,J,-1,1,-J**2,1,J**2,1,1,-1,J,1,1,1,J**2,-1,J,J,-J,1],[3,4,6,7,8,9,12,15,16,18,20,22,23,25,27,29,30,32,33,36,37,38,42,46,50,51,53,58,60,61,64,70,71,73,1,1,-J**2,-ER(-3),J,1,J**2,-1,ER(-3),J,1,1,1,1,GAPDiv(-3-ER(-3),2),-ER(-3),-J**2,J,-J,J,-1,-ER(-3),-J**2,J,J,1,1,1,J**2,J,1,1,J**2,1],[15,21,1,1],[7,10,14,17,25,39,51,59,63,1,J,J,1,J**2,1,J,J,-J**2],[73,1],[69,-1],[49,-1],[1,20,44,52,63,71,1,1,J**2,-J**2,-J**2,-1],[3,5,6,7,8,12,16,18,22,24,25,29,30,33,34,35,36,38,39,42,43,46,50,51,60,61,69,71,74,75,78,79,ER(-3),-J**2,J,1,J**2,1,-1,-1,1,1,-1,1,J,1,1,1,-1,1,J**2,-1,1,-1,-1,J,1,-1,-J,1,J,-1,-J**2,1],[3,6,8,12,19,34,36,39,40,42,43,71,-J**2,J,-1,-J,1,-J,J**2,J,-J**2,J,-J,-J],[3,8,19,34,36,39,40,42,43,71,72,-1,-J,J,1,1,J**2,-1,J**2,1,1,1],[79,-1],[2,4,9,10,11,15,25,27,30,32,34,37,38,40,43,46,52,53,60,61,63,64,66,75,J,J**2,J**2,J,-J,J,J**2,J,1,1,-J,J,J,J,1,J,J,-J,J,J,-J**2,-J,J**2,J],[75,J],[3,4,6,8,12,19,22,23,34,36,39,40,42,43,71,72,76,80,-J,J,1,ER(-3),J**2,-ER(-3),-J,-J,-2,J,1,-J,1,-1,J,-1,-J,J**2],[65,-J],[1,2,4,9,11,15,25,26,27,30,32,34,37,60,64,75,-1,1,J,-J**2,-1,1,J,J,1,J**2,J**2,-1,1,1,-1,1],[66,-1],[72,76,J,-1]],[[1,J],[2,J],[9,J],[1,2,4,9,11,29,30,32,34,75,78,-1,1,1,1,-1,-1,J**2,-1,J,-J,J],[5,16,29,33,38,1,1,J**2,J**2,-1],[24,36,39,40,42,69,1,-1,1,1,1,1],[7,J],[1,2,3,10,15,16,19,20,28,37,38,41,44,47,63,71,78,-1,-J**2,1,1,-1,-1,-1,-1,J,-1,1,J**2,-J**2,-1,J**2,1,-J**2],[75,J],[14,J],[15,25,26,27,37,64,1,J,J,1,1,-1],[5,16,28,29,32,33,38,53,64,74,J**2,J**2,-1,J,-J**2,J,-J**2,-J**2,J**2,-J],[11,21,43,50,56,J,J**2,-J,-J**2,J],[39,1],[15,21,-J,-J],[7,16,29,33,38,J,-J,J,J,J],[25,1],[42,J],[47,-1],[1,20,44,52,63,71,-J,-J,-1,1,1,J],[15,J],[24,J**2],[1,2,3,4,7,9,10,13,16,18,19,20,21,25,27,28,30,32,34,37,38,40,41,42,43,44,46,47,50,51,53,59,61,63,64,66,71,75,J,1,J**2,-J**2,-J**2,-J**2,-ER(-3),J**2,J,J**2,J,J,1,1,-J,-J**2,-1,-1,J,-1,-J,J**2,-1,J**2,J,1,J**2,J,J**2,-1,J,J**2,J**2,-2,-J**2,1,-J,J**2],[48,J],[59,1],[2,4,9,10,11,15,25,27,30,32,34,37,38,40,43,46,52,53,60,61,63,64,66,75,1,J,J,1,-1,1,J,1,J**2,J**2,-1,1,1,1,J**2,1,1,-1,1,1,-J,-1,J,1],[2,3,4,7,9,11,18,27,30,32,34,38,42,50,51,52,53,60,78,1,J,-J**2,1,-J**2,-1,-1,-J,-1,-1,J,1,-1,-1,J,1,J,1,J],[2,7,9,11,14,15,16,17,19,21,29,33,37,38,43,47,49,50,56,71,73,77,J,1,-1,-J**2,-1,-1,-1,1,-1,-1,1,1,J**2,1,J**2,-1,1,1,J,1,J,-J],[29,J],[4,J],[1,20,31,44,63,71,-1,-1,1,J,-J,-J**2],[4,34,1,J],[16,-J],[1,2,3,4,9,15,25,26,27,29,32,37,64,78,-J,J,J,-J**2,-J**2,J**2,1,1,J**2,-J,J**2,J**2,-J**2,-1],[41,-J],[46,J],[2,19,37,38,47,52,J**2,1,1,-1,1,J**2],[38,J],[10,J**2],[9,10,46,53,66,-J,J,J,-J,J**2],[73,-1],[53,-J**2],[26,-1],[44,J],[3,6,7,8,12,16,18,19,22,29,30,31,33,34,35,38,39,42,43,46,50,61,71,75,J,J,1,J**2,1,-1,-1,-J**2,1,1,J,1,1,1,1,1,-1,-1,1,J,-1,-1,1,-1],[36,46,-J,-J],[2,19,38,47,49,52,-1,J**2,-J**2,-J,J,J],[22,1],[49,J],[27,J**2],[51,J],[52,J],[18,-1],[57,-J],[6,18,22,36,46,61,75,1,J,-J,-J**2,-J**2,J,J],[8,15,23,25,27,37,64,J,-1,1,1,J**2,-1,1],[7,10,14,39,44,49,51,54,57,-1,1,1,J**2,1,J,1,J,-J],[1,2,4,7,9,11,13,15,20,21,23,27,28,30,32,33,34,35,39,51,58,60,64,1,-1,-J,J**2,J**2,1,-J**2,-1,1,-1,1,-1,J**2,-J**2,-J**2,1,1,-J**2,J**2,-J,1,-1,-J],[17,1],[60,J],[40,J],[7,14,25,39,44,49,54,57,59,62,63,J,1,1,-1,1,J,-1,-J,-1,1,-1],[63,J],[3,7,10,11,18,19,21,25,37,38,40,42,43,46,47,50,51,59,60,61,63,64,66,75,J,1,J,J**2,-1,1,-J,J**2,-J**2,J,J,-1,1,J,1,-1,J,J,-J**2,J,-J**2,-J,J**2,J],[1,2,3,4,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,27,30,32,33,34,37,39,40,41,42,43,44,46,50,51,53,60,61,63,64,65,66,68,75,78,79,-J,-1,2+ER(-3),-ER(-3),-J**2,J**2,-1,-ER(-3),J,1,-J,J,J**2,-1,-1,ER(-3),1,-J,J**2,-J,1,GAPDiv(-3+ER(-3),2),2+ER(-3),GAPDiv(3+ER(-3),2),1,2-ER(-3),J,GAPDiv(-3+ER(-3),2),ER(-3),1,ER(-3),GAPDiv(3-ER(-3),2),-1,ER(-3),J,1,GAPDiv(3-ER(-3),2),J**2,ER(-3),1,-J,-J,J**2,J,ER(-3),1,-J],[14,18,36,46,61,75,-1,-J**2,1,1,1,1],[1,3,9,10,18,35,40,41,42,44,46,51,53,60,61,63,66,67,70,73,75,J**2,-J**2,1,J,J,-1,J,1,J,-1,J,-J**2,1,-J,J,1,J**2,-J,-J**2,-J**2,-J**2],[2,3,4,6,8,9,11,12,14,15,16,18,19,22,23,27,28,29,30,32,33,34,37,38,39,40,42,43,46,47,49,53,61,65,71,75,78,79,J,-J**2,J**2,J,-1,J**2,1,1,J**2,-1,-1,J,J,1,1,-1,J,-J**2,-J**2,1,-J**2,GAPDiv(3-ER(-3),2),-1,1,-1,J,J,1,J,-1,1,1,J,-J,1,J,1,1],[9,46,53,55,66,J,J**2,J,1,1],[67,1],[20,-J],[76,-1],[35,J**2],[1,5,9,10,11,16,20,29,31,33,36,38,44,45,46,47,48,53,55,59,63,66,71,-J**2,J,-1,J**2,1,J,-J**2,1,J**2,1,J**2,-J,1,-J**2,-ER(-3),J,-1,J,1,J**2,-1,1,-J],[3,J],[72,76,J**2,-J],[23,1],[11,J**2],[3,5,6,7,8,12,16,18,22,24,25,29,30,33,34,35,36,38,39,42,43,46,50,51,60,61,69,71,74,75,78,79,ER(-3),-J**2,J,1,J**2,1,-1,-1,1,1,-1,1,J,1,1,1,-1,1,J**2,-1,1,-1,-1,J,1,-1,-J,1,J,-1,-J**2,1],[3,4,5,6,7,8,9,10,11,12,15,18,19,20,22,25,26,27,29,32,33,34,35,36,37,42,43,46,47,50,51,59,60,61,63,64,69,74,80,J,-1,-J**2,J,1,J**2,J,J,J**2,1,1,-1,1,-J,-J**2,-1,J,1,1,-J,-J,-J,1,-1,1,-1,1,-1,1,-1,J,J,-J**2,-1,-J**2,-1,-J,J,1]],[[1,20,31,52,71,-J,J**2,J,-J,J],[2,19,38,47,49,52,1,-J**2,J**2,J,-J,-J],[36,-J],[22,-J],[5,J],[8,-1],[16,1],[34,J**2],[14,17,J,1],[10,59,-J,-J],[17,-J**2],[12,J],[55,-J**2],[15,J],[9,11,J,J**2],[5,16,29,33,38,1,1,J**2,J**2,-1],[21,J**2],[27,J**2],[19,J],[1,-1],[11,-J**2],[23,J],[4,-J],[69,74,J,J**2],[3,78,1,1],[2,4,9,11,15,25,26,27,30,32,34,37,60,64,75,-1,-J,J**2,1,-1,-J,-J,-1,-J**2,-J**2,1,-1,-1,1,-1],[2,3,4,9,11,30,32,34,60,78,-1,-J,J**2,J**2,1,1,1,-J,-1,-J],[45,1],[5,7,16,33,38,1,J,-J,-1,-1],[3,6,7,8,12,16,19,29,30,31,33,34,35,36,38,39,42,43,50,71,-J,1,-1,-J**2,-1,1,J**2,-1,-J,-1,-1,-1,-1,J,-1,1,1,-1,1,-1],[31,J],[3,6,7,8,12,16,18,19,22,29,30,31,33,34,35,38,39,42,43,46,50,61,71,75,J,J,1,J**2,1,-1,-1,-J**2,1,1,J,1,1,1,1,1,-1,-1,1,J,-1,-1,1,-1],[29,-1],[6,-J],[30,J**2],[39,1],[2,-J**2],[38,J],[3,-J**2],[40,J],[48,1],[42,J],[43,J],[1,2,4,9,10,11,15,20,25,27,30,32,34,37,38,40,43,44,46,53,60,61,63,64,66,71,75,J,1,J,J,1,-1,1,J,J,1,J**2,J**2,-1,1,1,1,J**2,1,1,-1,1,1,J**2,-1,J,-J,1],[57,J**2],[25,39,-J**2,-1],[49,1],[62,-1],[2,19,37,38,47,52,J**2,1,1,-1,1,J**2],[50,J],[2,3,4,7,9,11,16,18,27,30,32,34,38,42,50,51,52,53,60,78,-1,-J,J**2,-1,J**2,1,-J**2,1,J,1,1,-J,-1,1,1,-J,-1,-J,-1,-J],[52,J],[7,51,1,J],[1,2,3,4,7,9,10,13,15,16,18,19,20,21,25,27,28,30,32,34,38,40,41,42,43,44,46,47,50,51,53,59,61,63,64,66,71,75,78,-1,-J**2,GAPDiv(3-ER(-3),2),-1,-1,-1,2,1,J,-1,1,-1,-1,J,J,-J**2,J,-J,-J,J**2,1,1,J**2,1,J**2,-J**2,1,-1,1,-J,J**2,1,1,-ER(-3),-1,J,1,1,1],[7,10,14,17,25,39,44,49,51,54,57,62,63,GAPDiv(3-ER(-3),2),-1,GAPDiv(-3+ER(-3),2),1,-1,1,-1,-J,J,-J,J,-1,-J**2],[11,17,43,50,56,1,J**2,J,J**2,1],[28,J],[3,4,7,9,16,18,20,27,29,30,31,38,42,50,51,53,60,61,70,71,73,75,J,J,1,J,-1,-1,J,-J,1,J,1,1,-1,-1,J,J,1,-1,J,1,J,J],[10,J],[2,14,18,19,36,38,46,47,49,52,61,75,-1,1,J**2,J**2,-1,-J**2,-1,-J,J,J,-1,-1],[26,-J**2],[41,-1],[2,4,9,10,11,15,25,27,30,32,34,37,38,40,43,46,52,53,60,61,63,64,66,75,1,J,J,1,-1,1,J,1,J**2,J**2,-1,1,1,1,J**2,1,1,-1,1,1,-J,-1,J,1],[60,J**2],[2,3,4,5,6,8,9,11,12,14,15,18,19,22,23,27,30,32,34,37,39,40,42,43,46,47,49,61,64,65,71,75,78,79,J,-J**2,J**2,1,J,-1,J**2,1,1,J**2,-1,J,J,1,1,-1,-J**2,-J**2,GAPDiv(3-ER(-3),2),-1,-1,J,J,1,J,-1,1,J,-J,-J,1,J,1,1],[7,10,14,17,25,39,51,59,63,J**2,1,1,J**2,J,J**2,1,1,-J],[7,16,29,30,31,33,35,38,40,50,67,-1,1,-1,-J,J**2,-1,J**2,-1,-1,1,1],[1,2,3,5,8,17,19,20,21,29,30,33,34,35,37,39,42,43,47,49,50,68,J**2,J,1,1,-1,-J**2,J**2,J**2,J,J**2,1,J**2,J**2,-J,J**2,J,J,J**2,J**2,-J**2,-J**2,1],[3,39,40,42,69,J**2,1,-J,-J,1],[1,2,4,7,9,14,16,17,19,20,23,25,26,27,29,30,32,33,34,35,38,39,43,47,49,50,51,58,60,70,71,73,75,77,1,J**2,-J,GAPDiv(-3-ER(-3),2),-J,1,1,-1,1,-J,-J,1,1,-1,-1,-J**2,-J**2,J**2,1,1,-1,-1,1,1,-1,J,-J,-J,-1,-J,-1,-J,J**2,J],[71,J],[3,6,19,34,36,39,40,42,43,71,72,J,J,-J**2,1,-J,-1,J,-1,-J,-J,1],[77,-J],[3,5,19,24,25,31,36,39,46,69,74,78,J**2,J**2,-J**2,-1,1,1,1,J,-J**2,J,-J,J**2],[15,25,26,27,37,64,J,J**2,J**2,J,J,-J],[80,-J**2],[2,7,9,11,14,15,16,17,19,21,29,33,37,38,43,47,49,50,71,73,77,J,1,-1,1,-1,-1,-1,1,-1,J,1,1,J**2,1,-1,-1,1,-J,1,J,-J],[46,-J],[65,-J**2],[3,4,6,8,12,19,22,23,34,36,39,40,42,71,76,80,-J,-1,-J**2,J,-J,-J,1,1,J**2,J,1,-J,1,J,1,-J]]])
                                                                            else:
                                                                                if i==98 :
                                                                                    r=GAPMul(J,f(97))
                                                                                else:
                                                                                    if i==99 :
                                                                                        r=GAPMul(J**2,f(97))
                                                                                    else:
                                                                                        if i==100 :
                                                                                            r=map(lambda x: map(lambda y: expand(y,81),x),[[[2,1],[1,2,13,18,24,28,34,36,51,53,64,65,76,-1,-1,1,1,1,1,1,1,1,1,1,1,-1],[6,1],[7,1],[8,1],[14,1],[4,7,9,42,43,45,50,59,60,62,63,69,70,72,74,78,80,-1,-1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1],[5,8,25,35,41,44,52,58,61,68,71,73,75,-1,-1,1,1,-1,1,1,1,1,1,1,1,1],[15,1],[16,1],[17,1],[30,35,77,-1,-1,1],[18,1],[3,1],[26,1],[27,1],[46,72,81,-1,-1,1],[28,1],[29,1],[30,1],[31,1],[32,1],[33,1],[34,1],[35,1],[9,1],[10,1],[13,1],[46,1],[47,1],[48,1],[49,1],[50,1],[51,1],[52,1],[53,1],[54,1],[55,-1],[56,1],[57,1],[58,-1],[59,1],[60,-1],[61,1],[62,1],[19,1],[20,1],[21,1],[22,1],[23,1],[24,1],[25,1],[76,-1],[10,16,19,27,29,37,46,54,73,-1,-1,-1,-1,-1,-1,-1,-1,1],[38,55,64,1,-1,-1],[66,1],[67,1],[68,1],[69,1],[70,1],[71,1],[72,1],[15,23,78,-1,-1,1],[64,1],[65,1],[39,1],[40,1],[41,-1],[42,1],[43,-1],[44,1],[45,1],[73,1],[74,1],[75,1],[36,-1],[79,1],[80,1],[12,20,25,1,1,1],[9,50,63,1,1,1],[11,19,45,1,1,1]],[[3,1],[9,1],[10,1],[11,1],[12,1],[15,1],[19,1],[20,1],[21,1],[1,1],[22,1],[23,1],[76,-1],[38,-1],[6,15,18,-1,-1,-1],[26,1],[29,1],[18,1],[39,1],[40,1],[2,1],[4,1],[5,1],[24,1],[41,-1],[55,1],[48,1],[64,1],[17,29,62,-1,-1,-1],[77,-1],[14,26,28,-1,-1,-1],[46,1],[47,1],[65,1],[35,1],[28,1],[39,48,57,-1,-1,-1],[16,31,36,1,1,1],[7,1],[8,1],[25,35,41,44,52,58,61,68,71,73,75,1,1,-1,1,1,1,1,1,1,1,1],[42,1],[9,42,43,45,50,59,60,62,63,69,70,72,74,78,80,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1],[44,1],[43,-1],[80,-1],[10,19,27,29,37,54,73,1,1,1,1,1,1,-1],[27,48,53,-1,-1,-1],[66,1],[67,1],[34,1],[73,1],[53,1],[1,17,29,33,57,58,62,-1,1,1,1,1,1,1],[16,1],[81,-1],[79,-1],[52,1],[74,1],[72,1],[75,1],[62,1],[21,56,67,-1,-1,-1],[36,1],[51,1],[49,66,70,-1,-1,-1],[50,67,68,-1,-1,-1],[68,1],[59,1],[70,1],[61,1],[9,50,63,78,80,1,1,1,1,1],[58,1],[69,1],[71,1],[13,18,24,28,34,36,51,53,64,65,76,1,1,1,1,1,1,1,1,1,1,-1],[30,35,77,1,1,-1],[32,56,60,1,1,1],[19,27,37,1,1,1],[32,-1],[9,50,63,1,1,1]],[[4,1],[7,1],[13,1],[1,4,5,6,15,16,17,18,20,29,31,32,33,34,36,37,38,49,55,56,57,58,59,60,61,62,63,64,77,-1,-1,-1,1,1,1,1,1,-1,1,1,1,1,1,1,1,-1,-1,1,1,1,1,1,1,1,1,1,1,1],[5,1],[18,1],[2,7,8,14,15,22,23,26,27,28,30,38,48,49,50,51,53,54,66,67,68,69,70,71,78,79,81,-1,-1,-1,1,-1,-1,-1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[8,1],[3,1],[10,16,19,27,29,37,46,54,73,-1,-1,-1,-1,-1,-1,-1,-1,1],[76,-1],[24,1],[9,1],[28,1],[6,1],[37,1],[36,1],[15,1],[10,1],[42,1],[32,47,55,-1,-1,-1],[43,-1],[12,1],[23,1],[44,1],[14,1],[54,1],[26,1],[16,1],[59,1],[20,38,49,55,64,-1,-1,-1,1,1],[60,1],[30,35,77,-1,-1,1],[33,1],[61,1],[63,1],[29,1],[43,59,72,-1,1,1],[22,1],[20,1],[25,-1],[40,1],[39,-1],[41,-1],[21,1],[27,1],[69,1],[22,30,38,-1,-1,1],[70,1],[47,52,79,-1,-1,1],[50,1],[71,1],[15,23,78,-1,-1,1],[46,1],[45,60,69,-1,-1,-1],[32,1],[30,1],[35,1],[57,1],[56,1],[58,1],[31,1],[17,1],[42,43,45,59,60,62,69,70,72,1,-1,1,1,1,1,1,1,1],[74,1],[49,1],[47,1],[52,1],[67,1],[66,1],[68,1],[48,1],[73,1],[65,74,75,-1,-1,-1],[75,1],[26,33,80,1,1,-1],[34,59,61,1,1,1],[6,12,46,72,81,1,1,-1,-1,1],[51,69,71,1,1,1],[11,14,30,35,77,1,1,-1,-1,1],[27,48,53,1,1,1]],[[5,1],[8,1],[12,1],[1,1],[4,1],[30,35,77,-1,-1,1],[2,1],[7,1],[20,1],[23,1],[3,1],[11,1],[25,1],[47,52,79,-1,-1,1],[30,1],[33,1],[6,1],[35,1],[9,1],[19,1],[40,1],[10,1],[22,1],[44,1],[45,1],[47,1],[50,1],[52,1],[15,1],[29,1],[57,1],[16,1],[32,1],[61,1],[62,1],[58,1],[63,1],[10,29,54,1,1,1],[21,1],[39,1],[43,1],[24,1],[76,1],[42,1],[13,1],[26,1],[46,1],[67,1],[27,1],[49,1],[71,1],[72,1],[68,1],[15,23,78,-1,-1,1],[10,19,27,29,37,54,73,1,1,1,1,1,1,-1],[31,1],[56,1],[60,1],[34,1],[36,1],[59,1],[18,1],[20,38,49,55,64,-1,-1,-1,1,1],[73,1],[75,1],[48,1],[66,1],[70,1],[51,1],[53,1],[69,1],[28,1],[9,50,63,78,80,1,1,1,1,1],[65,1],[74,1],[41,1],[17,29,62,1,1,1],[38,1],[81,1],[55,-1],[14,26,28,1,1,1]]])
                                                                                        else:
                                                                                            if i==101 :
                                                                                                r=GAPMul(J**2,f(100))
                                                                                            else:
                                                                                                if i==102 :
                                                                                                    r=GAPMul(J,f(100))
    cached[i-1]=r
    return r

ChevieData["G32"]["Representation"]=lxg327

def lxg328(a,b,c,d):
    GAPMul(return220,a**3)-GAPMul(220,a**3)-GAPMul(220,a**3)-GAPMul(220,b**3)+GAPMul(220,a**3)-GAPMul(220,a**3)+GAPMul(220,a**3)-GAPMul(220,b**3)+GAPMul(220,a**6)-GAPMul(220,a**6)+GAPMul(220,b**6)

def lxg329(a,b,c,d):
    return GAPMul(-170,a**3)+GAPMul(170,a**3)-GAPMul(1870,a**3)+GAPMul(1870,a**3)-GAPMul(1870,a**3)+GAPMul(1870,b**3)-GAPMul(1870,a**3)+GAPMul(1870,a**3)-GAPMul(170,a**3)+GAPMul(170,a**3)-GAPMul(170,a**3)+GAPMul(170,b**3)-GAPMul(1870,a**6)-GAPMul(1870,a**6)+GAPMul(1870,a**6)-GAPMul(1870,b**6)-GAPMul(7854,a**6)-GAPMul(7854,a**6)-GAPMul(7854,a**6)-GAPMul(7854,b**6)-GAPMul(1870,a**6)-GAPMul(1870,a**6)+GAPMul(1870,a**6)-GAPMul(1870,b**6)-GAPMul(17,a**6)-GAPMul(17,a**6)-GAPMul(17,a**6)-GAPMul(17,b**6)-GAPMul(17,b**6)-GAPMul(17,c**6)-GAPMul(1870,a**9)+GAPMul(1870,a**9)-GAPMul(1870,a**9)+GAPMul(1870,a**9)-GAPMul(1870,a**9)+GAPMul(1870,b**9)-GAPMul(170,a**12)-GAPMul(170,a**12)+GAPMul(170,a**12)-GAPMul(170,b**12)-GAPMul(17,a**12)-GAPMul(17,a**12)-GAPMul(17,a**12)-GAPMul(17,b**12)-GAPMul(17,b**12)-GAPMul(17,c**12)+a**18

def lxg3210(a,b,c,d):
    return GAPMul(-230,a**3)+GAPMul(230,a**3)-GAPMul(230,a**3)+GAPMul(230,a**3)-GAPMul(46,a**3)+GAPMul(46,a**3)-GAPMul(46,b**3)+GAPMul(230,a**3)-GAPMul(230,a**3)-GAPMul(230,a**3)-GAPMul(230,b**3)+GAPMul(230,a**3)-GAPMul(230,a**3)+GAPMul(230,a**3)-GAPMul(230,a**3)+GAPMul(230,a**3)-GAPMul(230,b**3)+GAPMul(46,a**3)-GAPMul(46,a**3)-GAPMul(46,a**3)-GAPMul(46,b**3)-GAPMul(230,a**6)-GAPMul(230,a**6)+GAPMul(46,a**6)-GAPMul(46,a**6)+GAPMul(46,b**6)-GAPMul(2530,a**6)+GAPMul(2530,b**6)-GAPMul(46,a**6)+GAPMul(46,b**6)-GAPMul(230,a**9)-GAPMul(230,a**9)-GAPMul(230,b**9)+GAPMul(2530,a**9)-GAPMul(2530,a**9)+GAPMul(2530,a**9)-GAPMul(2530,b**9)+GAPMul(2530,a**9)-GAPMul(2530,a**9)-GAPMul(2530,a**9)-GAPMul(2530,b**9)+GAPMul(230,a**9)-GAPMul(230,a**9)+GAPMul(230,a**9)-GAPMul(230,b**9)+GAPMul(230,a**12)-GAPMul(230,a**12)+GAPMul(230,b**12)-GAPMul(230,a**12)+GAPMul(943,a**12)-GAPMul(230,a**12)+GAPMul(230,b**12)-GAPMul(46,a**15)-GAPMul(46,a**15)-GAPMul(46,b**15)+GAPMul(46,a**15)-GAPMul(46,a**15)+GAPMul(46,a**15)-GAPMul(46,b**15)+GAPMul(GAPDiv(1,44),a**24)

def lxg3211(a,b,c,d):
    return GAPMul(-8700,a**3)+GAPMul(8700,a**3)-GAPMul(8700,a**3)+GAPMul(73950,a**3)-GAPMul(73950,a**3)+GAPMul(8700,a**3)-GAPMul(870,a**3)+GAPMul(870,a**3)-GAPMul(870,a**3)+GAPMul(870,b**3)-GAPMul(73950,a**3)-GAPMul(11600,a**3)+GAPMul(11600,a**3)-GAPMul(73950,a**3)-GAPMul(44370,a**3)+GAPMul(44370,a**3)-GAPMul(44370,a**3)+GAPMul(44370,b**3)-GAPMul(44370,a**3)+GAPMul(44370,a**3)-GAPMul(8700,a**3)-GAPMul(11600,a**3)+GAPMul(11600,a**3)-GAPMul(11600,a**3)+GAPMul(11600,b**3)-GAPMul(870,a**3)+GAPMul(870,a**3)-GAPMul(8700,a**6)+GAPMul(73950,a**6)-GAPMul(8700,a**6)-GAPMul(870,a**6)-GAPMul(870,a**6)+GAPMul(870,a**6)-GAPMul(870,b**6)+GAPMul(266220,a**6)-GAPMul(49590,a**6)-GAPMul(49590,a**6)-GAPMul(49590,a**6)-GAPMul(49590,b**6)+GAPMul(73950,a**6)-GAPMul(488070,a**6)-GAPMul(488070,a**6)+GAPMul(488070,a**6)-GAPMul(488070,b**6)-GAPMul(73950,a**6)+GAPMul(266220,a**6)-GAPMul(73950,a**6)-GAPMul(1005720,a**6)-GAPMul(1005720,a**6)-GAPMul(1005720,a**6)-GAPMul(1005720,b**6)-GAPMul(488070,a**6)-GAPMul(488070,a**6)+GAPMul(488070,a**6)-GAPMul(488070,b**6)+GAPMul(8700,a**6)-GAPMul(49590,a**6)-GAPMul(49590,a**6)-GAPMul(49590,a**6)-GAPMul(49590,b**6)-GAPMul(870,a**6)-GAPMul(870,a**6)+GAPMul(870,a**6)-GAPMul(870,b**6)+GAPMul(73950,a**9)-GAPMul(73950,a**9)-GAPMul(11600,a**9)+GAPMul(11600,a**9)-GAPMul(73950,a**9)-GAPMul(488070,a**9)+GAPMul(488070,a**9)-GAPMul(488070,a**9)+GAPMul(488070,b**9)-GAPMul(2637550,a**9)+GAPMul(2637550,a**9)-GAPMul(73950,a**9)+GAPMul(73950,a**9)-GAPMul(2637550,a**9)+GAPMul(2637550,a**9)-GAPMul(2637550,a**9)+GAPMul(2637550,b**9)-GAPMul(488070,a**9)+GAPMul(488070,a**9)-GAPMul(11600,a**9)+GAPMul(11600,a**9)-GAPMul(11600,a**9)+GAPMul(11600,b**9)-GAPMul(73950,a**12)-GAPMul(73950,a**12)-GAPMul(44370,a**12)-GAPMul(44370,a**12)+GAPMul(44370,a**12)-GAPMul(44370,b**12)+GAPMul(73950,a**12)-GAPMul(1005720,a**12)-GAPMul(1005720,a**12)-GAPMul(1005720,a**12)-GAPMul(1005720,b**12)-GAPMul(73950,a**12)-GAPMul(73950,a**12)-GAPMul(2637550,a**12)-GAPMul(2637550,a**12)+GAPMul(2637550,a**12)-GAPMul(2637550,b**12)-GAPMul(1005720,a**12)-GAPMul(1005720,a**12)-GAPMul(1005720,a**12)-GAPMul(1005720,b**12)-GAPMul(44370,a**12)-GAPMul(44370,a**12)+GAPMul(44370,a**12)-GAPMul(44370,b**12)-GAPMul(145,a**12)-GAPMul(145,a**12)-GAPMul(145,a**12)-GAPMul(145,b**12)-GAPMul(145,b**12)-GAPMul(145,c**12)-GAPMul(44370,a**15)+GAPMul(44370,a**15)-GAPMul(488070,a**15)+GAPMul(488070,a**15)-GAPMul(488070,a**15)+GAPMul(488070,b**15)-GAPMul(488070,a**15)+GAPMul(488070,a**15)-GAPMul(44370,a**15)+GAPMul(44370,a**15)-GAPMul(44370,a**15)+GAPMul(44370,b**15)-GAPMul(11600,a**18)-GAPMul(11600,a**18)+GAPMul(11600,a**18)-GAPMul(11600,b**18)-GAPMul(8700,a**18)-GAPMul(49590,a**18)-GAPMul(49590,a**18)-GAPMul(49590,a**18)-GAPMul(49590,b**18)-GAPMul(11600,a**18)-GAPMul(11600,a**18)+GAPMul(11600,a**18)-GAPMul(11600,b**18)-GAPMul(145,a**18)-GAPMul(145,a**18)-GAPMul(145,a**18)-GAPMul(145,b**18)-GAPMul(145,b**18)-GAPMul(145,c**18)-GAPMul(870,a**21)+GAPMul(870,a**21)-GAPMul(870,a**21)+GAPMul(870,a**21)-GAPMul(870,a**21)+GAPMul(870,b**21)

ChevieData["G32"]["Invariants"]=[lxg328,lxg329,lxg3210,lxg3211]

def lxg3212():
    return lxg3213

def lxg3213(a,b,c,d):
    return GAPMul(6388800,a)+GAPMul(2662000000,a)-GAPMul(53240000000,b)-GAPMul(95832000,a)+GAPMul(GAPDiv(1401543,20),a)-GAPMul(3690500000,a**2)-GAPMul(5513970,a**2)-GAPMul(544500000000,a**2)+GAPMul(GAPDiv(71628975,2),a**2)-GAPMul(21175000,a**3)+GAPMul(1332966250,a**3)-GAPMul(2662000,d**4)+GAPMul(26642000,a**4)-GAPMul(71874,b**5)+GAPMul(64570,a**5)-GAPMul(9759475,a**5)-GAPMul(62764,a**6)-GAPMul(81614375,a**6)+GAPMul(GAPDiv(761263,40),a**7)

ChevieData["G32"]["Discriminant"]=lxg3212

if not "families" in ChevieData :
    ReadChv("unip/families")

ChevieData["families"]["G4"]={"name":"Q(G_4)",
    "explanation":"DrinfeldDouble(G4)",
    "x":[Permutation("()"),Permutation("()"),Permutation("()"),Permutation("()"),Permutation("()"),Permutation("()"),Permutation("()"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,24)( 2,12)( 3,22)( 4,20)( 5,23)( 6,21)( 7,16)( 8,11)( 9,18)(10,13)(14,17)(15,19)"),Permutation("( 1,12,24, 2)( 3,16,22, 7)( 4, 6,20,21)( 5,10,23,13)( 8,18,11, 9)(14,19,17,15)"),Permutation("( 1,12,24, 2)( 3,16,22, 7)( 4, 6,20,21)( 5,10,23,13)( 8,18,11, 9)(14,19,17,15)"),Permutation("( 1,12,24, 2)( 3,16,22, 7)( 4, 6,20,21)( 5,10,23,13)( 8,18,11, 9)(14,19,17,15)"),Permutation("( 1,12,24, 2)( 3,16,22, 7)( 4, 6,20,21)( 5,10,23,13)( 8,18,11, 9)(14,19,17,15)"),Permutation("( 1, 8,16,24,11, 7)( 2, 5, 6,12,23,21)( 3,15,10,22,19,13)( 4,14, 9,20,17,18)"),Permutation("( 1, 8,16,24,11, 7)( 2, 5, 6,12,23,21)( 3,15,10,22,19,13)( 4,14, 9,20,17,18)"),Permutation("( 1, 8,16,24,11, 7)( 2, 5, 6,12,23,21)( 3,15,10,22,19,13)( 4,14, 9,20,17,18)"),Permutation("( 1, 8,16,24,11, 7)( 2, 5, 6,12,23,21)( 3,15,10,22,19,13)( 4,14, 9,20,17,18)"),Permutation("( 1, 8,16,24,11, 7)( 2, 5, 6,12,23,21)( 3,15,10,22,19,13)( 4,14, 9,20,17,18)"),Permutation("( 1, 8,16,24,11, 7)( 2, 5, 6,12,23,21)( 3,15,10,22,19,13)( 4,14, 9,20,17,18)"),Permutation("( 1,11,16)( 2,23, 6)( 3,19,10)( 4,17, 9)( 5,21,12)( 7,24, 8)(13,22,15)(14,18,20)"),Permutation("( 1,11,16)( 2,23, 6)( 3,19,10)( 4,17, 9)( 5,21,12)( 7,24, 8)(13,22,15)(14,18,20)"),Permutation("( 1,11,16)( 2,23, 6)( 3,19,10)( 4,17, 9)( 5,21,12)( 7,24, 8)(13,22,15)(14,18,20)"),Permutation("( 1,11,16)( 2,23, 6)( 3,19,10)( 4,17, 9)( 5,21,12)( 7,24, 8)(13,22,15)(14,18,20)"),Permutation("( 1,11,16)( 2,23, 6)( 3,19,10)( 4,17, 9)( 5,21,12)( 7,24, 8)(13,22,15)(14,18,20)"),Permutation("( 1,11,16)( 2,23, 6)( 3,19,10)( 4,17, 9)( 5,21,12)( 7,24, 8)(13,22,15)(14,18,20)"),Permutation("( 1, 3, 5)( 2, 4,11)( 6,10,14)( 7, 9,19)( 8,12,20)(13,17,21)(15,16,18)(22,23,24)"),Permutation("( 1, 3, 5)( 2, 4,11)( 6,10,14)( 7, 9,19)( 8,12,20)(13,17,21)(15,16,18)(22,23,24)"),Permutation("( 1, 3, 5)( 2, 4,11)( 6,10,14)( 7, 9,19)( 8,12,20)(13,17,21)(15,16,18)(22,23,24)"),Permutation("( 1, 3, 5)( 2, 4,11)( 6,10,14)( 7, 9,19)( 8,12,20)(13,17,21)(15,16,18)(22,23,24)"),Permutation("( 1, 3, 5)( 2, 4,11)( 6,10,14)( 7, 9,19)( 8,12,20)(13,17,21)(15,16,18)(22,23,24)"),Permutation("( 1, 3, 5)( 2, 4,11)( 6,10,14)( 7, 9,19)( 8,12,20)(13,17,21)(15,16,18)(22,23,24)"),Permutation("( 1,22, 5,24, 3,23)( 2,20,11,12, 4, 8)( 6,13,14,21,10,17)( 7,18,19,16, 9,15)"),Permutation("( 1,22, 5,24, 3,23)( 2,20,11,12, 4, 8)( 6,13,14,21,10,17)( 7,18,19,16, 9,15)"),Permutation("( 1,22, 5,24, 3,23)( 2,20,11,12, 4, 8)( 6,13,14,21,10,17)( 7,18,19,16, 9,15)"),Permutation("( 1,22, 5,24, 3,23)( 2,20,11,12, 4, 8)( 6,13,14,21,10,17)( 7,18,19,16, 9,15)"),Permutation("( 1,22, 5,24, 3,23)( 2,20,11,12, 4, 8)( 6,13,14,21,10,17)( 7,18,19,16, 9,15)"),Permutation("( 1,22, 5,24, 3,23)( 2,20,11,12, 4, 8)( 6,13,14,21,10,17)( 7,18,19,16, 9,15)")],
    "charLabels":["(1,\\phi_{1,0})","(1,\\phi_{1,4})","(1,\\phi_{1,8})","(1,\\phi_{2,5})","(1,\\phi_{2,3})","(1,\\phi_{2,1})","(1,\\phi_{3,2})","(z,\\phi_{1,0})","(z,\\phi_{1,4})","(z,\\phi_{1,8})","(z,\\phi_{2,5})","(z,\\phi_{2,3})","(z,\\phi_{2,1})","(z,\\phi_{3,2})","(g_4,1)","(g_4,-1)","(g_4,i)","(g_4,-i)","(g_6,1)","(g_6,-1)","(g_6,\\zeta_3^2)","(g_6,-\\zeta_3^2)","(g_6,\\zeta_3)","(g_6,-\\zeta_3)","(g_6^4,1)","(g_6^4,-1)","(g_6^4,\\zeta_3^2)","(g_6^4,-\\zeta_3^2)","(g_6^4,\\zeta_3)","(g_6^4,-\\zeta_3)","(g_6^2,1)","(g_6^2,-1)","(g_6^2,\\zeta_3)","(g_6^2,-\\zeta_3)","(g_6^2,\\zeta_3^2)","(g_6^2,-\\zeta_3^2)","(g_6^5,1)","(g_6^5,-1)","(g_6^5,\\zeta_3)","(g_6^5,-\\zeta_3)","(g_6^5,\\zeta_3^2)","(g_6^5,-\\zeta_3^2)"],
    "eigenvalues":[1,1,1,1,1,1,1,1,1,1,-1,-1,-1,1,1,-1,-ER(4),ER(4),1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2],
    "mellin":DiagonalMat(*[[[1,1,1,2,2,2,3],[1,1,1,-2,-2,-2,3],[1,1,1,0,0,0,-1],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0]],[[1,1,1,2,2,2,3],[1,1,1,-2,-2,-2,3],[1,1,1,0,0,0,-1],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0]],[[1,1,1,1],[1,-1,-ER(4),ER(4)],[1,-1,ER(4),-ER(4)],[1,1,-1,-1]],[[1,1,1,1,1,1],[1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2],[1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3)],[1,1,ER(3)**2,ER(3)**2,ER(3),ER(3)],[1,1,ER(3),ER(3),ER(3)**2,ER(3)**2],[1,-1,1,-1,1,-1]],[[1,1,1,1,1,1],[1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2],[1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3)],[1,1,ER(3)**2,ER(3)**2,ER(3),ER(3)],[1,1,ER(3),ER(3),ER(3)**2,ER(3)**2],[1,-1,1,-1,1,-1]],[[1,1,1,1,1,1],[1,1,ER(3)**2,ER(3)**2,ER(3),ER(3)],[1,1,ER(3),ER(3),ER(3)**2,ER(3)**2],[1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3)],[1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2],[1,-1,1,-1,1,-1]],[[1,1,1,1,1,1],[1,1,ER(3)**2,ER(3)**2,ER(3),ER(3)],[1,1,ER(3),ER(3),ER(3)**2,ER(3)**2],[1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3)],[1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2],[1,-1,1,-1,1,-1]]]),
    "group":ReflectionGroup(4),
    "fourierMat":GAPDiv([[GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(3,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(3,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3)],[GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(3,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2],[GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),1,1,1,GAPDiv(3,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),-1,-1,-1,GAPDiv(-3,2),0,0,0,0,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1],[GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),1,1,1,GAPDiv(3,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),-1,-1,-1,GAPDiv(-3,2),0,0,0,0,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3),-ER(3),-ER(3),-ER(3),-ER(3),-ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),ER(3)],[GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),1,1,1,GAPDiv(3,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),-1,-1,-1,GAPDiv(-3,2),0,0,0,0,ER(3),ER(3),ER(3),ER(3),ER(3),ER(3),-ER(3),-ER(3),-ER(3),-ER(3),-ER(3),-ER(3),-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,-ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2],[GAPDiv(3,4),GAPDiv(3,4),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(9,4),GAPDiv(3,4),GAPDiv(3,4),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(9,4),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(3,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(-3,2),GAPDiv(-3,2),1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,-1],[GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(3,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(-3,2),GAPDiv(-3,2),ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3)],[GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(3,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(1,4),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(3,4),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(-3,2),GAPDiv(-3,2),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2],[GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),-1,-1,-1,GAPDiv(3,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),1,1,1,GAPDiv(-3,2),0,0,0,0,1,-1,1,-1,1,-1,-1,1,-1,1,-1,1,-1,1,-1,1,-1,1,1,-1,1,-1,1,-1],[GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),-1,-1,-1,GAPDiv(3,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),1,1,1,GAPDiv(-3,2),0,0,0,0,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3)],[GAPDiv(1,2),GAPDiv(1,2),GAPDiv(1,2),-1,-1,-1,GAPDiv(3,2),GAPDiv(-1,2),GAPDiv(-1,2),GAPDiv(-1,2),1,1,1,GAPDiv(-3,2),0,0,0,0,ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3),ER(3),-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2],[GAPDiv(3,4),GAPDiv(3,4),GAPDiv(3,4),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(9,4),GAPDiv(3,4),GAPDiv(3,4),GAPDiv(3,4),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(9,4),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,GAPDiv(-3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,GAPDiv(-3,2),3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,GAPDiv(-3,2),GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,GAPDiv(-3,2),-3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),0,0,0,GAPDiv(3,2),0,0,-3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[GAPDiv(3,2),GAPDiv(3,2),GAPDiv(3,2),0,0,0,GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),GAPDiv(-3,2),0,0,0,GAPDiv(3,2),0,0,3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,0,0,0,0,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3)],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,-1,-ER(3)**2,-ER(3),-1,-ER(3)**2,-ER(3),0,0,0,0,0,-1,1,-ER(3),ER(3),-ER(3)**2,ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),-1,1,-ER(3)**2,ER(3)**2,-ER(3),ER(3)],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,0,0,0,0,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,-1,-ER(3)**2,-ER(3),-1,-ER(3)**2,-ER(3),0,0,0,0,0,-ER(3),ER(3),-ER(3)**2,ER(3)**2,-1,1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,-ER(3)**2,ER(3)**2,-ER(3),ER(3),-1,1],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,0,0,0,0,ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2],[1,ER(3)**2,ER(3),1,ER(3)**2,ER(3),0,-1,-ER(3)**2,-ER(3),-1,-ER(3)**2,-ER(3),0,0,0,0,0,-ER(3)**2,ER(3)**2,-1,1,-ER(3),ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,-ER(3),ER(3),-1,1,-ER(3)**2,ER(3)**2],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,0,0,0,0,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3)],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,-1,-ER(3)**2,-ER(3),1,ER(3)**2,ER(3),0,0,0,0,0,-1,-1,-ER(3),-ER(3),-ER(3)**2,-ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),-1,-1,-ER(3)**2,-ER(3)**2,-ER(3),-ER(3)],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,0,0,0,0,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,-1,-ER(3)**2,-ER(3),1,ER(3)**2,ER(3),0,0,0,0,0,-ER(3),-ER(3),-ER(3)**2,-ER(3)**2,-1,-1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,-ER(3)**2,-ER(3)**2,-ER(3),-ER(3),-1,-1],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,0,0,0,0,ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2],[1,ER(3)**2,ER(3),-1,-ER(3)**2,-ER(3),0,-1,-ER(3)**2,-ER(3),1,ER(3)**2,ER(3),0,0,0,0,0,-ER(3)**2,-ER(3)**2,-1,-1,-ER(3),-ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,-ER(3),-ER(3),-1,-1,-ER(3)**2,-ER(3)**2],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,0,0,0,0,1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,-1,-ER(3),-ER(3)**2,1,ER(3),ER(3)**2,0,0,0,0,0,-1,-1,-ER(3)**2,-ER(3)**2,-ER(3),-ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,-1,-1,-ER(3),-ER(3),-ER(3)**2,-ER(3)**2],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,0,0,0,0,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,-1,-ER(3),-ER(3)**2,1,ER(3),ER(3)**2,0,0,0,0,0,-ER(3)**2,-ER(3)**2,-ER(3),-ER(3),-1,-1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,-ER(3),-ER(3),-ER(3)**2,-ER(3)**2,-1,-1],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,0,0,0,0,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),ER(3)**2,ER(3)**2,1,1,ER(3),ER(3)],[1,ER(3),ER(3)**2,-1,-ER(3),-ER(3)**2,0,-1,-ER(3),-ER(3)**2,1,ER(3),ER(3)**2,0,0,0,0,0,-ER(3),-ER(3),-1,-1,-ER(3)**2,-ER(3)**2,ER(3),ER(3),1,1,ER(3)**2,ER(3)**2,ER(3)**2,ER(3)**2,1,1,ER(3),ER(3),-ER(3)**2,-ER(3)**2,-1,-1,-ER(3),-ER(3)],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,0,0,0,0,1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,-1,-ER(3),-ER(3)**2,-1,-ER(3),-ER(3)**2,0,0,0,0,0,-1,1,-ER(3)**2,ER(3)**2,-ER(3),ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,-1,1,-ER(3),ER(3),-ER(3)**2,ER(3)**2],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,0,0,0,0,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,-1,-ER(3),-ER(3)**2,-1,-ER(3),-ER(3)**2,0,0,0,0,0,-ER(3)**2,ER(3)**2,-ER(3),ER(3),-1,1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,-ER(3),ER(3),-ER(3)**2,ER(3)**2,-1,1],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,0,0,0,0,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3)],[1,ER(3),ER(3)**2,1,ER(3),ER(3)**2,0,-1,-ER(3),-ER(3)**2,-1,-ER(3),-ER(3)**2,0,0,0,0,0,-ER(3),ER(3),-1,1,-ER(3)**2,ER(3)**2,ER(3),-ER(3),1,-1,ER(3)**2,-ER(3)**2,ER(3)**2,-ER(3)**2,1,-1,ER(3),-ER(3),-ER(3)**2,ER(3)**2,-1,1,-ER(3),ER(3)]],6),
    "special":1}

def lxg3214():
    J=ER(3)
    i3=J-J**2
    I=ER(4)
    def cuspidal(arg):
        n="G_{32}"
        if len(arg)>2 and IsInt(arg[3-1]) :
            PrintToString(n,"^",arg[3-1])
        PrintToString(n,"[",FormatTeX(arg[2-1]),"]")
        res={"relativeType":{"series":"A",
            "indices":[],
            "rank":0},
            "levi":range(1,4+1),
            "parameterExponents":[],
            "charNumbers":[arg[1-1]],
            "eigenvalue":arg[2-1],
            "cuspidalName":n}
        if len(arg)>2 and not IsInt(arg[len(arg)-1]) :
            res["qEigen"]=arg[len(arg)-1]
        return res
    
    
    return {"harishChandra":[{"relativeType":{"series":"ST",
        "indices":range(1,4+1),
        "rank":4,
        "ST":32},
        "levi":[],
        "parameterExponents":[1,1,1,1],
        "charNumbers":range(1,102+1),
        "eigenvalue":1,
        "cuspidalName":""},{"relativeType":{"series":"ST",
        "indices":range(2,4+1),
        "rank":3,
        "ST":26},
        "levi":[1],
        "parameterExponents":[3,1,1],
        "charNumbers":[103,171,240,241,121,120,242,117,234,105,233,104,108,238,199,126,162,109,235,173,200,127,163,110,236,172,130,203,161,226,119,175,131,204,160,225,118,174,152,153,177,179,178,176,201,128,202,129],
        "eigenvalue":J**2,
        "cuspidalName":ImprimitiveCuspidalName([[],[0,1],[0,1]])},{"relativeType":{"series":"ST",
        "indices":[4,3],
        "rank":2,
        "ST":5},
        "levi":range(1,2+1),
        "parameterExponents":[1,[0,4,4]],
        "charNumbers":[239,113,114,246,135,132,245,133,134,136,230,229,124,208,206,123,205,207,182,181,180],
        "eigenvalue":-1,
        "cuspidalName":"G_4"},{"relativeType":{"series":"ST",
        "indices":[2,4],
        "rank":2,
        "p":6,
        "q":1},
        "levi":[1,3],
        "parameterExponents":[[3,3,2,0,0,2],3],
        "charNumbers":[188,122,137,184,190,140,187,139,189,183,138,227,212,209,164,244,237,210,243,211,228,107,106,111,185,186,112],
        "eigenvalue":J,
        "cuspidalName":Concatenation(ImprimitiveCuspidalName([[],[0,1],[0,1]]),"\\otimes ",ImprimitiveCuspidalName([[],[0,1],[0,1]]))},{"relativeType":{"series":"ST",
        "indices":[4],
        "rank":1,
        "p":6,
        "q":1},
        "levi":range(1,3+1),
        "parameterExponents":[[6,4,1,0,1,4]],
        "charNumbers":[116,143,217,232,218,144],
        "eigenvalue":J,
        "cuspidalName":"G_{25}[\\zeta_3]"},{"relativeType":{"series":"ST",
        "indices":[4],
        "rank":1,
        "p":6,
        "q":1},
        "levi":range(1,3+1),
        "parameterExponents":[[6,1,4,0,4,1]],
        "charNumbers":[115,216,145,231,146,215],
        "eigenvalue":-J,
        "cuspidalName":"G_{25}[-\\zeta_3]"},{"relativeType":{"series":"ST",
        "indices":[3],
        "rank":1,
        "p":6,
        "q":1},
        "levi":[1,2,4],
        "parameterExponents":[[9,8,5,0,5,8]],
        "charNumbers":[125,142,213,247,214,141],
        "eigenvalue":-J**2,
        "cuspidalName":Concatenation("G_4\\otimes ",ImprimitiveCuspidalName([[],[0,1],[0,1]]))},cuspidal(147,1),cuspidal(148,1,2),cuspidal(219,1,3),cuspidal(149,-1),cuspidal(191,-1,2),cuspidal(192,-1,3),cuspidal(220,-1,4),cuspidal(151,ER(4)),cuspidal(154,ER(4),2,GAPDiv(1,2)),cuspidal(155,ER(4),3,GAPDiv(1,2)),cuspidal(150,-ER(4)),cuspidal(156,-ER(4),2,GAPDiv(1,2)),cuspidal(157,-ER(4),3,GAPDiv(1,2)),cuspidal(193,J**2),cuspidal(194,J**2,2),cuspidal(197,-J),cuspidal(198,-J,2),cuspidal(195,-J**2),cuspidal(196,-J**2,2),cuspidal(221,ER(5)),cuspidal(222,ER(5)**2),cuspidal(223,ER(5)**3),cuspidal(224,ER(5)**4),cuspidal(165,ER(9)**5,GAPDiv(2,3)),cuspidal(170,ER(9)**5,2,GAPDiv(1,3)),cuspidal(166,ER(9)**2,GAPDiv(1,3)),cuspidal(168,ER(9)**2,2,GAPDiv(2,3)),cuspidal(167,ER(9)**8,GAPDiv(2,3)),cuspidal(169,ER(9)**8,2,GAPDiv(1,3)),cuspidal(158,ER(12)**11,GAPDiv(1,2)),cuspidal(159,ER(12)**5,GAPDiv(1,2))],
        "families":[Family("C1",[1]),Family(ChevieData["families"]["X"](3),[9,6,103],{"signs":[1,1,-1]}),Family(ChevieData["families"]["QZ"](3),[26,20,23,15,106,104,12,105,107],{"signs":[1,1,1,1,1,-1,1,1,1],
        "special":2,
        "cospecial":3}),Family(ChevieData["families"]["X"](3),[37,34,108],{"signs":[1,1,-1]}),Family(ChevieData["families"]["X"](6),[57,64,49,61,54,111,113,109,115,17,116,110,18,114,112],{"signs":[1,1,1,1,1,1,-1,-1,1,-1,1,-1,1,1,-1]}),Family(GAPMul(ChevieData["families"]["X"](3),Family("X5")),[46,72,123,119,41,44,69,124,118,45,120,117,125,122,121],{"signs":[1,1,-1,-1,1,1,1,-1,-1,1,-1,-1,1,1,-1]}),Family("G4",[32,13,10,97,43,40,148,147,73,76,149,133,132,80,52,136,150,151,74,135,144,145,128,141,27,84,138,139,126,130,28,81,137,140,127,131,77,134,143,146,129,142],{"signs":[1,1,1,-1,-1,-1,1,1,1,1,1,-1,-1,1,1,-1,-1,-1,-1,-1,1,1,1,-1,1,1,1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1],
        "special":9,
        "cospecial":10}),Family(GAPMul(ChevieData["families"]["X"](3),Family("C'\"2")),[93,96,154,156,94,95,155,157,153,152,158,159],{"signs":[1,1,1,1,1,1,1,1,-1,-1,1,1]}),Family(GAPMul(ChevieData["families"]["X"](3),ChevieData["families"]["X"](3)),[85,87,161,88,82,160,163,162,164],{"signs":[1,1,-1,1,1,-1,-1,-1,1]}),Family("Z9",[100,165,166,101,167,169,102,168,170],{"special":7}),Family(GAPMul(Family("X5"),ChevieData["families"]["QZ"](3)),[53,21,59,90,185,177,47,193,187,79,33,36,98,184,179,99,178,183,180,182,181,192,198,196,191,195,197,171,172,173,174,68,189,175,190,71,56,60,24,48,188,194,89,176,186],{"signs":[1,1,-1,1,-1,1,1,1,-1,1,-1,-1,1,-1,1,1,-1,-1,-1,-1,-1,1,-1,1,1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,-1,1,-1,-1]}),Family({"fourierMat":GAPDiv([[-1,-1,1,1,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,5,-1,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),5,5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),1,5,-6,-6,-6,-6],[-1,-1,1,1,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,5,-1,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),5,5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),1,5,-6,-6,-6,-6],[1,1,-1,-1,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,5,1,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),5,5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),-1,5,6,6,6,6],[1,1,-1,-1,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,5,1,GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),5,5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),-1,5,6,6,6,6],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),5,5,5,5,5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),-5,-5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,5,5,5,5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),-5,-5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),5,5,5,5,-5,-5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,5,5,5,-5,-5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),5,5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,-5,-5,5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,-5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,-5,-5,5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,-5,0,0,0,0],[5,5,5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,-5,0,0,0,0],[5,5,5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,5,5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,-5,0,0,0,0],[5,5,5,5,5,5,-5,-5,5,5,5,5,5,5,-5,5,5,-5,5,-5,-5,-5,5,5,5,5,5,5,5,-5,-5,5,-5,5,5,-5,0,0,0,0],[-1,-1,1,1,5,5,5,5,5,5,5,5,5,-1,-5,5,-5,5,5,-5,5,5,-5,-5,5,5,5,5,-5,5,5,-5,5,-5,1,5,-6,-6,-6,-6],[GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),-5,-5,-5,-5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,-5,5,5,-5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),5,5,5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,-5,5,-5,-5,5,0,0,0,0],[GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,-5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,5,-5,-5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,-5,-5,5,5,5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),-5,-5,5,5,GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,5,5,-5,-5,-5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,5,5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,-5,5,5,-5,0,0,0,0],[GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,-5,-5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,-5,5,-5,-5,5,0,0,0,0],[5,5,5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,-5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,5,0,0,0,0],[5,5,5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,-5,5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,5,0,0,0,0],[GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,5,5,5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,-5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,0,0,0,0],[GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,5,5,5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,-5,GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),5,5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,-5,5,5,-5,5,-5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,-5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,-5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,-5,5,5,-5,5,-5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,-5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,-5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,5,-5,5,-5,5,5,-5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),-5,5,GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,-5,5,-5,5,5,-5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),-5,5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,0,0,0,0],[GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,-5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,5,-5,-5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,5,-5,-5,-5,0,0,0,0],[GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,5,5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,-5,-5,5,5,5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,5,-5,5,5,-5,-5,5,GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),-5,5,GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),5,5,0,0,0,0],[GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,-5,5,-5,-5,5,5,-5,GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),5,-5,GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),-5,-5,0,0,0,0],[GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),-5,5,-5,5,-5,5,-5,5,GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),5,-5,GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),-5,-5,0,0,0,0],[GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),5,-5,5,-5,5,-5,5,-5,GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(5,ER(3)),GAPMul(5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(-5,ER(3)**2),-5,5,GAPMul(5,ER(3)),GAPMul(-5,ER(3)**2),GAPMul(-5,ER(3)),GAPMul(5,ER(3)**2),5,5,0,0,0,0],[1,1,-1,-1,-5,-5,-5,-5,5,5,5,5,5,1,5,-5,5,-5,5,-5,5,5,-5,-5,5,5,-5,-5,-5,5,5,-5,-5,5,-1,5,6,6,6,6],[5,5,5,5,5,5,-5,-5,-5,-5,-5,-5,-5,5,-5,5,5,-5,-5,5,5,5,-5,-5,-5,-5,5,5,-5,5,5,-5,-5,5,5,5,0,0,0,0],[-6,-6,6,6,0,0,0,0,0,0,0,0,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9-GAPMul(3,ER(5)),-6-GAPMul(6,ER(5)),-6+GAPMul(6,ER(5)),9+GAPMul(3,ER(5))],[-6,-6,6,6,0,0,0,0,0,0,0,0,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,-6-GAPMul(6,ER(5)),9+GAPMul(3,ER(5)),9-GAPMul(3,ER(5)),-6+GAPMul(6,ER(5))],[-6,-6,6,6,0,0,0,0,0,0,0,0,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,-6+GAPMul(6,ER(5)),9-GAPMul(3,ER(5)),9+GAPMul(3,ER(5)),-6-GAPMul(6,ER(5))],[-6,-6,6,6,0,0,0,0,0,0,0,0,0,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,9+GAPMul(3,ER(5)),-6+GAPMul(6,ER(5)),-6-GAPMul(6,ER(5)),9-GAPMul(3,ER(5))]],30),
        "eigenvalues":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,J**2,J**2,J**2,J**2,J**2,J**2,-1,-1,-1,-1,J,J,J,J,-J**2,-J**2,-J,-J,J,J,1,-1,ER(5),ER(5)**2,ER(5)**3,ER(5)**4],
        "explanation":"mystery G32",
        "name":"?40",
        "special":3,
        "cospecial":4},[8,5,65,62,86,83,66,63,51,50,67,70,91,92,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],{"signs":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}),Family(ChevieData["families"]["X"](6),[58,75,25,78,55,227,229,225,231,30,232,226,29,230,228],{"signs":[1,1,1,1,1,1,-1,-1,1,-1,1,-1,1,1,-1]}),Family(GAPMul(ChevieData["families"]["X"](3),ChevieData["families"]["X"](3)),[38,42,234,39,35,233,236,235,237],{"signs":[1,1,-1,1,1,-1,-1,-1,1]}),Family("X5",[19,31,239,238,22],{"signs":[1,1,-1,-1,1]}),Family(ComplexConjugate(ChevieData["families"]["X"](6)),[14,7,16,4,11,240,246,244,247,2,242,243,3,245,241],{"signs":[1,1,1,1,1,1,1,-1,1,1,-1,1,-1,-1,1],
        "special":13,
        "cospecial":10})],
        "a":[0,40,40,40,15,1,40,15,1,6,40,2,6,40,2,40,4,4,30,2,12,30,2,12,20,2,6,6,20,20,30,6,12,3,25,12,3,25,25,6,5,25,6,5,5,5,12,12,4,15,15,6,12,4,20,12,4,20,12,12,4,15,15,4,15,15,15,12,5,15,12,5,6,6,20,6,6,20,12,6,6,9,15,6,9,15,9,9,12,12,15,15,8,8,8,8,6,12,12,10,10,10,1,2,2,2,2,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,20,20,20,20,20,20,20,20,25,25,25,25,25,30,30,40,40,40,40,40,40,40,40],
        "A":[0,80,80,80,75,29,80,75,29,66,80,46,66,80,46,80,56,56,78,46,72,78,46,72,76,46,66,66,76,76,78,66,72,51,77,72,51,77,77,66,61,77,66,61,61,61,72,72,56,75,75,66,72,56,76,72,56,76,72,72,56,75,75,56,75,75,75,72,61,75,72,61,66,66,76,66,66,76,72,66,66,69,75,66,69,75,69,69,72,72,75,75,67,67,67,67,66,72,72,70,70,70,29,46,46,46,46,51,56,56,56,56,56,56,56,56,61,61,61,61,61,61,61,61,61,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,67,67,67,67,67,67,67,69,69,69,69,69,70,70,70,70,70,70,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,77,77,77,77,77,78,78,80,80,80,80,80,80,80,80]}

ChevieData["G32"]["UnipotentCharacters"]=lxg3214
