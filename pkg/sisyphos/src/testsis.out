batch ( "testsis.in" );
checking C3xC3xC3 and C3xC3xC3
isomorphic ?
true
sizeOutG : 11232,
sizeInnG : 1,
sizeAutG : 11232,
epimorphism : (a, b, c),
checking C3xC3xC3 and C9xC3, using minimal presentation
isomorphic ?
false
checking C3xC3xC3 and C9xC3, using 3-generator presentation
isomorphic ?
false
checking C2xC2xC2
generating system for Aut(G) = Gl(3,2) = PSL(2,7)
sizeOutG : 168,
sizeInnG : 1,
sizeAutG : 168,
generator no.    1 : (c, a, b),
generator no.    2 : (a*b, b, c)
element list for Aut(G) = Gl(3,2) = PSL(2,7)
sizeOutG : 168,
sizeInnG : 1,
sizeAutG : 168,
element no.    1 : (a, b, c),
element no.    2 : (c, a, b),
element no.    3 : (b, c, a),
element no.    4 : (a*b, b, c),
element no.    5 : (a*c, a, b),
element no.    6 : (b*c, c, a),
element no.    7 : (c, a*b, b),
element no.    8 : (b, a*c, a),
element no.    9 : (a, b*c, c),
element no.   10 : (b, c, a*b),
element no.   11 : (a, b, a*c),
element no.   12 : (c, a, b*c),
element no.   13 : (a*b*c, a*b, b),
element no.   14 : (a*b*c, a*c, a),
element no.   15 : (a*b*c, b*c, c),
element no.   16 : (b*c, c, a*b),
element no.   17 : (a*b, b, a*c),
element no.   18 : (a*c, a, b*c),
element no.   19 : (b, a*b*c, a*b),
element no.   20 : (a, a*b*c, a*c),
element no.   21 : (c, a*b*c, b*c),
element no.   22 : (a*b, b*c, c),
element no.   23 : (a*c, a*b, b),
element no.   24 : (b*c, a*c, a),
element no.   25 : (a*b, b, a*b*c),
element no.   26 : (a*c, a, a*b*c),
element no.   27 : (b*c, c, a*b*c),
element no.   28 : (a*c, a*b*c, a*b),
element no.   29 : (b*c, a*b*c, a*c),
element no.   30 : (a*b, a*b*c, b*c),
element no.   31 : (c, a*b, b*c),
element no.   32 : (b, a*c, a*b),
element no.   33 : (a, b*c, a*c),
element no.   34 : (a*c, b*c, c),
element no.   35 : (b*c, a*b, b),
element no.   36 : (a*b, a*c, a),
element no.   37 : (a, b, a*b*c),
element no.   38 : (c, a, a*b*c),
element no.   39 : (b, c, a*b*c),
element no.   40 : (a*b, a*c, a*b*c),
element no.   41 : (a*c, b*c, a*b*c),
element no.   42 : (b*c, a*b, a*b*c),
element no.   43 : (a*b*c, a*b, b*c),
element no.   44 : (a*b*c, a*c, a*b),
element no.   45 : (a*b*c, b*c, a*c),
element no.   46 : (c, a*c, b*c),
element no.   47 : (b, b*c, a*b),
element no.   48 : (a, a*b, a*c),
element no.   49 : (a*b*c, a, b),
element no.   50 : (a*b*c, c, a),
element no.   51 : (a*b*c, b, c),
element no.   52 : (a*b*c, a*b, a*c),
element no.   53 : (a*b*c, a*c, b*c),
element no.   54 : (a*b*c, b*c, a*b),
element no.   55 : (b*c, a*c, a*b*c),
element no.   56 : (a*b, b*c, a*b*c),
element no.   57 : (a*c, a*b, a*b*c),
element no.   58 : (b*c, a*b*c, a*b),
element no.   59 : (a*b, a*b*c, a*c),
element no.   60 : (a*c, a*b*c, b*c),
element no.   61 : (b*c, c, a*c),
element no.   62 : (a*b, b, b*c),
element no.   63 : (a*c, a, a*b),
element no.   64 : (a, a*c, b*c),
element no.   65 : (c, b*c, a*b),
element no.   66 : (b, a*b, a*c),
element no.   67 : (b, a*b*c, a),
element no.   68 : (a, a*b*c, c),
element no.   69 : (c, a*b*c, b),
element no.   70 : (b*c, a, b),
element no.   71 : (a*b, c, a),
element no.   72 : (a*c, b, c),
element no.   73 : (c, a*b, a*c),
element no.   74 : (b, a*c, b*c),
element no.   75 : (a, b*c, a*b),
element no.   76 : (a, a*b*c, a*b),
element no.   77 : (c, a*b*c, a*c),
element no.   78 : (b, a*b*c, b*c),
element no.   79 : (b, c, a*c),
element no.   80 : (a, b, b*c),
element no.   81 : (c, a, a*b),
element no.   82 : (b*c, a, a*c),
element no.   83 : (a*b, c, b*c),
element no.   84 : (a*c, b, a*b),
element no.   85 : (a*c, a*b*c, a),
element no.   86 : (b*c, a*b*c, c),
element no.   87 : (a*b, a*b*c, b),
element no.   88 : (b, b*c, a),
element no.   89 : (a, a*b, c),
element no.   90 : (c, a*c, b),
element no.   91 : (a*c, c, a*b),
element no.   92 : (b*c, b, a*c),
element no.   93 : (a*b, a, b*c),
element no.   94 : (a*b, a, a*b*c),
element no.   95 : (a*c, c, a*b*c),
element no.   96 : (b*c, b, a*b*c),
element no.   97 : (a*c, b*c, a),
element no.   98 : (b*c, a*b, c),
element no.   99 : (a*b, a*c, b),
element no.  100 : (a*b*c, a, a*c),
element no.  101 : (a*b*c, c, b*c),
element no.  102 : (a*b*c, b, a*b),
element no.  103 : (a, a*c, a*b*c),
element no.  104 : (c, b*c, a*b*c),
element no.  105 : (b, a*b, a*b*c),
element no.  106 : (c, b*c, a),
element no.  107 : (b, a*b, c),
element no.  108 : (a, a*c, b),
element no.  109 : (a*b, a*c, c),
element no.  110 : (a*c, b*c, b),
element no.  111 : (b*c, a*b, a),
element no.  112 : (a, c, a*b),
element no.  113 : (c, b, a*c),
element no.  114 : (b, a, b*c),
element no.  115 : (a*b*c, a*b, a),
element no.  116 : (a*b*c, a*c, c),
element no.  117 : (a*b*c, b*c, b),
element no.  118 : (b, a, a*b*c),
element no.  119 : (a, c, a*b*c),
element no.  120 : (c, b, a*b*c),
element no.  121 : (a*b, b*c, a),
element no.  122 : (a*c, a*b, c),
element no.  123 : (b*c, a*c, b),
element no.  124 : (c, a*c, a*b*c),
element no.  125 : (b, b*c, a*b*c),
element no.  126 : (a, a*b, a*b*c),
element no.  127 : (a, c, b*c),
element no.  128 : (c, b, a*b),
element no.  129 : (b, a, a*c),
element no.  130 : (b*c, a*c, c),
element no.  131 : (a*b, b*c, b),
element no.  132 : (a*c, a*b, a),
element no.  133 : (a*b, a, c),
element no.  134 : (a*c, c, b),
element no.  135 : (b*c, b, a),
element no.  136 : (c, a*b, a),
element no.  137 : (b, a*c, c),
element no.  138 : (a, b*c, b),
element no.  139 : (a*b*c, b, a),
element no.  140 : (a*b*c, a, c),
element no.  141 : (a*b*c, c, b),
element no.  142 : (a, a*b, b*c),
element no.  143 : (c, a*c, a*b),
element no.  144 : (b, b*c, a*c),
element no.  145 : (a*b*c, c, a*c),
element no.  146 : (a*b*c, b, b*c),
element no.  147 : (a*b*c, a, a*b),
element no.  148 : (b*c, a, c),
element no.  149 : (a*b, c, b),
element no.  150 : (a*c, b, a),
element no.  151 : (a*c, c, b*c),
element no.  152 : (b*c, b, a*b),
element no.  153 : (a*b, a, a*c),
element no.  154 : (c, b*c, a*c),
element no.  155 : (b, a*b, b*c),
element no.  156 : (a, a*c, a*b),
element no.  157 : (b, a, c),
element no.  158 : (a, c, b),
element no.  159 : (c, b, a),
element no.  160 : (a, a*b*c, b),
element no.  161 : (c, a*b*c, a),
element no.  162 : (b, a*b*c, c),
element no.  163 : (b*c, a, a*b),
element no.  164 : (a*b, c, a*c),
element no.  165 : (a*c, b, b*c),
element no.  166 : (a*c, a*b*c, c),
element no.  167 : (b*c, a*b*c, b),
element no.  168 : (a*b, a*b*c, a)
checking quaternion group
generating system for Out(G) = Gl(2,2)
sizeOutG : 6,
sizeInnG : 4,
sizeAutG : 24,
generator no.    1 : (b, a),
generator no.    2 : (a*b, b)
element list for Out(G) = Gl(2,2)
sizeOutG : 6,
sizeInnG : 4,
sizeAutG : 24,
element no.    1 : (a, b),
element no.    2 : (b, a),
element no.    3 : (a*b, b),
element no.    4 : (a*b*c, a),
element no.    5 : (b, a*b),
element no.    6 : (a, a*b*c)
checking group 173 of order 64
compute automorphisms using canonical minimal  presentation
sizeOutG : 128,
sizeInnG : 16,
sizeAutG : 2048,
epimorphism : (a, b, c),
generator no.    1 : (a, b*c, c),
generator no.    2 : (a*c, b*c, c),
generator no.    3 : (a, b, c*d),
generator no.    4 : (a, b*d, c),
generator no.    5 : (a, b*e, c),
generator no.    6 : (a, b, c*f),
generator no.    7 : (a, b*f, c)
as permutations:
sizeOutG : 128,
sizeInnG : 16,
sizeAutG : 2048,
epimorphism : (a, b, c),
generator no.    1 : (0,1,2,3,6,7,4,5,8,9,10,11,14,15,12,13,24,25,26,27,30,31,28,29,18,19,16,17,20,21,22,23,32,33,34,35,38,39,36,37,40,41,42,43,46,47,44,45,56,57,58,59,62,63,60,61,50,51,48,49,52,53,54,55)
,
generator no.    2 : (0,1,2,3,6,7,4,5,8,9,10,11,14,15,12,13,24,25,26,27,30,31,28,29,18,19,16,17,20,21,22,23,40,41,42,43,46,47,44,45,34,35,32,33,36,37,38,39,50,51,48,49,52,53,54,55,58,59,56,57,60,61,62,63)
,
generator no.    3 : (0,1,3,2,4,5,7,6,12,13,15,14,9,8,10,11,16,17,19,18,20,21,23,22,28,29,31,30,25,24,26,27,32,33,35,34,36,37,39,38,44,45,47,46,41,40,42,43,48,49,51,50,52,53,55,54,60,61,63,62,57,56,58,59)
,
generator no.    4 : (0,1,2,3,5,4,7,6,8,9,10,11,13,12,15,14,20,21,22,23,16,17,18,19,28,29,30,31,24,25,26,27,32,33,34,35,37,36,39,38,40,41,42,43,45,44,47,46,52,53,54,55,48,49,50,51,60,61,62,63,56,57,58,59)
,
generator no.    5 : (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,16,17,22,23,20,21,26,27,24,25,30,31,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,51,48,49,54,55,52,53,58,59,56,57,62,63,60,61)
,
generator no.    6 : (0,1,2,3,4,5,6,7,9,8,11,10,13,12,15,14,16,17,18,19,20,21,22,23,25,24,27,26,29,28,31,30,32,33,34,35,36,37,38,39,41,40,43,42,45,44,47,46,48,49,50,51,52,53,54,55,57,56,59,58,61,60,63,62)
,
generator no.    7 : (0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,16,19,18,21,20,23,22,25,24,27,26,29,28,31,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,48,51,50,53,52,55,54,57,56,59,58,61,60,63,62)

as cycles:
sizeOutG : 128,
sizeInnG : 16,
sizeAutG : 2048,
epimorphism : (a, b, c),
generator no.    1 : (4,6)(5,7)(12,14)(13,15)(16,24,18,26)(17,25,19,27)(20,30,22,28)(21,31,23,29)(36,38)(37,39)(44,46)(45,47)(48,56,50,58)(49,57,51,59)(52,62,54,60)(53,63,55,61)
,
generator no.    2 : (4,6)(5,7)(12,14)(13,15)(16,24,18,26)(17,25,19,27)(20,30,22,28)(21,31,23,29)(32,40,34,42)(33,41,35,43)(36,46,38,44)(37,47,39,45)(48,50)(49,51)(56,58)(57,59)
,
generator no.    3 : (2,3)(6,7)(8,12,9,13)(10,15,11,14)(18,19)(22,23)(24,28,25,29)(26,31,27,30)(34,35)(38,39)(40,44,41,45)(42,47,43,46)(50,51)(54,55)(56,60,57,61)(58,63,59,62)
,
generator no.    4 : (4,5)(6,7)(12,13)(14,15)(16,20)(17,21)(18,22)(19,23)(24,28)(25,29)(26,30)(27,31)(36,37)(38,39)(44,45)(46,47)(48,52)(49,53)(50,54)(51,55)(56,60)(57,61)(58,62)(59,63)
,
generator no.    5 : (16,18)(17,19)(20,22)(21,23)(24,26)(25,27)(28,30)(29,31)(48,50)(49,51)(52,54)(53,55)(56,58)(57,59)(60,62)(61,63)
,
generator no.    6 : (8,9)(10,11)(12,13)(14,15)(24,25)(26,27)(28,29)(30,31)(40,41)(42,43)(44,45)(46,47)(56,57)(58,59)(60,61)(62,63)
,
generator no.    7 : (16,17)(18,19)(20,21)(22,23)(24,25)(26,27)(28,29)(30,31)(48,49)(50,51)(52,53)(54,55)(56,57)(58,59)(60,61)(62,63)

GAP style
SISYPHOS.SISISO := rec (
sizeOutG := 128,
sizeInnG := 16,
sizeAutG := 2048,
epimorphism := [Igs(g173pc)[1], Igs(g173pc)[2], Igs(g173pc)[3]],
generators := [
      [Igs(g173pc)[1], Igs(g173pc)[2]*Igs(g173pc)[3], Igs(g173pc)[3], Igs(g173pc)[4]*Igs(g173pc)[5], Igs(g173pc)[5], Igs(g173pc)[6]],
      [Igs(g173pc)[1]*Igs(g173pc)[3], Igs(g173pc)[2]*Igs(g173pc)[3], Igs(g173pc)[3], Igs(g173pc)[4]*Igs(g173pc)[5], Igs(g173pc)[5], Igs(g173pc)[6]],
      [Igs(g173pc)[1], Igs(g173pc)[2], Igs(g173pc)[3]*Igs(g173pc)[4], Igs(g173pc)[4], Igs(g173pc)[5]*Igs(g173pc)[6], Igs(g173pc)[6]],
      [Igs(g173pc)[1], Igs(g173pc)[2]*Igs(g173pc)[4], Igs(g173pc)[3], Igs(g173pc)[4]*Igs(g173pc)[6], Igs(g173pc)[5], Igs(g173pc)[6]],
      [Igs(g173pc)[1], Igs(g173pc)[2]*Igs(g173pc)[5], Igs(g173pc)[3], Igs(g173pc)[4], Igs(g173pc)[5], Igs(g173pc)[6]],
      [Igs(g173pc)[1], Igs(g173pc)[2], Igs(g173pc)[3]*Igs(g173pc)[6], Igs(g173pc)[4], Igs(g173pc)[5], Igs(g173pc)[6]],
      [Igs(g173pc)[1], Igs(g173pc)[2]*Igs(g173pc)[6], Igs(g173pc)[3], Igs(g173pc)[4], Igs(g173pc)[5], Igs(g173pc)[6]]] );
compute automorphisms using only pc-presentation
sizeOutG : 128,
sizeInnG : 16,
sizeAutG : 2048,
generator no.    1 : (a, b*c, c),
generator no.    2 : (a*c, b*c, c),
generator no.    3 : (a, b, c*d),
generator no.    4 : (a, b*d, c),
generator no.    5 : (a, b*e, c),
generator no.    6 : (a, b, c*f),
generator no.    7 : (a, b*f, c)
compute automorphisms using other minimal presenation
sizeOutG : 128,
sizeInnG : 16,
sizeAutG : 2048,
epimorphism : (b, c, a),
generator no.    1 : (a, b*c, c),
generator no.    2 : (a*c, b*c, c),
generator no.    3 : (a, b, c*d),
generator no.    4 : (a, b*d, c),
generator no.    5 : (a, b*e, c),
generator no.    6 : (a, b, c*f),
generator no.    7 : (a, b*f, c)
compute automorphisms using non minimal presenation
sizeOutG : 128,
sizeInnG : 16,
sizeAutG : 2048,
epimorphism : (b, c, a, f),
generator no.    1 : (a, b*c, c),
generator no.    2 : (a*c, b*c, c),
generator no.    3 : (a, b, c*d),
generator no.    4 : (a, b*d, c),
generator no.    5 : (a, b*e, c),
generator no.    6 : (a, b, c*f),
generator no.    7 : (a, b*f, c)
checking group g2 of order 3^37 and class 10, using canonical presentation
sizeOutG : 12*3^37,
sizeInnG : 3^26,
sizeAutG : 12*3^63,
epimorphism : (a1, a2),
generator no.    1 : (a1^2, a2),
generator no.    2 : (a1, a1^2*a2^2),
generator no.    3 : (a1, a2*a5),
generator no.    4 : (a1*a4, a2),
generator no.    5 : (a1, a2*a4),
generator no.    6 : (a1, a2*a9),
generator no.    7 : (a1*a6, a2),
generator no.    8 : (a1, a2*a8),
generator no.    9 : (a1*a8, a2),
generator no.   10 : (a1, a2*a13),
generator no.   11 : (a1*a10, a2),
generator no.   12 : (a1, a2*a12),
generator no.   13 : (a1*a12, a2),
generator no.   14 : (a1, a2*a17),
generator no.   15 : (a1*a14, a2),
generator no.   16 : (a1, a2*a16),
generator no.   17 : (a1*a16, a2),
generator no.   18 : (a1, a2*a21),
generator no.   19 : (a1*a18, a2),
generator no.   20 : (a1, a2*a20),
generator no.   21 : (a1*a20, a2),
generator no.   22 : (a1, a2*a25),
generator no.   23 : (a1*a22, a2),
generator no.   24 : (a1, a2*a24),
generator no.   25 : (a1*a24, a2),
generator no.   26 : (a1, a2*a29),
generator no.   27 : (a1*a26, a2),
generator no.   28 : (a1, a2*a28),
generator no.   29 : (a1*a28, a2),
generator no.   30 : (a1, a2*a33),
generator no.   31 : (a1*a30, a2),
generator no.   32 : (a1, a2*a32),
generator no.   33 : (a1*a32, a2),
generator no.   34 : (a1*a33, a2),
generator no.   35 : (a1, a2*a37),
generator no.   36 : (a1, a2*a36),
generator no.   37 : (a1*a37, a2),
generator no.   38 : (a1*a36, a2),
generator no.   39 : (a1*a34, a2)
checking group g2 of order 3^37 and class 10, using twisted presentation
sizeOutG : 12*3^37,
sizeInnG : 3^26,
sizeAutG : 12*3^63,
epimorphism : (a1^2*a2, a1^2),
generator no.    1 : (a1^2, a2),
generator no.    2 : (a1, a1^2*a2^2),
generator no.    3 : (a1, a2*a5),
generator no.    4 : (a1*a4, a2),
generator no.    5 : (a1, a2*a4),
generator no.    6 : (a1, a2*a9),
generator no.    7 : (a1*a6, a2),
generator no.    8 : (a1, a2*a8),
generator no.    9 : (a1*a8, a2),
generator no.   10 : (a1, a2*a13),
generator no.   11 : (a1*a10, a2),
generator no.   12 : (a1, a2*a12),
generator no.   13 : (a1*a12, a2),
generator no.   14 : (a1, a2*a17),
generator no.   15 : (a1*a14, a2),
generator no.   16 : (a1, a2*a16),
generator no.   17 : (a1*a16, a2),
generator no.   18 : (a1, a2*a21),
generator no.   19 : (a1*a18, a2),
generator no.   20 : (a1, a2*a20),
generator no.   21 : (a1*a20, a2),
generator no.   22 : (a1, a2*a25),
generator no.   23 : (a1*a22, a2),
generator no.   24 : (a1, a2*a24),
generator no.   25 : (a1*a24, a2),
generator no.   26 : (a1, a2*a29),
generator no.   27 : (a1*a26, a2),
generator no.   28 : (a1, a2*a28),
generator no.   29 : (a1*a28, a2),
generator no.   30 : (a1, a2*a33),
generator no.   31 : (a1*a30, a2),
generator no.   32 : (a1, a2*a32),
generator no.   33 : (a1*a32, a2),
generator no.   34 : (a1*a33, a2),
generator no.   35 : (a1, a2*a37),
generator no.   36 : (a1, a2*a36),
generator no.   37 : (a1*a37, a2),
generator no.   38 : (a1*a36, a2),
generator no.   39 : (a1*a34, a2)
checking group ob2 of order 2^53 and class 14, using minimal presentation
sizeOutG : 1*2^28,
sizeInnG : 2^42,
sizeAutG : 1*2^70,
epimorphism : (g1, g2),
generator no.    1 : (g1*a19, g2*a79*a89*a93),
generator no.    2 : (g1*a26, g2),
generator no.    3 : (g1*a23*a35, g2*a79*a85*a89*a93),
generator no.    4 : (g1*a33, g2),
generator no.    5 : (g1*a30*a53, g2*a50*a59*a72*a93),
generator no.    6 : (g1*a40, g2),
generator no.    7 : (g1*a34*a53*a60, g2*a59*a70*a72*a79*a85*a89*a91),
generator no.    8 : (g1*a37*a60*a73, g2*a79*a89*a91),
generator no.    9 : (g1*a49, g2),
generator no.   10 : (g1*a46, g2*a79*a89*a91*a93),
generator no.   11 : (g1*a58, g2),
generator no.   12 : (g1*a55, g2),
generator no.   13 : (g1*a67, g2),
generator no.   14 : (g1*a59, g2*a93),
generator no.   15 : (g1*a64, g2),
generator no.   16 : (g1*a75, g2),
generator no.   17 : (g1*a72, g2*a91*a93),
generator no.   18 : (g1*a84, g2*a93),
generator no.   19 : (g1*a82, g2*a91),
generator no.   20 : (g1*a96, g2),
generator no.   21 : (g1*a89, g2),
generator no.   22 : (g1*a90, g2),
generator no.   23 : (g1, g2*a105),
generator no.   24 : (g1, g2*a101),
generator no.   25 : (g1, g2*a99),
generator no.   26 : (g1*a104, g2),
generator no.   27 : (g1*a102, g2),
generator no.   28 : (g1*a101, g2)
checking group ob2 of order 2^53 and class 14, using 4-generator presentation
sizeOutG : 1*2^28,
sizeInnG : 2^42,
sizeAutG : 1*2^70,
epimorphism : (g1, g2, a26*a40*a58, a40*a49*a67),
generator no.    1 : (g1*a19, g2*a79*a89*a93),
generator no.    2 : (g1*a26, g2),
generator no.    3 : (g1*a23*a35, g2*a79*a85*a89*a93),
generator no.    4 : (g1*a33, g2),
generator no.    5 : (g1*a30*a53, g2*a50*a59*a72*a93),
generator no.    6 : (g1*a40, g2),
generator no.    7 : (g1*a34*a53*a60, g2*a59*a70*a72*a79*a85*a89*a91),
generator no.    8 : (g1*a37*a60*a73, g2*a79*a89*a91),
generator no.    9 : (g1*a49, g2),
generator no.   10 : (g1*a46, g2*a79*a89*a91*a93),
generator no.   11 : (g1*a58, g2),
generator no.   12 : (g1*a55, g2),
generator no.   13 : (g1*a67, g2),
generator no.   14 : (g1*a59, g2*a93),
generator no.   15 : (g1*a64, g2),
generator no.   16 : (g1*a75, g2),
generator no.   17 : (g1*a72, g2*a91*a93),
generator no.   18 : (g1*a84, g2*a93),
generator no.   19 : (g1*a82, g2*a91),
generator no.   20 : (g1*a96, g2),
generator no.   21 : (g1*a89, g2),
generator no.   22 : (g1*a90, g2),
generator no.   23 : (g1, g2*a105),
generator no.   24 : (g1, g2*a101),
generator no.   25 : (g1, g2*a99),
generator no.   26 : (g1*a104, g2),
generator no.   27 : (g1*a102, g2),
generator no.   28 : (g1*a101, g2)
computing automorphism group of FG_173
limit: 12, max_id: 12
order of automorphism group: 2475880078570760549798248448 (4*2^89)
group rings are isomorphic modulo I^12

class 1
    rho no. 0:
      gen[0]: 1 + A
      gen[1]: 1 + C + B + BC
      gen[2]: 1 + C
    rho no. 1:
      gen[0]: 1 + C + A + AC
      gen[1]: 1 + C + B + BC
      gen[2]: 1 + C

class 2
    rho no. 2:
      gen[0]: 1 + A + E + AE
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 3:
      gen[0]: 1 + A + D + AD + F + AF + DF + ADF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 4:
      gen[0]: 1 + A
      gen[1]: 1 + B + D + BD
      gen[2]: 1 + C + E + CE
    rho no. 5:
      gen[0]: 1 + A
      gen[1]: 1 + B + F + BF
      gen[2]: 1 + C + D + CD + F + CF + DF + CDF
    rho no. 6:
      gen[0]: 1 + A
      gen[1]: 1 + B + E + BE
      gen[2]: 1 + C
    rho no. 7:
      gen[0]: 1 + A
      gen[1]: 1 + B + D + BD + F + BF + DF + BDF
      gen[2]: 1 + C + F + CF

class 3
    rho no. 8:
      gen[0]: 1 + A + AD + ABD
      gen[1]: 1 + B + BD + ABD + ABF
      gen[2]: 1 + C + CD + BCE + BCD + ABE + ADE + ABCE + BCDE + ACDE + ABCDE + ABCEF
    rho no. 9:
      gen[0]: 1 + A + CE
      gen[1]: 1 + B + ACE + ABCE + ACEF + ABCEF
      gen[2]: 1 + C
    rho no. 10:
      gen[0]: 1 + A + AE + ACE
      gen[1]: 1 + B + BE + BCE + BCD + ACD + ADE + ABCD + ACF + ACDE + AEF + ABCDE + ACEF + ACDF
      gen[2]: 1 + C + ACE + ACDE + ABCDE
    rho no. 11:
      gen[0]: 1 + A + AE
      gen[1]: 1 + B + AE + ABE + AEF + ABEF
      gen[2]: 1 + C
    rho no. 12:
      gen[0]: 1 + A + AE
      gen[1]: 1 + B + CD + BCD + ACE + ACD + ADE + ABCE + ABCD + ACDE + ABDE + ABCDE + ACEF + ABCEF
      gen[2]: 1 + C + ACE
    rho no. 13:
      gen[0]: 1 + A
      gen[1]: 1 + B + BD + AD + ABD + AF
      gen[2]: 1 + C + AE + ACE + AEF + BCEF + ACEF + ACDF + ABEF + ABCEF + ABCDF
    rho no. 14:
      gen[0]: 1 + A + ACE
      gen[1]: 1 + B + CE + BCE + ACE + ABCE + ACEF + ABCEF
      gen[2]: 1 + C
    rho no. 15:
      gen[0]: 1 + A + CD + BE + DE + BCE + BCD + ACD + ABE + ADE + ABCE + ABCD + DEF + BCEF + CDEF + ADEF
 + ABCEF + BCDEF + ACDEF + ABCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 16:
      gen[0]: 1 + A + AE + ACE
      gen[1]: 1 + B + CD + BCD + ACD + ADE + ABCD + ACDE + ABDE + ABCDE
      gen[2]: 1 + C + CE + ACE
    rho no. 17:
      gen[0]: 1 + A + AD + ABD + AF + ABDF
      gen[1]: 1 + B + BD + F + ABD + ADF
      gen[2]: 1 + C + BE + BCE + ABE + ADE + ABCE + ACDE + ABDE + ABCDE + ADEF + ACDEF

class 4
    rho no. 18:
      gen[0]: 1 + A + ACE
      gen[1]: 1 + B + ACE + ABCE + ACEF + ABCEF
      gen[2]: 1 + C
    rho no. 19:
      gen[0]: 1 + A + F + AF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 20:
      gen[0]: 1 + A + DE + CF + CDE + ADE + EF + ACF + ACDE + CDF + AEF + ACDF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 21:
      gen[0]: 1 + A
      gen[1]: 1 + B + DE + BDE + ADE + ABDE
      gen[2]: 1 + C
    rho no. 22:
      gen[0]: 1 + A + AF + ADF
      gen[1]: 1 + B + F + BF + AF + ABF + ADF + ABDF
      gen[2]: 1 + C + DE + CDE + ADE + ACDE + AEF + ACEF + ADEF + ACDEF
    rho no. 23:
      gen[0]: 1 + A + ACD + ABE + ADE + ABCE + ABCD + ACDE + ABDE + AEF + ABCDE + ADEF + ACDEF + ABCDEF
      gen[1]: 1 + B + BCD + CF + ABCD + ACF + AEF + ACEF + ACDEF + ABDEF
      gen[2]: 1 + C + BCE + ABCE
    rho no. 24:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + F + CF
    rho no. 25:
      gen[0]: 1 + A
      gen[1]: 1 + B + F + BF
      gen[2]: 1 + C

class 5
    rho no. 26:
      gen[0]: 1 + A + AF
      gen[1]: 1 + B + BF + ABF
      gen[2]: 1 + C + CF + BCDE + ABDE + AEF + ABCDE + BCEF + ACEF + ABEF + ABCEF + ABCDF
    rho no. 27:
      gen[0]: 1 + A
      gen[1]: 1 + B + BF + AF
      gen[2]: 1 + C + ADE + ACDE + ABDE + AEF + ABCDE + BCEF + ACEF + ACDF + ABEF + ABCEF + ABCDF
    rho no. 28:
      gen[0]: 1 + A + ADE + ABDE
      gen[1]: 1 + B + CF + ACF + ACDE + AEF + ACDF
      gen[2]: 1 + C + ACDE + ABCDE
    rho no. 29:
      gen[0]: 1 + A + ADE + ABDE
      gen[1]: 1 + B + ADE + AEF
      gen[2]: 1 + C
    rho no. 30:
      gen[0]: 1 + A + CF + BDE + EF + BCDE + ACF + ABDE + CEF + CDF + AEF + ABCDE + ACEF + ACDF + BCDEF + ABCDEF

      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 31:
      gen[0]: 1 + A + CDE + BCDE + ACDE + ABCDE
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 32:
      gen[0]: 1 + A
      gen[1]: 1 + B + CDE + BCDE + ACDE + ABCDE
      gen[2]: 1 + C
    rho no. 33:
      gen[0]: 1 + A + ADE + ACF + ACDE + AEF + ACEF + ACDF + ADEF + ACDEF
      gen[1]: 1 + B + CF + BCF + ACF + ABCF + ADEF + ACDEF + ABDEF + ABCDEF
      gen[2]: 1 + C + CDE + ACDE
    rho no. 34:
      gen[0]: 1 + A + ADE + ABDE
      gen[1]: 1 + B + BDE + EF + ABDE + AEF
      gen[2]: 1 + C
    rho no. 35:
      gen[0]: 1 + A + AF + ADF
      gen[1]: 1 + B + BF + DF + ABF + ADF
      gen[2]: 1 + C + BDE + BCDE + ABDE + ABCDE + ADEF + ACDEF + ABDEF + ABCDEF

class 6
    rho no. 36:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + DF + ADF
    rho no. 37:
      gen[0]: 1 + A
      gen[1]: 1 + B + BCF + ACF + ABDE + AEF + ABCDE + ACEF + ABEF + ABCEF + ABCDF
      gen[2]: 1 + C + ACDE + ABCDE + ACEF
    rho no. 38:
      gen[0]: 1 + A
      gen[1]: 1 + B + DF
      gen[2]: 1 + C
    rho no. 39:
      gen[0]: 1 + A + ACDE + ABCDE
      gen[1]: 1 + B + ACDE + ACEF
      gen[2]: 1 + C
    rho no. 40:
      gen[0]: 1 + A + EF + AEF + DEF + ADEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 41:
      gen[0]: 1 + A + DF + BDF + ADF + ABDF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 42:
      gen[0]: 1 + A
      gen[1]: 1 + B + DF + BDF + ADF + ABDF
      gen[2]: 1 + C + EF + CEF + AEF + ACEF
    rho no. 43:
      gen[0]: 1 + A + AEF + ADEF
      gen[1]: 1 + B + EF + BEF + AEF + ABEF
      gen[2]: 1 + C
    rho no. 44:
      gen[0]: 1 + A + ACDE + ABCDE
      gen[1]: 1 + B + BCDE + CEF + ABCDE + ACEF
      gen[2]: 1 + C
    rho no. 45:
      gen[0]: 1 + A + ACF + ABDE + AEF + ABCDE + ACEF + ACDF + ADEF + ACDEF
      gen[1]: 1 + B + BCF + CDF + ABCF + ACDF
      gen[2]: 1 + C + BCDE + ABCDE

class 7
    rho no. 46:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + BDF + ABDF
    rho no. 47:
      gen[0]: 1 + A + BDF
      gen[1]: 1 + B
      gen[2]: 1 + C + ABDF + ABCDF
    rho no. 48:
      gen[0]: 1 + A + ADF
      gen[1]: 1 + B
      gen[2]: 1 + C + CDF + ACDF
    rho no. 49:
      gen[0]: 1 + A + AEF
      gen[1]: 1 + B + AEF + ABEF
      gen[2]: 1 + C
    rho no. 50:
      gen[0]: 1 + A
      gen[1]: 1 + B + ADF
      gen[2]: 1 + C + AEF + BCEF + ACEF + ACDF + ABEF + ABCEF + ABCDF
    rho no. 51:
      gen[0]: 1 + A + ADF
      gen[1]: 1 + B
      gen[2]: 1 + C + ADF + ACDF
    rho no. 52:
      gen[0]: 1 + A
      gen[1]: 1 + B + BDF
      gen[2]: 1 + C
    rho no. 53:
      gen[0]: 1 + A + AEF
      gen[1]: 1 + B + CDF + ACEF + ABEF
      gen[2]: 1 + C
    rho no. 54:
      gen[0]: 1 + A + CEF + DEF + ACEF + ADEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 55:
      gen[0]: 1 + A + CDF + BEF + DEF + BCEF + BCDF + ACDF + ABEF + CDEF + BDEF + ADEF + ABCEF + ABCDF + BCDEF + ACDEF
 + ABDEF + ABCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 56:
      gen[0]: 1 + A + AEF + ACEF
      gen[1]: 1 + B + CDF + BCDF + ACDF + ABCDF
      gen[2]: 1 + C + CEF + ACEF
    rho no. 57:
      gen[0]: 1 + A + ACEF + ACDEF
      gen[1]: 1 + B + CEF + BCEF + ACEF + ABCEF
      gen[2]: 1 + C
    rho no. 58:
      gen[0]: 1 + A + ADF + ABDF
      gen[1]: 1 + B + BDF + ABDF
      gen[2]: 1 + C + BEF + BCEF + ABEF + ABCEF
    rho no. 59:
      gen[0]: 1 + A + AEF + ADEF
      gen[1]: 1 + B + BEF + DEF + ABEF + ADEF
      gen[2]: 1 + C

class 8
    rho no. 60:
      gen[0]: 1 + A + ABDF
      gen[1]: 1 + B
      gen[2]: 1 + C + BCDF + ABCDF
    rho no. 61:
      gen[0]: 1 + A + ACEF
      gen[1]: 1 + B + ACEF + ABCEF
      gen[2]: 1 + C
    rho no. 62:
      gen[0]: 1 + A + ACDF + ABEF + ABCEF + ABCDF
      gen[1]: 1 + B + BCDF + ABDF + ABCDF
      gen[2]: 1 + C + ACDF + ABEF + ABCDF
    rho no. 63:
      gen[0]: 1 + A
      gen[1]: 1 + B + BCDF + ACDF + ABEF + ABCEF + ABCDF
      gen[2]: 1 + C + ACEF
    rho no. 64:
      gen[0]: 1 + A + ABDF
      gen[1]: 1 + B
      gen[2]: 1 + C + ABDF + ABCDF
    rho no. 65:
      gen[0]: 1 + A + DEF + CDEF + ADEF + ACDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 66:
      gen[0]: 1 + A
      gen[1]: 1 + B + DEF + BDEF + ADEF + ABDEF
      gen[2]: 1 + C
    rho no. 67:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + DEF + CDEF + ADEF + ACDEF
    rho no. 68:
      gen[0]: 1 + A + ACDF + ABEF + ADEF + ABCEF + ABCDF + ACDEF + ABDEF + ABCDEF
      gen[1]: 1 + B + BCDF + ABCDF
      gen[2]: 1 + C + BCEF + ABCEF
    rho no. 69:
      gen[0]: 1 + A + ACEF + ACDEF
      gen[1]: 1 + B + BCEF + CDEF + ABCEF + ACDEF
      gen[2]: 1 + C

class 9
    rho no. 70:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + ADEF
    rho no. 71:
      gen[0]: 1 + A + ADEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 72:
      gen[0]: 1 + A
      gen[1]: 1 + B + ADEF
      gen[2]: 1 + C
    rho no. 73:
      gen[0]: 1 + A + BDEF + BCDEF + ABDEF + ABCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 74:
      gen[0]: 1 + A + CDEF + BCDEF + ACDEF + ABCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 75:
      gen[0]: 1 + A
      gen[1]: 1 + B + CDEF + BCDEF + ACDEF + ABCDEF
      gen[2]: 1 + C
    rho no. 76:
      gen[0]: 1 + A + ADEF + ACDEF
      gen[1]: 1 + B
      gen[2]: 1 + C + CDEF + ACDEF
    rho no. 77:
      gen[0]: 1 + A + ADEF + ABDEF
      gen[1]: 1 + B + BDEF + ABDEF
      gen[2]: 1 + C
    rho no. 78:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + BDEF + BCDEF + ABDEF + ABCDEF

class 10
    rho no. 79:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + ABDEF
    rho no. 80:
      gen[0]: 1 + A + BCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 81:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + ACDEF
    rho no. 82:
      gen[0]: 1 + A + ACDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 83:
      gen[0]: 1 + A
      gen[1]: 1 + B + ABDEF
      gen[2]: 1 + C
    rho no. 84:
      gen[0]: 1 + A + ABDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
    rho no. 85:
      gen[0]: 1 + A
      gen[1]: 1 + B + ACDEF
      gen[2]: 1 + C
    rho no. 86:
      gen[0]: 1 + A + ACDEF + ABCDEF
      gen[1]: 1 + B + BCDEF + ABCDEF
      gen[2]: 1 + C
    rho no. 87:
      gen[0]: 1 + A + ABDEF + ABCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C + BCDEF + ABCDEF

class 11
    rho no. 88:
      gen[0]: 1 + A
      gen[1]: 1 + B
      gen[2]: 1 + C + ABCDEF
    rho no. 89:
      gen[0]: 1 + A
      gen[1]: 1 + B + ABCDEF
      gen[2]: 1 + C
    rho no. 90:
      gen[0]: 1 + A + ABCDEF
      gen[1]: 1 + B
      gen[2]: 1 + C
epimorphism:
   image( h.0 ) : 1 + A
   image( h.1 ) : 1 + B
   image( h.2 ) : 1 + C

   modulo I^2 - dim(id): 0, dim(inn): 0, num(aut): 4
   modulo I^3 - dim(id): 0, dim(inn): 3, dim(aut): 3
   modulo I^4 - dim(id): 7, dim(inn): 3, dim(aut): 0
   modulo I^5 - dim(id): 1, dim(inn): 5, dim(aut): 2
   modulo I^6 - dim(id): 4, dim(inn): 6, dim(aut): 0
   modulo I^7 - dim(id): 4, dim(inn): 6, dim(aut): 0
   modulo I^8 - dim(id): 8, dim(inn): 6, dim(aut): 0
   modulo I^9 - dim(id): 5, dim(inn): 5, dim(aut): 0
   modulo I^10 - dim(id): 3, dim(inn): 6, dim(aut): 0
   modulo I^11 - dim(id): 7, dim(inn): 2, dim(aut): 0
   modulo I^12 - dim(id): 3, dim(inn): 0, dim(aut): 0
computing presentation for V(FG_173)
#I   g1 <-> 1 + C
#I   g2 <-> 1 + B
#I   g3 <-> 1 + A
#I   g4 <-> 1 + E
#I   g5 <-> 1 + D
#I   g6 <-> 1 + BC
#I   g7 <-> 1 + AC
#I   g8 <-> 1 + AB
#I   g9 <-> 1 + CE
#I  g10 <-> 1 + CD
#I  g11 <-> 1 + BE
#I  g12 <-> 1 + BD
#I  g13 <-> 1 + AE
#I  g14 <-> 1 + AD
#I  g15 <-> 1 + ABC
#I  g16 <-> 1 + F
#I  g17 <-> 1 + DE
#I  g18 <-> 1 + BCE
#I  g19 <-> 1 + BCD
#I  g20 <-> 1 + ACE
#I  g21 <-> 1 + ACD
#I  g22 <-> 1 + ABE
#I  g23 <-> 1 + ABD
#I  g24 <-> 1 + CF
#I  g25 <-> 1 + CDE
#I  g26 <-> 1 + BF
#I  g27 <-> 1 + BDE
#I  g28 <-> 1 + AF
#I  g29 <-> 1 + ADE
#I  g30 <-> 1 + ABCE
#I  g31 <-> 1 + ABCD
#I  g32 <-> 1 + EF
#I  g33 <-> 1 + DF
#I  g34 <-> 1 + BCF
#I  g35 <-> 1 + BCDE
#I  g36 <-> 1 + ACF
#I  g37 <-> 1 + ACDE
#I  g38 <-> 1 + ABF
#I  g39 <-> 1 + ABDE
#I  g40 <-> 1 + CEF
#I  g41 <-> 1 + CDF
#I  g42 <-> 1 + BEF
#I  g43 <-> 1 + BDF
#I  g44 <-> 1 + AEF
#I  g45 <-> 1 + ADF
#I  g46 <-> 1 + ABCF
#I  g47 <-> 1 + ABCDE
#I  g48 <-> 1 + DEF
#I  g49 <-> 1 + BCEF
#I  g50 <-> 1 + BCDF
#I  g51 <-> 1 + ACEF
#I  g52 <-> 1 + ACDF
#I  g53 <-> 1 + ABEF
#I  g54 <-> 1 + ABDF
#I  g55 <-> 1 + CDEF
#I  g56 <-> 1 + BDEF
#I  g57 <-> 1 + ADEF
#I  g58 <-> 1 + ABCEF
#I  g59 <-> 1 + ABCDF
#I  g60 <-> 1 + BCDEF
#I  g61 <-> 1 + ACDEF
#I  g62 <-> 1 + ABDEF
#I  g63 <-> 1 + ABCDEF
#I
g1 := AbstractGenerator ( "g1" );;
g2 := AbstractGenerator ( "g2" );;
g3 := AbstractGenerator ( "g3" );;
g4 := AbstractGenerator ( "g4" );;
g5 := AbstractGenerator ( "g5" );;
g6 := AbstractGenerator ( "g6" );;
g7 := AbstractGenerator ( "g7" );;
g8 := AbstractGenerator ( "g8" );;
g9 := AbstractGenerator ( "g9" );;
g10 := AbstractGenerator ( "g10" );;
g11 := AbstractGenerator ( "g11" );;
g12 := AbstractGenerator ( "g12" );;
g13 := AbstractGenerator ( "g13" );;
g14 := AbstractGenerator ( "g14" );;
g15 := AbstractGenerator ( "g15" );;
g16 := AbstractGenerator ( "g16" );;
g17 := AbstractGenerator ( "g17" );;
g18 := AbstractGenerator ( "g18" );;
g19 := AbstractGenerator ( "g19" );;
g20 := AbstractGenerator ( "g20" );;
g21 := AbstractGenerator ( "g21" );;
g22 := AbstractGenerator ( "g22" );;
g23 := AbstractGenerator ( "g23" );;
g24 := AbstractGenerator ( "g24" );;
g25 := AbstractGenerator ( "g25" );;
g26 := AbstractGenerator ( "g26" );;
g27 := AbstractGenerator ( "g27" );;
g28 := AbstractGenerator ( "g28" );;
g29 := AbstractGenerator ( "g29" );;
g30 := AbstractGenerator ( "g30" );;
g31 := AbstractGenerator ( "g31" );;
g32 := AbstractGenerator ( "g32" );;
g33 := AbstractGenerator ( "g33" );;
g34 := AbstractGenerator ( "g34" );;
g35 := AbstractGenerator ( "g35" );;
g36 := AbstractGenerator ( "g36" );;
g37 := AbstractGenerator ( "g37" );;
g38 := AbstractGenerator ( "g38" );;
g39 := AbstractGenerator ( "g39" );;
g40 := AbstractGenerator ( "g40" );;
g41 := AbstractGenerator ( "g41" );;
g42 := AbstractGenerator ( "g42" );;
g43 := AbstractGenerator ( "g43" );;
g44 := AbstractGenerator ( "g44" );;
g45 := AbstractGenerator ( "g45" );;
g46 := AbstractGenerator ( "g46" );;
g47 := AbstractGenerator ( "g47" );;
g48 := AbstractGenerator ( "g48" );;
g49 := AbstractGenerator ( "g49" );;
g50 := AbstractGenerator ( "g50" );;
g51 := AbstractGenerator ( "g51" );;
g52 := AbstractGenerator ( "g52" );;
g53 := AbstractGenerator ( "g53" );;
g54 := AbstractGenerator ( "g54" );;
g55 := AbstractGenerator ( "g55" );;
g56 := AbstractGenerator ( "g56" );;
g57 := AbstractGenerator ( "g57" );;
g58 := AbstractGenerator ( "g58" );;
g59 := AbstractGenerator ( "g59" );;
g60 := AbstractGenerator ( "g60" );;
g61 := AbstractGenerator ( "g61" );;
g62 := AbstractGenerator ( "g62" );;
g63 := AbstractGenerator ( "g63" );;
V := AgGroupFpGroup ( rec (
     generators := [g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12,g13,g14,g15,g16,g17,g18,g19,g20,g21,g22,g23,g24,g25,g26,g27,g28,g29,g30,g31,g32,g33,g34,g35,g36,g37,g38,g39,g40,g41,g42,g43,g44,g45,g46,g47,g48,g49,g50,g51,g52,g53,g54,g55,g56,g57,g58,g59,g60,g61,g62,g63],
     relators := [
g1^2/(g4),
g2^2/(g5),
g3^2,
g4^2,
g5^2/(g16),
g6^2/(g17),
g7^2/(g20),
g8^2/(g23*g28),
g9^2,
g10^2/(g32),
g11^2,
g12^2/(g33),
g13^2,
g14^2/(g45),
g15^2/(g37*g39*g44*g47*g51),
g16^2,
g17^2,
g18^2,
g19^2/(g48),
g20^2,
g21^2/(g51*g57*g61),
g22^2,
g23^2/(g54),
g24^2,
g25^2,
g26^2,
g27^2,
g28^2,
g29^2,
g30^2,
g31^2/(g61*g62*g63),
g32^2,
g33^2,
g34^2,
g35^2,
g36^2,
g37^2,
g38^2,
g39^2,
g40^2,
g41^2,
g42^2,
g43^2,
g44^2,
g45^2,
g46^2,
g47^2,
g48^2,
g49^2,
g50^2,
g51^2,
g52^2,
g53^2,
g54^2,
g55^2,
g56^2,
g57^2,
g58^2,
g59^2,
g60^2,
g61^2,
g62^2,
g63^2,
Comm(g3,g1)/(g4),
Comm(g3,g2)/(g5*g16),
Comm(g5,g3)/(g16),
Comm(g6,g3)/(g10*g11*g17*g18*g19*g32*g35*g42*g55),
Comm(g7,g1)/(g9*g20),
Comm(g7,g2)/(g10*g21*g24*g29*g36*g37*g40*g41*g51*g52*g55*g61),
Comm(g7,g3)/(g13*g20),
Comm(g7,g5)/(g24*g36*g44*g51),
Comm(g7,g6)/(g17*g18*g25*g27*g29*g30*g39*g47*g55*g61),
Comm(g8,g1)/(g11*g22*g29*g39*g57),
Comm(g8,g2)/(g12*g23*g26*g28),
Comm(g8,g3)/(g14*g23*g28),
Comm(g8,g5)/(g26*g38*g45*g54),
Comm(g8,g6)/(g17*g19*g24*g25*g27*g29*g31*g37*g47*g49*g51*g52*g53*g55*g56*g57*g61),
Comm(g8,g7)/(g21*g22*g30*g31*g36*g37*g39*g44*g53*g59*g61*g62*g63),
Comm(g10,g3)/(g17*g24*g25*g32*g41*g55),
Comm(g10,g7)/(g25*g32*g37*g40*g44*g48*g57*g61),
Comm(g10,g8)/(g27*g34*g35*g39*g42*g44*g46*g47*g50*g51*g52*g57*g58*g62),
Comm(g11,g3)/(g17*g27),
Comm(g11,g7)/(g25*g35*g37*g47),
Comm(g11,g8)/(g27*g32*g39*g57),
Comm(g12,g3)/(g16*g33*g43),
Comm(g12,g7)/(g24*g36*g41*g44*g50*g51*g52*g57*g59*g61*g62*g63),
Comm(g12,g8)/(g26*g38*g43*g45),
Comm(g13,g2)/(g17*g29*g32*g44*g48*g57),
Comm(g13,g5)/(g32*g44),
Comm(g13,g6)/(g25*g35*g37*g47),
Comm(g13,g8)/(g29*g39*g44*g62),
Comm(g13,g10)/(g40*g51*g55*g61),
Comm(g13,g12)/(g32*g44*g48*g56*g57*g62),
Comm(g14,g1)/(g17*g29*g44*g57),
Comm(g14,g2)/(g16*g28*g33),
Comm(g14,g3)/(g28*g45),
Comm(g14,g5)/(g33*g45),
Comm(g14,g6)/(g24*g27*g32*g34*g35*g36*g39*g44*g46*g47*g52*g53*g57*g58*g59*g62),
Comm(g14,g7)/(g29*g36*g37*g51*g52*g57),
Comm(g14,g8)/(g28*g45),
Comm(g14,g10)/(g32*g40*g41*g44*g48*g51*g52*g61),
Comm(g14,g11)/(g32*g42*g44*g53*g57*g62),
Comm(g14,g12)/(g33*g45),
Comm(g14,g13)/(g44*g57),
Comm(g15,g1)/(g18*g30),
Comm(g15,g2)/(g19*g31*g34*g44*g46*g50*g51*g53*g55*g56*g57*g58*g59*g60*g63),
Comm(g15,g3)/(g21*g22*g29*g30*g31*g37*g39*g44*g47*g57*g58*g61*g62),
Comm(g15,g5)/(g34*g46*g57*g61*g62*g63),
Comm(g15,g6)/(g25*g27*g32*g35*g37*g39*g44*g47*g51*g60),
Comm(g15,g7)/(g29*g37*g39*g47*g51*g61),
Comm(g15,g8)/(g29*g37*g39*g47*g51*g57),
Comm(g15,g10)/(g35*g42*g47*g49*g53*g56*g58*g61*g62*g63),
Comm(g15,g11)/(g35*g40*g47*g51),
Comm(g15,g12)/(g34*g46*g50*g57*g59*g61*g62*g63),
Comm(g15,g13)/(g37*g47),
Comm(g15,g14)/(g36*g39*g44*g47*g51*g53*g57*g58*g59*g61),
Comm(g17,g3)/(g32*g48),
Comm(g17,g7)/(g40*g51*g55*g61),
Comm(g17,g8)/(g42*g53*g56*g57),
Comm(g17,g14)/(g48*g57),
Comm(g17,g15)/(g49*g58*g60*g63),
Comm(g18,g3)/(g25*g35),
Comm(g18,g8)/(g35*g40*g47*g61),
Comm(g18,g14)/(g40*g49*g51*g58*g61*g63),
Comm(g19,g3)/(g24*g27*g32*g35*g40*g41*g48*g56),
Comm(g19,g7)/(g32*g35*g40*g44*g47*g48*g55*g57*g60*g63),
Comm(g19,g8)/(g32*g34*g40*g42*g44*g46*g49*g50*g51*g52*g56*g63),
Comm(g19,g13)/(g40*g51*g55*g61),
Comm(g19,g14)/(g41*g42*g48*g49*g52*g53*g55*g57*g58*g61*g62*g63),
Comm(g19,g15)/(g40*g42*g49*g51*g53*g56*g58*g60*g61*g62),
Comm(g20,g2)/(g25*g37*g40*g51*g55*g61),
Comm(g20,g5)/(g40*g51),
Comm(g20,g8)/(g37*g47*g51*g63),
Comm(g20,g12)/(g40*g51*g55*g60*g61*g63),
Comm(g20,g14)/(g51*g61),
Comm(g21,g1)/(g25*g37),
Comm(g21,g2)/(g24*g36*g41*g52*g57*g61),
Comm(g21,g3)/(g29*g36*g37*g44*g51*g52*g57*g61),
Comm(g21,g5)/(g41*g52),
Comm(g21,g6)/(g32*g35*g40*g42*g44*g47*g51*g53*g61*g63),
Comm(g21,g7)/(g44*g51*g57*g61),
Comm(g21,g8)/(g36*g39*g47*g52*g57*g62),
Comm(g21,g10)/(g40*g48*g51*g55*g57*g61),
Comm(g21,g11)/(g40*g49*g51*g58),
Comm(g21,g12)/(g41*g52),
Comm(g21,g13)/(g51*g61),
Comm(g21,g14)/(g44*g51*g57*g61),
Comm(g21,g15)/(g44*g51*g61*g62),
Comm(g21,g17)/(g55*g61),
Comm(g21,g19)/(g48*g49*g55*g57*g58*g61),
Comm(g22,g2)/(g27*g39*g42*g53*g56*g62),
Comm(g22,g3)/(g29*g39),
Comm(g22,g5)/(g42*g53),
Comm(g22,g6)/(g35*g40*g47*g51),
Comm(g22,g7)/(g37*g47),
Comm(g22,g10)/(g49*g58*g60*g63),
Comm(g22,g12)/(g42*g53*g56*g62),
Comm(g22,g14)/(g44*g62),
Comm(g22,g19)/(g49*g58*g60*g63),
Comm(g22,g21)/(g51*g63),
Comm(g23,g1)/(g27*g39*g57*g62),
Comm(g23,g2)/(g26*g38*g43*g54),
Comm(g23,g3)/(g28*g45),
Comm(g23,g5)/(g43*g54),
Comm(g23,g6)/(g32*g34*g40*g41*g42*g44*g46*g51*g52*g53*g62*g63),
Comm(g23,g7)/(g36*g39*g47*g51*g52*g61*g62*g63),
Comm(g23,g8)/(g45*g54),
Comm(g23,g10)/(g42*g49*g50*g53*g56*g58*g59*g62),
Comm(g23,g11)/(g42*g48*g53*g57),
Comm(g23,g12)/(g43*g54),
Comm(g23,g13)/(g44*g57),
Comm(g23,g14)/(g45*g54),
Comm(g23,g15)/(g44*g51*g52*g53*g57*g58*g59*g63),
Comm(g23,g17)/(g56*g62),
Comm(g23,g18)/(g49*g55*g58*g61),
Comm(g23,g19)/(g48*g50*g55*g56*g57*g59*g60*g61*g62*g63),
Comm(g23,g20)/(g51*g61),
Comm(g23,g21)/(g52*g53*g58*g59*g62*g63),
Comm(g23,g22)/(g57*g62),
Comm(g24,g3)/(g32*g40),
Comm(g24,g7)/(g40*g51),
Comm(g24,g8)/(g42*g49*g53*g57*g58*g61*g62*g63),
Comm(g24,g14)/(g48*g55*g57*g61),
Comm(g24,g15)/(g49*g58),
Comm(g24,g21)/(g55*g61),
Comm(g24,g23)/(g56*g60*g62*g63),
Comm(g25,g3)/(g40*g55),
Comm(g25,g8)/(g49*g58*g60*g61),
Comm(g25,g14)/(g55*g61),
Comm(g25,g23)/(g60*g63),
Comm(g26,g3)/(g33*g43),
Comm(g26,g7)/(g41*g50*g52*g57*g59*g61*g62*g63),
Comm(g26,g8)/(g43*g54),
Comm(g26,g13)/(g48*g56*g57*g62),
Comm(g26,g15)/(g50*g59),
Comm(g26,g20)/(g55*g60*g61*g63),
Comm(g26,g22)/(g56*g62),
Comm(g27,g3)/(g32*g48),
Comm(g27,g7)/(g40*g51*g55*g61),
Comm(g27,g8)/(g42*g53*g56*g57),
Comm(g27,g14)/(g48*g57),
Comm(g27,g15)/(g49*g58*g60*g63),
Comm(g27,g21)/(g55*g61),
Comm(g27,g23)/(g56*g62),
Comm(g28,g1)/(g32*g44),
Comm(g28,g2)/(g33*g45),
Comm(g28,g6)/(g41*g42*g48*g49*g50*g52*g53*g57*g58*g59),
Comm(g28,g7)/(g44*g51),
Comm(g28,g8)/(g45*g54),
Comm(g28,g10)/(g48*g55*g57*g61),
Comm(g28,g11)/(g48*g56*g57*g62),
Comm(g28,g15)/(g52*g53*g57*g58*g59*g61*g62*g63),
Comm(g28,g18)/(g55*g60*g61*g63),
Comm(g28,g19)/(g56*g60*g62*g63),
Comm(g28,g21)/(g57*g61),
Comm(g28,g22)/(g57*g62),
Comm(g29,g2)/(g32*g44*g48*g57),
Comm(g29,g3)/(g44*g57),
Comm(g29,g5)/(g48*g57),
Comm(g29,g6)/(g40*g49*g51*g58),
Comm(g29,g7)/(g51*g61),
Comm(g29,g8)/(g44*g57),
Comm(g29,g10)/(g55*g61),
Comm(g29,g12)/(g48*g57),
Comm(g29,g15)/(g51*g63),
Comm(g29,g19)/(g55*g61),
Comm(g29,g23)/(g57*g62),
Comm(g30,g2)/(g35*g47*g49*g58*g60*g63),
Comm(g30,g3)/(g37*g47),
Comm(g30,g5)/(g49*g58),
Comm(g30,g12)/(g49*g58*g60*g63),
Comm(g30,g14)/(g51*g63),
Comm(g30,g23)/(g61*g63),
Comm(g30,g26)/(g60*g63),
Comm(g30,g28)/(g61*g63),
Comm(g31,g1)/(g35*g47),
Comm(g31,g2)/(g34*g46*g50*g59),
Comm(g31,g3)/(g36*g39*g44*g47*g51*g52*g57*g61),
Comm(g31,g5)/(g50*g59),
Comm(g31,g6)/(g40*g42*g48*g49*g51*g53*g57*g58),
Comm(g31,g7)/(g44*g51*g57*g61),
Comm(g31,g8)/(g44*g51*g52*g53*g57*g58*g59*g61*g62*g63),
Comm(g31,g10)/(g49*g56*g58*g60*g62*g63),
Comm(g31,g11)/(g49*g55*g58*g61),
Comm(g31,g12)/(g50*g59),
Comm(g31,g13)/(g51*g61),
Comm(g31,g14)/(g52*g53*g57*g58*g59*g61),
Comm(g31,g15)/(g57*g61*g62*g63),
Comm(g31,g17)/(g60*g63),
Comm(g31,g19)/(g55*g56*g60*g61*g62*g63),
Comm(g31,g21)/(g57*g61*g62*g63),
Comm(g31,g22)/(g61*g63),
Comm(g31,g23)/(g57*g61*g62*g63),
Comm(g31,g24)/(g60*g63),
Comm(g31,g27)/(g60*g63),
Comm(g31,g28)/(g62*g63),
Comm(g31,g29)/(g61*g63),
Comm(g34,g3)/(g41*g42*g48*g49*g50*g55*g56*g60),
Comm(g34,g7)/(g48*g49*g55*g56*g57*g58*g60*g62),
Comm(g34,g8)/(g48*g50*g55*g56*g57*g59*g60*g61),
Comm(g34,g13)/(g55*g60*g61*g63),
Comm(g34,g14)/(g56*g60*g62*g63),
Comm(g34,g15)/(g55*g56*g60*g61*g62*g63),
Comm(g34,g21)/(g60*g63),
Comm(g34,g22)/(g60*g63),
Comm(g35,g3)/(g40*g55),
Comm(g35,g8)/(g49*g58*g60*g61),
Comm(g35,g14)/(g55*g61),
Comm(g35,g23)/(g60*g63),
Comm(g36,g1)/(g40*g51),
Comm(g36,g2)/(g41*g52),
Comm(g36,g3)/(g44*g51),
Comm(g36,g6)/(g48*g49*g55*g56*g57*g58*g61*g62),
Comm(g36,g8)/(g52*g53*g58*g59*g62*g63),
Comm(g36,g10)/(g55*g61),
Comm(g36,g11)/(g55*g60*g61*g63),
Comm(g36,g14)/(g57*g61),
Comm(g36,g15)/(g57*g61*g62*g63),
Comm(g36,g19)/(g60*g63),
Comm(g36,g22)/(g61*g63),
Comm(g36,g23)/(g62*g63),
Comm(g37,g2)/(g40*g51*g55*g61),
Comm(g37,g3)/(g51*g61),
Comm(g37,g5)/(g55*g61),
Comm(g37,g8)/(g51*g61),
Comm(g37,g12)/(g55*g61),
Comm(g37,g23)/(g61*g63),
Comm(g38,g1)/(g42*g53),
Comm(g38,g2)/(g43*g54),
Comm(g38,g3)/(g45*g54),
Comm(g38,g6)/(g48*g50*g55*g56*g57*g59*g61*g62),
Comm(g38,g7)/(g52*g53*g58*g59*g61*g63),
Comm(g38,g10)/(g56*g60*g62*g63),
Comm(g38,g11)/(g56*g62),
Comm(g38,g13)/(g57*g62),
Comm(g38,g15)/(g57*g61*g62*g63),
Comm(g38,g18)/(g60*g63),
Comm(g38,g20)/(g61*g63),
Comm(g38,g21)/(g62*g63),
Comm(g39,g2)/(g42*g53*g56*g62),
Comm(g39,g3)/(g44*g57),
Comm(g39,g5)/(g56*g62),
Comm(g39,g6)/(g49*g55*g58*g61),
Comm(g39,g7)/(g51*g61),
Comm(g39,g8)/(g57*g62),
Comm(g39,g10)/(g60*g63),
Comm(g39,g12)/(g56*g62),
Comm(g39,g14)/(g57*g62),
Comm(g39,g15)/(g61*g63),
Comm(g39,g19)/(g60*g63),
Comm(g39,g21)/(g61*g63),
Comm(g41,g3)/(g48*g55),
Comm(g41,g7)/(g55*g61),
Comm(g41,g8)/(g56*g60*g62*g63),
Comm(g41,g15)/(g60*g63),
Comm(g42,g3)/(g48*g56),
Comm(g42,g7)/(g55*g60*g61*g63),
Comm(g42,g8)/(g56*g62),
Comm(g42,g15)/(g60*g63),
Comm(g44,g2)/(g48*g57),
Comm(g44,g6)/(g55*g60*g61*g63),
Comm(g44,g8)/(g57*g62),
Comm(g44,g15)/(g61*g63),
Comm(g45,g1)/(g48*g57),
Comm(g45,g6)/(g56*g60*g62*g63),
Comm(g45,g7)/(g57*g61),
Comm(g45,g15)/(g62*g63),
Comm(g46,g1)/(g49*g58),
Comm(g46,g2)/(g50*g59),
Comm(g46,g3)/(g52*g53*g57*g58*g59*g61*g62*g63),
Comm(g46,g6)/(g55*g56*g60*g61*g62*g63),
Comm(g46,g7)/(g57*g61*g62*g63),
Comm(g46,g8)/(g57*g61*g62*g63),
Comm(g46,g10)/(g60*g63),
Comm(g46,g11)/(g60*g63),
Comm(g46,g13)/(g61*g63),
Comm(g46,g14)/(g62*g63),
Comm(g47,g2)/(g49*g58*g60*g63),
Comm(g47,g3)/(g51*g61),
Comm(g47,g5)/(g60*g63),
Comm(g47,g8)/(g61*g63),
Comm(g47,g12)/(g60*g63),
Comm(g47,g14)/(g61*g63),
Comm(g49,g3)/(g55*g60),
Comm(g49,g8)/(g60*g63),
Comm(g50,g3)/(g56*g60),
Comm(g50,g7)/(g60*g63),
Comm(g51,g2)/(g55*g61),
Comm(g51,g8)/(g61*g63),
Comm(g52,g1)/(g55*g61),
Comm(g52,g3)/(g57*g61),
Comm(g52,g6)/(g60*g63),
Comm(g52,g8)/(g62*g63),
Comm(g53,g2)/(g56*g62),
Comm(g53,g3)/(g57*g62),
Comm(g53,g6)/(g60*g63),
Comm(g53,g7)/(g61*g63),
Comm(g54,g1)/(g56*g62),
Comm(g54,g7)/(g62*g63),
Comm(g58,g2)/(g60*g63),
Comm(g58,g3)/(g61*g63),
Comm(g59,g1)/(g60*g63),
Comm(g59,g3)/(g62*g63)] ) );
g1 := V.1;;
g2 := V.2;;
g3 := V.3;;
g4 := V.4;;
g5 := V.5;;
g6 := V.6;;
g7 := V.7;;
g8 := V.8;;
g9 := V.9;;
g10 := V.10;;
g11 := V.11;;
g12 := V.12;;
g13 := V.13;;
g14 := V.14;;
g15 := V.15;;
g16 := V.16;;
g17 := V.17;;
g18 := V.18;;
g19 := V.19;;
g20 := V.20;;
g21 := V.21;;
g22 := V.22;;
g23 := V.23;;
g24 := V.24;;
g25 := V.25;;
g26 := V.26;;
g27 := V.27;;
g28 := V.28;;
g29 := V.29;;
g30 := V.30;;
g31 := V.31;;
g32 := V.32;;
g33 := V.33;;
g34 := V.34;;
g35 := V.35;;
g36 := V.36;;
g37 := V.37;;
g38 := V.38;;
g39 := V.39;;
g40 := V.40;;
g41 := V.41;;
g42 := V.42;;
g43 := V.43;;
g44 := V.44;;
g45 := V.45;;
g46 := V.46;;
g47 := V.47;;
g48 := V.48;;
g49 := V.49;;
g50 := V.50;;
g51 := V.51;;
g52 := V.52;;
g53 := V.53;;
g54 := V.54;;
g55 := V.55;;
g56 := V.56;;
g57 := V.57;;
g58 := V.58;;
g59 := V.59;;
g60 := V.60;;
g61 := V.61;;
g62 := V.62;;
g63 := V.63;;
quit;
