<html><head><title>GAP3 Manual: 101 Unipotent elements of reductive groups</title></head>
<body bgcolor="ffffff">
<h1>101 Unipotent elements of reductive groups</h1>
<P><P><P>
This  chapter  describes  functions  allowing  to  make computations in the
unipotent  radical of a  Borel subgroup of  a connected algebraic reductive
group;  the  implementation  of  these  functions  was initially written by
Olivier Dudas.
<P>
The  unipotent radical of a  Borel subgroup is the  product in any order of
root  subgroups associated  to the  positive roots.  We fix an order, which
gives a canonical form to display elements and to compare them.
<P>
The  computations use the Steinberg relations between root subgroups, which
come from the choice of a Chevalley basis of the Lie algebra. The reference
we  follow is chapters 4 to 6  of the book <A href="biblio.htm#Car72b"><cite>Car72b</cite></a> ``Simple groups of
Lie type'' by R.W. Carter (Wiley 1972).
<P>
We start with a root datum specified by a <strong>CHEVIE</strong> Coxeter group record <code>W</code>
and  build a record which contains  information about the maximal unipotent
subgroup  of  the  corresponding  reductive  group,  that  is the unipotent
radical of the Borel subgroup determined by the positive roots.
<P>
<pre>    gap> W:=CoxeterGroup("E",6);; U:=UnipotentGroup(W);
    UnipotentGroup(CoxeterGroup("E",6))</pre>
<P>
Now, if <I>&alpha;=</I><code>W.roots[2]</code>, we make the element <I>u<sub>&alpha;</sub>(4)</I>
of the root subgroup <I>u<sub>&alpha;</sub></I>:
<P>
<pre>    gap> U.Element(2,4);
    u2(4)</pre>
<P>
If we do not specify the coefficient we make by default <I>u<sub>&alpha;</sub>(1)</I>, so we
have also:
<P>
<pre>    gap> U.Element(2)^4;
    u2(4)</pre>
<P>
We can make more complicated elements:
<P>
<pre>    gap> U.Element(2,4)*U.Element(4,5);
    u2(4) * u4(5)
    gap> U.Element(2,4,4,5);
    u2(4) * u4(5)</pre>
<P>
If the roots are not in order the element is normalized:
<P>
<pre>    gap> u:=U.Element(4,5,2,4);
    u2(4) * u4(5) * u8(-20)</pre>
<P>
It is possible to display the decomposition of the roots in simple roots
instead of their index:
<P>
<pre>    gap> Display(u,rec(root:=true));
    u010000(4) * u000100(5) * u010100(-20)</pre>
<P>
The coefficients in the root subgroups can be elements of arbitrary rings.
Here is an example using <code>Mvp</code>s (see <a href="chap112.htm#SECT001">Mvp</a>):
<P>
<pre>    gap>  W:=CoxeterGroup("E",8);; U:=UnipotentGroup(W);
    UnipotentGroup(CoxeterGroup("E",8))
    gap> u:=U.Element(List([1..8],i->[i,Z(2)*Mvp(SPrint("x",i))]));
    u1(Z(2)^0x1) * u2(Z(2)^0x2) * u3(Z(2)^0x3) * u4(Z(2)^0x4) * u5(Z(2)^0x\ 
    5) * u6(Z(2)^0x6) * u7(Z(2)^0x7) * u8(Z(2)^0x8)
    gap> Display(u^16,rec(root:=true));
    u22343210(Z(2)^0x1^2x2^2x3^3x4^4x5^3x6^2x7) *
    u12343211(Z(2)^0x1x2^2x3^3x4^4x5^3x6^2x7x8) *
    u12243221(Z(2)^0x1x2^2x3^2x4^4x5^3x6^2x7^2x8) *
    u12233321(Z(2)^0x1x2^2x3^2x4^3x5^3x6^3x7^2x8) *
    u22343211(Z(2)^0x1^2x2^2x3^3x4^4x5^3x6^2x7x8) *
    u12243321(Z(2)^0x1x2^2x3^2x4^4x5^3x6^3x7^2x8) *
    u12244321(Z(2)^0x1x2^2x3^2x4^4x5^4x6^3x7^2x8) *
    u22343321(Z(2)^0x1^2x2^2x3^3x4^4x5^3x6^3x7^2x8) *
    u12344321(Z(2)^0x1x2^2x3^3x4^4x5^4x6^3x7^2x8) *
    u22344321(Z(2)^0x1^2x2^2x3^3x4^4x5^4x6^3x7^2x8) *
    u23354321(Z(2)^0x1^2x2^3x3^3x4^5x5^4x6^3x7^2x8) *
    u22454321(Z(2)^0x1^2x2^2x3^4x4^5x5^4x6^3x7^2x8) *
    u23465432(Z(2)^0x1^2x2^3x3^4x4^6x5^5x6^4x7^3x8^2)
    gap> u^32;
    ()</pre>
<P>
The  above computation shows  that in characteristic  2 the exponent of the
unipotent group of <I>E<sub>8</sub></I> is 32. More precisely, squaring doubles the height
of  the involved  roots, so  in the  above <I>u<sup>16</sup></I>  involves only roots of
height 16 or more.
<P>
Various  actions are  defined on  unipotent elements.  Elements of the Weyl
group  act (through certain representatives) as long as no root subgroup is
in their inversion set:
<P>
<pre>    gap> W:=CoxeterGroup("G",2);
    CoxeterGroup("G",2)
    gap> U:=UnipotentGroup(W);
    UnipotentGroup(CoxeterGroup("G",2))
    gap> u:=U.Element(1,Mvp("x"),3,Mvp("y"));
    u1(x) * u3(y)
    gap> u^(W.2*W.1);
    u4(y) * u5(x)
    gap> u^W.1;
    Error, u1(x) * u3(y) should have no coefficient on root 1
     in
    &lt;rec1> ^ &lt;rec2> called from
    main loop
    brk></pre>
<P>
Semisimple elements act by conjugation:
<P>
<pre>    gap> s:=SemisimpleElement(W,[E(3),2]);
    &lt;E(3),2>
    gap> u^s;
    u1(E3x) * u3(2E3y)</pre>
<P>
<DL><DT>As well as unipotent elements:<DD>
</DL><P>
<pre>    gap> u^U.Element(2);
    u1(x) * u3(x+y) * u4(-x-2y) * u5(x+3y) * u6(3xy+x^2+3y^2)</pre>
<P><P>
<H3> Subsections</H3>
<oL>
<LI> <A HREF="chap101.htm#SECT001">UnipotentGroup</a>
<LI> <A HREF="chap101.htm#SECT002">Operations for Unipotent elements</a>
<LI> <A HREF="chap101.htm#SECT003">IsUnipotentElement</a>
<LI> <A HREF="chap101.htm#SECT004">UnipotentDecompose</a>
<LI> <A HREF="chap101.htm#SECT005">UnipotentAbelianPart</a>
</ol>
<A NAME="SECT001"><h2>101.1 UnipotentGroup</h2></a>
<P><P>
<A name = "I0"></a>

<P>
<code>UnipotentGroup(<var>W</var>)</code>
<P>
<var>W</var>  should  be  a  Coxeter  group  record  representing a Weyl group. This
function  returns a  record representing  the unipotent  radical <I><strong>U</strong></I> of a
Borel subgroup of the reductive group of Weyl group <var>W</var>.
<P>
The result is a record with the following fields:
<P>
<DL><DT><code>weylGroup</code>:<DD><BR> contains <var>W</var>.
</DL><P>
<DL><DT><code>specialPairs</code>:<DD><BR>  Let <I>&lt;</I> be the order on  the roots of <var>W</var> resulting from
     some total order on the ambient vector space (<strong>CHEVIE</strong> chooses such an
     order  once  and  for  all  and  it  has  nothing to do with the field
     <code>.order</code>  of the unipotent  group record). A  pair <I>(r,s)</I> of roots is
     <strong>special</strong>  if <I>r&lt;s</I>  and <I>r+s</I>  is a  root. The field <code>.specialPairs</code>
     contains twice the list of triples <I>(r,s,r+s)</I> for special pairs: it
     contains first this list, sorted by <I>(r+s,r)</I>, then it contains a copy
     of  the  list  in  the  order  <I>(s,r,r+s)</I>. Roots in these triples are
     represented  as  their  index  in  <code>Parent(W).roots</code>.  Thanks to the
     repetition,  each ordered pair  of positive roots  whose sum is a root
     appears exactly once in <code>.specialPairs</code>.
</DL><P>
<DL><DT><code>chevalleyConstants</code>:<DD><BR>  The Lie algebra of <I><strong>U</strong></I> has a <strong>Chevalley basis</strong>
     <I>e<sub>r</sub></I>  indexed  by  roots,  with  the property that <I>[e<sub>r</sub>,e<sub>s</sub>]=N<sub>r,s</sub>
     e<sub>r+s</sub></I>  for some integer constants <I>N<sub>r,s</sub></I>  for each pair of roots
     whose  sum is a root. The list <code>chevalleyConstants</code>, of same length as
     <code>.specialPairs</code>, contains the corresponding integers <I>N<sub>r,s</sub></I>.
</DL><P>
<DL><DT><code>commutatorConstants</code>:<DD><BR>  These are the constants <I>C<sub>r,s,i,j</sub></I> which occur
     in the commutator formula for two root subgroups:
     <center><table><tr><td><I>u<sub>s</sub>(u)u<sub>r</sub>(t)=u<sub>r</sub>(t)u<sub>s</sub>(u)&prod;<sub>i,j&gt;0</sub>
     u<sub>ir+js</sub>(C<sub>r,s,i,j</sub>(-t)<sup>i</sup>u<sup>j</sup>),</I></td></tr></table></center>  where the product  is over all the
     roots  of the given  shape. The list  <code>.commutatorConstants</code> is of the
     same  length as  <code>.specialPairs</code> and  contains for  each pair of roots
     <I>(r,s)</I>   a  list  of  quadruples  <I>[i,j,ir+js,C<sub>r,s,i,j</sub>]</I>  for  all
     possible values of <I>i,j</I> for this pair.
</DL><P>
<DL><DT><code>order</code>:<DD><BR>  An order on the roots, used to give a canonical form to unipotent
     elements  by listing the root subgroups in that order. <code>.order</code> is the
     list of indices of roots in <code>Parent(W)</code>, listed in the desired order.
</DL><P>
<pre>    gap> W:=CoxeterGroup("G",2);
    CoxeterGroup("G",2)
    gap> U:=UnipotentGroup(W);
    UnipotentGroup(CoxeterGroup("G",2))
    gap> U.specialPairs;
    [ [ 1, 2, 3 ], [ 2, 3, 4 ], [ 2, 4, 5 ], [ 1, 5, 6 ], [ 3, 4, 6 ],
      [ 2, 1, 3 ], [ 3, 2, 4 ], [ 4, 2, 5 ], [ 5, 1, 6 ], [ 4, 3, 6 ] ]
    gap> U.chevalleyConstants;
    [ 1, 2, 3, 1, 3, -1, -2, -3, -1, -3 ]
    gap> U.commutatorConstants;
    [ [ [ 1, 1, 3, 1 ], [ 1, 2, 4, -1 ], [ 1, 3, 5, 1 ], [ 2, 3, 6, 2 ] ],
      [ [ 1, 1, 4, 2 ], [ 2, 1, 5, 3 ], [ 1, 2, 6, -3 ] ],
      [ [ 1, 1, 5, 3 ] ], [ [ 1, 1, 6, 1 ] ], [ [ 1, 1, 6, 3 ] ],
      [ [ 1, 1, 3, -1 ], [ 2, 1, 4, -1 ], [ 3, 1, 5, -1 ],
          [ 3, 2, 6, -1 ] ],
      [ [ 1, 1, 4, -2 ], [ 2, 1, 6, -3 ], [ 1, 2, 5, 3 ] ],
      [ [ 1, 1, 5, -3 ] ], [ [ 1, 1, 6, -1 ] ], [ [ 1, 1, 6, -3 ] ] ]</pre>
<P>
A unipotent group record also contains functions for creating and normalizing
unipotent elements.
<P>
<code>U.Element(<var>r</var>)</code>
<P>
<code>U.Element(<I>r<sub>1</sub></I>,<I>c<sub>1</sub></I>,..,<I>r<sub>n</sub></I>,<I>c<sub>n</sub></I>)</code>
<P>
In the first form the function creates the element <I>u<sub>r</sub>(1)</I>, and in the second
form the element <I>u<sub>r<sub>1</sub></sub>(c<sub>1</sub>)... u<sub>r<sub>n</sub></sub>(c<sub>n</sub>)</I>
<P>
<pre>    gap> U.Element(2);
    u2(1)
    gap> U.Element(1,2,2,4);
    u1(2) * u2(4)
    gap> U.Element(2,4,1,2);
    u1(2) * u2(4) * u3(-8) * u4(32) * u5(-128) * u6(512)</pre>
<P>
<code>U.CanonicalForm(<var>l</var>[,order])</code>
<P>
The  function  takes  a  list  of  pairs  <code>[r,c]</code>  representing a unipotent
element,  where <code>r</code>  is a  root and  <code>c</code> the corresponding coefficient, and
puts  it in  canonical form,  reordering the  terms to  agree with <code>U.order</code>
using  the commutation  relations. If  a second  argument is given, this is
used instead of <code>U.order</code>.
<P>
<pre>    gap> U.CanonicalForm([[2,4],[1,2]]);
    [ [ 1, 2 ], [ 2, 4 ], [ 3, -8 ], [ 4, 32 ], [ 5, -128 ], [ 6, 512 ] ]
    gap> U.CanonicalForm(last,[6,5..1]);
    [ [ 2, 4 ], [ 1, 2 ] ]</pre>
<P><A NAME="SECT002"><h2>101.2 Operations for Unipotent elements</h2></a>
<P><P><P>
The  arithmetic operations <code>*</code>, <code>/</code> and  <code>^</code> work for unipotent elements.
They also have <code>Print</code> and <code>String</code> methods.
<P>
<pre>    gap> u:=U.Element(1,4,3,-6);
    u1(4) * u3(-6)
    gap> u^-1;
    u1(-4) * u3(6)
    gap> u:=U.Element(1,4,2,-6);
    u1(4) * u2(-6)
    gap> u^-1;
    u1(-4) * u2(6) * u3(24) * u4(-144) * u5(864) * u6(6912)
    gap> u^0;
    ()
    gap> u*u;
    u1(8) * u2(-12) * u3(24) * u4(432) * u5(6048) * u6(-17280)
    gap> String(u);
    "u1(4) * u2(-6)"
    gap> Format(u^2,rec(root:=true));
    "u10(8) * u01(-12) * u11(24) * u12(432) * u13(6048) * u23(-17280)"</pre>
<P>
<code>u^n</code>  gives  the  <code>n</code>-th  power  of  <code>u</code>  when  <code>n</code>  is an integer and <code>u</code>
conjugate  by <code>n</code> when <code>n</code> is a  unipotent element, a semisimple element or
an element of the Weyl group.
<P><A NAME="SECT003"><h2>101.3 IsUnipotentElement</h2></a>
<P><P>
<A name = "I1"></a>

<P>
<code>IsUnipotentElement(<var>u</var>)</code>
<P>
This  function returns  <code>true</code> if  <code>u</code> is  a unipotent  element and <code>false</code>
otherwise.
<P>
<pre>    gap> IsUnipotentElement(U.Element(2));
    true
    gap> IsUnipotentElement(2);
    false</pre>
<P><A NAME="SECT004"><h2>101.4 UnipotentDecompose</h2></a>
<P><P>
<A name = "I2"></a>

<P>
<code>UnipotentDecompose(<var>w</var>,<var>u</var>)</code>
<P>
<code>u</code>  should be a unipotent element and  <code>w</code> an element of the corresponding
Weyl  group.  If  <I><strong>U</strong></I>  is  the  unipotent  radical  of the Borel subgroup
determined  by the positive roots, and <I><strong>U</strong><sup>-</sup></I> the unipotent radical of the
opposite  Borel,  this  function  decomposes  <I>u</I>  into  its  component  in
<I><strong>U</strong>&cap;<sup>w</sup><strong>U</strong><sup>-</sup></I> and its component in <I><strong>U</strong>&cap;<sup>w</sup><strong>U</strong></I>.
<P>
<pre>    gap> u:=U.Element(2,Mvp("y"),1,Mvp("x"));
    u1(x) * u2(y) * u3(-xy) * u4(xy^2) * u5(-xy^3) * u6(2x^2y^3)
    gap> UnipotentDecompose(W.1,u);
    [ u1(x), u2(y) * u3(-xy) * u4(xy^2) * u5(-xy^3) * u6(2x^2y^3) ]
    gap> UnipotentDecompose(W.2,u);
    [ u2(y), u1(x) ]</pre>
<P><A NAME="SECT005"><h2>101.5 UnipotentAbelianPart</h2></a>
<P><P>
<A name = "I3"></a>

<P>
<code>UnipotentAbelianPart(<var>u</var>)</code>
<P>
If  <I><strong>U</strong></I> is the unipotent subgroup and <I>D(<strong>U</strong>)</I> its derived subgroup, this
function   returns  the  projection   of  the  unipotent   element  <code>u</code>  on
<I><strong>U</strong>/D(<strong>U</strong>)</I>, that is its coefficients on the simple roots.
<P>
<pre>    gap> u:=U.Element(2,Mvp("y"),1,Mvp("x"));
    u1(x) * u2(y) * u3(-xy) * u4(xy^2) * u5(-xy^3) * u6(2x^2y^3)
    gap> UnipotentAbelianPart(u);
    u1(x) * u2(y)</pre>
<P><a href ="chap100.htm">Previous</a> <a href = "index.htm">Up</a> <a href ="chap102.htm">Next</a><BR><a href = "theindex.htm">Index</a>
<P>
<address>gap3-jm<br>11 Mar 2019</address></body></html>