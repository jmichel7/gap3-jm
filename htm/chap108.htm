<html><head><title>GAP3 Manual: 108 Signed permutations</title></head>
<body bgcolor="ffffff">
<h1>108 Signed permutations</h1>
<P><P><P>
A   <strong>signed  permutation</strong>  of   <code>[1..n]</code>  is  a   permutation  of  the  set
<I>{-n,...,-1,1,...,n}</I>  which  preserves  the  pairs <I>[-i,i]</I>. It is
represented  as the images of <I>[1..n]</I>.
<P>
A  signed permutation  can be  represented in  two other  ways which may be
convenient.  The first way is to replace the integers <I>{-n,...,-1}</I> by
<I>{n+1,...,2n}</I>   to   have   <strong>GAP3</strong>   permutations,   which   form  the
hyperoctaedral group (see <a href="chap083.htm#SECT002">CoxeterGroupHyperoctaedralGroup</a>).
<P>
The  second way is to represent the signed permutation by a monomial matrix
with  entries  <code>1</code>  or  <code>-1</code>.  If  such  a matrix <var>m</var> represents the signed
permutation <var>sp</var>, then <code>l*m</code> is the same as <code>SignPermuted(<var>l</var>,<var>sp</var>)</code>.
<P><P>
<H3> Subsections</H3>
<oL>
<LI> <A HREF="chap108.htm#SECT001">SignPermuted</a>
<LI> <A HREF="chap108.htm#SECT002">SignedPermutationMat</a>
<LI> <A HREF="chap108.htm#SECT003">SignedPerm</a>
<LI> <A HREF="chap108.htm#SECT004">CyclesSignedPerm</a>
<LI> <A HREF="chap108.htm#SECT005">SignedPermListList</a>
</ol>
<A NAME="SECT001"><h2>108.1 SignPermuted</h2></a>
<P><P>
<A name = "I0"></a>

<P>
<code>SignPermuted( <var>l</var>, <var>sp</var>)</code>
<P>
<code>SignPermuted</code>  returns a  new list  <var>n</var> that  contains the elements of the
list  <var>l</var> permuted  according to  the signed  permutation <var>sp</var>.  If <var>sp</var> is
given  as a  list, then  <code><var>n</var>[AbsInt(sp[i])] = <var>l</var>[<var>i</var>]SignInt(sp[i])</code>. The
signed   permutation  <var>sp</var>  can  also  be   given  as  an  element  of  the
hyperoctaedral group (see the introduction of the chapter for definitions).
<P>
<pre>    gap> SignPermuted([20,30,40],[-2,-1,-3]);
    [ -30, -20, -40 ]
    gap> W:=CoxeterGroupHyperoctaedralGroup(3);
    Group( (3,4), (2,3)(4,5), (1,2)(5,6) )
    gap> SignPermuted([20,30,40],W.3);
    [ 30, 20, 40 ]
    gap> SignPermuted([20,30,40],W.2);
    [ 20, 40, 30 ]
    gap> SignPermuted([20,30,40],W.1);
    [ 20, 30, -40 ]</pre>
<P><A NAME="SECT002"><h2>108.2 SignedPermutationMat</h2></a>
<P><P>
<A name = "I1"></a>

<P>
<code>SignedPermutationMat( <var>sp</var> [,<var>d</var>])</code>
<P>
This   function  returns  the  signed  permutation  matrix  of  the  signed
permutation  <var>sp</var>, given as a  list or as an  element of the hyperoctaedral
group.  This is a matrix <var>m</var> such that <code>SignPermuted(l,sp)=l*m</code>. If <var>sp</var> is
an  element of hyperoctaedral  group, the matrix  is given of dimension the
rank  of the  smallest hyperoctaedral  group to  which <var>sp</var>  belongs. If an
additional argument <var>d</var> is given the matrix is returned of that dimension.
<P>
<pre>    gap> m:=SignedPermutationMat([-2,-3,-1]);
    [ [ 0, -1, 0 ], [ 0, 0, -1 ], [ -1, 0, 0 ] ]
    gap> m=SignedPermutationMat((1,5,3,6,2,4));
    true
    gap> [20,30,40]*m;
    [ -40, -20, -30 ]
    gap> SignPermuted([20,30,40],[-2,-3,-1]);
    [ -40, -20, -30 ]</pre>
<P><A NAME="SECT003"><h2>108.3 SignedPerm</h2></a>
<P><P>
<A name = "I2"></a>

<P>
<code>SignedPerm( <var>sp</var> [,<var>d</var> or <var>sgns</var>])</code>
<P>
This  function converts to a signed permutation  given as a list, either an
element of the hyperoctaedral group, a signed permutation matrix, or a pair
of  a  permutation  and  of  a  list  of  signs. If given an element of the
hyperoctaedral  group,  the  rank  <var>d</var>  of  that  group  can be given as an
argument,   otherwise  a  representation  of  <var>sp</var>   as  a  list  is  given
corresponding to the smallest hyperoctaedral group to which it belongs.
<P>
Finally, if given a signed permutation as a list, this function returns
am element of the hyperoctaedral group.
<P>
<pre>    gap> SignedPerm([[0,-1,0],[0,0,-1],[-1,0,0]]);
    [ -2, -3, -1 ]
    gap> SignedPerm((1,5,3,6,2,4));
    [ -2, -3, -1 ]
    gap> SignedPerm((1,2,3),[-1,-1,-1]);
    [ -2, -3, -1 ]
    gap> SignedPerm([-2,-3,-1]);
    (1,5,3,6,2,4)</pre>
<P><A NAME="SECT004"><h2>108.4 CyclesSignedPerm</h2></a>
<P><P>
<A name = "I3"></a>

<P>
<code>CyclesSignedPerm( <var>sp</var> )</code>
<P>
Returns   the  list   of  cycles   of  the   signed  permutation   <var>sp</var>  on
<I>{-n,...,-1,1,...,n}</I>,  given as  a list  or a  permutation. If one
cycle is the negative of another, only one of the two cycles is given.
<P>
<pre>    gap> CyclesSignedPerm([-2,-3,-1]);
    [ [ 1, -2, 3, -1, 2, -3 ] ]
    gap> CyclesSignedPerm([-2,-1,-3]);
    [ [ 1, -2 ], [ 3, -3 ] ]
    gap> CyclesSignedPerm([-2,-1,3]);
    [ [ 1, -2 ] ]
    gap> CyclesSignedPerm((1,5,3,6,2,4));
    [ [ 1, -2, 3, -1, 2, -3 ] ]</pre>
<P><A NAME="SECT005"><h2>108.5 SignedPermListList</h2></a>
<P><P>
<A name = "I4"></a>

<P>
    <code>SignedPermListList( <var>list1</var>, <var>list2</var> )</code>
<P>
<code>SignedPermListList</code>  returns a signed  permutation that may  be applied to
<var>list1</var> to obtain <var>list2</var>, if there is one. Otherwise it returns <code>false</code>.
<P>
<pre>    gap> SignedPermListList([20,30,40],[-40,-20,-30]);
    [ -2, -3, -1 ]
    gap> SignPermuted([20,30,40],[-2,-3,-1]);
    [ -40, -20, -30 ]</pre>
<P><a href ="chap107.htm">Previous</a> <a href = "index.htm">Up</a> <a href ="chap109.htm">Next</a><BR><a href = "theindex.htm">Index</a>
<P>
<address>gap3-jm<br>11 Mar 2019</address></body></html>