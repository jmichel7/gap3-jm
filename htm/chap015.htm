<html><head><title>GAP3 Manual: 15 Subfields of Cyclotomic Fields</title></head>
<body bgcolor="ffffff">
<h1>15 Subfields of Cyclotomic Fields</h1>
<P><P><P>
The only <strong>number fields</strong> that <strong>GAP3</strong> can handle at the moment are
subfields of cyclotomic fields, e.g., <I>Q(&radic;5)</I> is a number field
that is not cyclotomic but contained in the cyclotomic field
<I>Q<sub>5</sub> = Q(e<sup>(2&pi; i)/(5)</sup>)</I>.  Although this means that <strong>GAP3</strong> does
not know arbitrary algebraic number fields but only those with abelian
Galois group, here we call these fields <strong>number fields</strong> for short.
The elements of number fields are called <strong>cyclotomics</strong> (see chapter
<a href="chap013.htm">Cyclotomics</a>).  Thus number fields are the domains (see chapter
<a href="chap004.htm">Domains</a>) related to cyclotomics; they are special field records (see
<a href="chap006.htm#SECT017">Field Records</a>) which are needed to specify the field extension with
respect to which e.g. the trace of a cyclotomic shall be computed.
<P>
In many situations cyclotomic fields need not be treated in  a special
way, except that there  may be more efficient algorithms for them than
for arbitrary number fields.  For that, there are the global variables
<code>NumberFieldOps</code> and <code>CyclotomicFieldOps</code>,  both records which contain
the field  operations stored in <code>FieldOps</code> (see chapter <a href="chap006.htm">Fields</a>)  and
in which some functions are overlaid (see <a href="chap015.htm#SECT013">Domain Functions for Number
Fields</a>).  If all necessary  information  about a function is  already
given  in chapter <a href="chap006.htm">Fields</a>, this function is  not described here; this
is the case e.g. for <code>Conjugates</code> and related functions, like <code>Trace</code>
and  <code>CharPol</code>.  Some functions,  however,  need  further explanation,
e.g., <a href="chap015.htm#SECT012">Coefficients for Number Fields</a> tells more about <code>Coefficients</code>
for number fields.
<P>
There are some functions which are different for cyclotomic fields and
other number fields, e.g., the field constructors <code>CF</code> resp. <code>NF</code>.  In
such a situation, the special case is described in a section immediately
following the section about the general case.
<P>
Besides the single number fields, there is another domain in <strong>GAP3</strong>
related to number fields, the domain <code>Cyclotomics</code> of all cyclotomics.
Although this is an abstract field, namely the field <I>Q<sup>ab</sup></I>,
<code>Cyclotomics</code> is not a field record.  It is used by <code>DefaultField</code>,
<code>DefaultRing</code>, <code>Domain</code>, <code>Field</code> and <code>Ring</code> (see <a href="chap006.htm#SECT003">DefaultField</a>,
<a href="chap005.htm#SECT003">DefaultRing</a>, <a href="chap004.htm#SECT005">Domain</a>, <a href="chap006.htm#SECT002">Field</a>, <a href="chap005.htm#SECT002">Ring</a>) which are mainly interested in
the corresponding entries of <code>Cyclotomics.operations</code> since these
functions know how to create fields resp. integral rings generated by
some cyclotomics.
<P>
<DL><DT>This chapter informs about:<DD><BR> 
   characteristic functions (see <a href="chap015.htm#SECT001">IsNumberField</a>, <a href="chap015.htm#SECT002">IsCyclotomicField</a>),<BR> 
   field constructors (see <a href="chap015.htm#SECT003">Number Field Records</a>,
       <a href="chap015.htm#SECT004">Cyclotomic Field Records</a>),<BR> 
   (default) fields of cyclotomics
       (see <a href="chap015.htm#SECT005">DefaultField and Field for Cyclotomics</a>),
       and (default) rings of cyclotomic integers
       (see <a href="chap015.htm#SECT006">DefaultRing and Ring for Cyclotomic Integers</a>),<BR> 
   Galois groups of number fields (see <a href="chap015.htm#SECT007">GeneratorsPrimeResidues</a>,
       <a href="chap015.htm#SECT008">GaloisGroup for Number Fields</a>),<BR> 
   vector space bases (see <a href="chap015.htm#SECT009">ZumbroichBase</a>,
       <a href="chap015.htm#SECT010">Integral Bases for Number Fields</a>, <a href="chap015.htm#SECT011">NormalBaseNumberField</a>) and
       coefficients (see <a href="chap015.htm#SECT012">Coefficients for Number Fields</a>) and<BR> 
   overlaid functions in the operations records
       (see <a href="chap015.htm#SECT013">Domain Functions for Number Fields</a>).
</DL><P>
The external functions are in the file <code>LIBNAME/"numfield.g"</code>
<P><P>
<H3> Subsections</H3>
<oL>
<LI> <A HREF="chap015.htm#SECT001">IsNumberField</a>
<LI> <A HREF="chap015.htm#SECT002">IsCyclotomicField</a>
<LI> <A HREF="chap015.htm#SECT003">Number Field Records</a>
<LI> <A HREF="chap015.htm#SECT004">Cyclotomic Field Records</a>
<LI> <A HREF="chap015.htm#SECT005">DefaultField and Field for Cyclotomics</a>
<LI> <A HREF="chap015.htm#SECT006">DefaultRing and Ring for Cyclotomic Integers</a>
<LI> <A HREF="chap015.htm#SECT007">GeneratorsPrimeResidues</a>
<LI> <A HREF="chap015.htm#SECT008">GaloisGroup for Number Fields</a>
<LI> <A HREF="chap015.htm#SECT009">ZumbroichBase</a>
<LI> <A HREF="chap015.htm#SECT010">Integral Bases for Number Fields</a>
<LI> <A HREF="chap015.htm#SECT011">NormalBaseNumberField</a>
<LI> <A HREF="chap015.htm#SECT012">Coefficients for Number Fields</a>
<LI> <A HREF="chap015.htm#SECT013">Domain Functions for Number Fields</a>
</ol>
<A NAME="SECT001"><h2>15.1 IsNumberField</h2></a>
<P><A name = "I0"></a>

<P>
<code>IsNumberField( <var>obj</var> )</code>
<P>
returns <code>true</code> if <var>obj</var> is a field record (see <a href="chap006.htm#SECT001">IsField</a>, <a href="chap006.htm#SECT017">Field
Records</a>) of a field of characteristic zero where <code><var>F</var>.generators</code> is a
list of cyclotomics (see chapter <a href="chap013.htm">Cyclotomics</a>), and <code>false</code> else.
<P>
<pre>    gap> IsNumberField( CF(9) ); IsNumberField( NF( [ ER(3) ] ) );
    true
    true
    gap> IsNumberField( GF( 2 ) );
    false</pre>
<P><A NAME="SECT002"><h2>15.2 IsCyclotomicField</h2></a>
<P><A name = "I1"></a>

<P>
<code>IsCyclotomicField( <var>obj</var> )</code>
<P>
returns <code>true</code> if <var>obj</var> is a number field record (see <a href="chap015.htm#SECT001">IsNumberField</a>)
where <code><var>obj</var>.isCyclotomicField = true</code>, and <code>false</code> else.
<P>
<pre>    gap> IsCyclotomicField( CF(9) );
    true
    gap> IsCyclotomicField( NF( [ ER(-3) ] ) );
    true
    gap> IsCyclotomicField( NF( [ ER(3) ] ) );
    false</pre>
<P><A NAME="SECT003"><h2>15.3 Number Field Records</h2></a>
<P><A name = "I2"></a>
<A name = "I3"></a>

<P>
<code>NumberField( <var>gens</var> )</code><BR> 
<code>NumberField( <var>n</var>, <var>stab</var> )</code><BR> 
<code>NumberField( <var>subfield</var>, <var>poly</var> )</code><BR> 
<code>NumberField( <var>subfield</var>, <var>base</var> )</code>
<P>
<code>NumberField</code> may be abbreviated <code>NF</code>; it returns number fields, namely
<P>
<code>NumberField( <var>gens</var> )</code>:<BR> 
     the number field generated by the cyclotomics in the list <var>gens</var>,
<P>
<code>NumberField( <var>n</var>, <var>stab</var> )</code>:<BR> 
     the fixed field of the prime residues in the list <var>stab</var> inside the
     cyclotomic field <I>Q<sub>n</sub></I> (see <a href="chap015.htm#SECT004">Cyclotomic Field Records</a>),
<P>
<code>NumberField( <var>subfield</var>, <var>poly</var> )</code>:<BR> 
     the splitting field of the polynomial <var>poly</var> (which must have degree
     at most 2) over the number field <var>subfield</var>; <code><var>subfield</var> = 0</code>
     is equivalent to <code><var>subfield</var> = Rationals</code>,
<P>
<code>NumberField( <var>subfield</var>, <var>base</var> )</code>:<BR> 
     the extension field of the number field <var>subfield</var> which is
     as vector space generated by the elements of the list <var>base</var> of
     cyclotomics; that means, <var>base</var> must be or at least contain a vector
     space base of this extension, if <var>base</var> is a base it will be
     assigned to the <code>base</code> field of the cyclotomic field
     (see <a href="chap015.htm#SECT012">Coefficients for Number Fields</a>).
     <code><var>subfield</var> = 0</code> is equivalent to <code><var>subfield</var> = Rationals</code>.
<P>
<pre>    gap> NF( [ EB(7), ER(3) ] );
    NF(84,[ 1, 11, 23, 25, 37, 71 ])
    gap> NF( 7, [ 1 ] );
    CF(7)
    gap> NF( NF( [ EB(7) ] ), [ 1, 1, 1 ] );
    NF(NF(7,[ 1, 2, 4 ]),[ 1, E(3) ])
    gap> F:= NF( 0, [ 1, E(4) ] ); G:= NF( 0, NormalBaseNumberField( F ) );
    GaussianRationals
    CF( Rationals,[ 1/2-1/2*E(4), 1/2+1/2*E(4) ])
    gap> G.base; G.basechangemat; Coefficients( G, 1 );
    [ 1/2-1/2*E(4), 1/2+1/2*E(4) ]
    [ [ 1, 1 ], [ -1, 1 ] ]
    [ 1, 1 ]</pre>
<P>
Number field records are field records (see <a href="chap006.htm#SECT017">Field Records</a>) representing
a number field.  Besides the obligatory record components, a number field
record <var>F</var> contains the component
<P>
<DL><DT><code>stabilizer</code>:<DD><BR> 
     the list of prime residues modulo <code>NofCyc( <var>F</var>.generators )</code> which
     fix all elements of <var>F</var>
</DL><P>
and possibly
<P>
<DL><DT><code>isIntegralBase</code>:<DD><BR> 
     <code>true</code> if <code><var>F</var>.base</code> is an integral vector space base of the field
     extension <code><var>F</var> / <var>F</var>.field</code>, <code>false</code> else (used by <a href="chap005.htm#SECT002">Ring</a> <code>Ring</code>);
     for the case that <code><var>F</var>.field</code> is a cyclotomic field,
     <a href="chap015.htm#SECT010">Integral Bases for Number Fields</a> describes integral bases of the
     field extension;
</DL><P>
<DL><DT><code>isNormalBase</code>:<DD><BR> 
     <code>true</code> if <code><var>F</var>.base</code> is a normal vector space base of the field
     extension <code><var>F</var>/<var>F</var>.field</code>, <code>false</code> else;
</DL><P>
<DL><DT><code>coeffslist</code>:<DD><BR> 
     a list of integers used by <a href="chap009.htm#SECT010">Coefficients</a> <code>Coefficients</code>; (see also
     <a href="chap015.htm#SECT012">Coefficients for Number Fields</a>);
</DL><P>
<DL><DT><code>coeffsmat</code>:<DD><BR> 
     a matrix of cyclotomics used by <a href="chap009.htm#SECT010">Coefficients</a> <code>Coefficients</code>;
     bound only if <code><var>F</var>.field</code> is not a cyclotomic field
     (see also <a href="chap015.htm#SECT012">Coefficients for Number Fields</a>);
</DL><P>
<DL><DT><code>basechangemat</code>:<DD><BR> 
     square matrix of dimension <code><var>F</var>.dimension</code>, representing the
     basechange from the default base of <code><var>F</var> / <var>F</var>.field</code>
     (see <a href="chap015.htm#SECT012">Coefficients for Number Fields</a>) to the base stored
     in <code><var>F</var>.base</code> if these two are different; used by <code>Coefficients</code>.
</DL><P>
<strong>Note</strong>: These fields and also the field <code>base</code> should not be changed by
          hand!
<P><A NAME="SECT004"><h2>15.4 Cyclotomic Field Records</h2></a>
<P><A name = "I4"></a>
<A name = "I5"></a>

<P>
<code>CyclotomicField( <var>n</var> )</code><BR> 
<code>CyclotomicField( <var>gens</var> )</code><BR> 
<code>CyclotomicField( <var>subfield</var>, <var>n</var> )</code><BR> 
<code>CyclotomicField( <var>subfield</var>, <var>base</var> )</code>
<P>
<code>CyclotomicField</code> may be abbreviated <code>CF</code>; it returns cyclotomic fields,
namely
<P>
<DL><DT><code>CyclotomicField( <var>n</var> )</code>:<DD><BR> 
     the field <I>Q<sub>n</sub></I> (over the rationals),
</DL><P>
<DL><DT><code>CyclotomicField( <var>gens</var> )</code>:<DD><BR> 
     the smallest cyclotomic field containing the cyclotomics in the list
     <var>gens</var> (over the rationals),
</DL><P>
<DL><DT><code>CyclotomicField( <var>subfield</var>, <var>n</var> )</code>:<DD><BR> 
     the field <I>Q<sub>n</sub></I> over the number field <var>subfield</var>,
</DL><P>
<DL><DT><code>CyclotomicField( <var>subfield</var>, <var>base</var> )</code>:<DD><BR> 
     the cyclotomic extension field of the number field <var>subfield</var> which
     is as vector space generated by the elements of the list <var>base</var> of
     cyclotomics; that means, <var>base</var> must be or at least contain a vector
     space base of this extension, if <var>base</var> is a base it will be
     assigned to the <code>base</code> field of the cyclotomic field
     (see <a href="chap015.htm#SECT012">Coefficients for Number Fields</a>).
     <code><var>subfield</var> = 0</code> is equivalent to <code><var>subfield</var> = Rationals</code>.
</DL><P>
<pre>    gap> CF( 5 ); CF( [ EB(7), ER(3) ] ); CF( NF( [ ER(3) ] ), 24 );
    CF(5)
    CF(84)
    CF(24)/NF(12,[ 1, 11 ])
    gap> CF( CF(3), [ 1, E(4) ] );
    CF(12)/CF(3)</pre>
<P>
A cyclotomic field record is a field record (see <a href="chap006.htm#SECT017">Field Records</a>), in
particular a number field record (see <a href="chap015.htm#SECT003">Number Field Records</a>) that
represents a cyclotomic field.  Besides the obligatory record fields,
a cyclotomic field record <var>F</var> contains the fields
<P>
<DL><DT><code>isCyclotomicField</code>:<DD><BR> 
     always <code>true</code>; used by <a href="chap015.htm#SECT002">IsCyclotomicField</a> <code>IsCyclotomicField</code>,
</DL><P>
<DL><DT><code>zumbroichbase</code>:<DD><BR> 
     a list containing <code>ZumbroichBase( <var>n</var>, <var>m</var> )</code> (see <a href="chap015.htm#SECT009">ZumbroichBase</a>)
     if <var>F</var> represents the
     field extension <I>Q<sub>n</sub>/Q<sub>m</sub></I>, and containing <code>Zumbroichbase( <var>n</var>, 1 )</code>
     if <var>F</var> is an extension of a number field that is not cyclotomic;
     used by <a href="chap009.htm#SECT010">Coefficients</a> <code>Coefficients</code>, see <a href="chap015.htm#SECT012">Coefficients for Number
     Fields</a>
</DL><P>
and possibly optional fields of number fields (see <a href="chap015.htm#SECT003">Number Field
Records</a>).
<P><A NAME="SECT005"><h2>15.5 DefaultField and Field for Cyclotomics</h2></a>
<P><A name = "I6"></a>

<A name = "I7"></a>
<A name = "I8"></a>

<P>
For a set <var>S</var> of cyclotomics,
<P>
<code>DefaultField( <var>S</var> ) = CF( <var>S</var> )</code> is the smallest cylotomic field
containing <I>S</I> (see <a href="chap006.htm#SECT003">DefaultField</a>), the so--called <strong>conductor</strong> of <var>S</var>;
<P>
<code>Field( <var>S</var> ) = NF( <var>S</var> )</code> is the smallest field containing <I>S</I> (see
<a href="chap006.htm#SECT002">Field</a>).
<P>
<pre>    gap> DefaultField( [ E(5) ] ); DefaultField( [ E(3), ER(6) ] );
    CF(5)
    CF(24)
    gap> Field( [ E(5) ] ); Field( [ E(3), ER(6) ] );
    CF(5)
    NF(24,[ 1, 19 ])</pre>
<P>
<code>DefaultField</code> and <code>Field</code> are used by functions that specify the field
for which some cyclotomics are regarded as elements (see <a href="chap006.htm#SECT003">DefaultField</a>,
<a href="chap006.htm#SECT002">Field</a>), e.g., <code>Trace</code> with only one argument will compute the trace of
this argument (which must be a cyclotomic) with respect to its default
field.
<P><A NAME="SECT006"><h2>15.6 DefaultRing and Ring for Cyclotomic Integers</h2></a>
<P><P>
<A name = "I9"></a>

<A name = "I10"></a>

<P>
For a set <var>S</var> of cyclotomic integers,
<P>
<code>DefaultRing( <var>S</var> )</code> is the ring of integers in <code>CF( <var>S</var> )</code>
(see <a href="chap005.htm#SECT003">DefaultRing</a>),
<P>
<code>Ring( <var>S</var> )</code> is the ring of integers in <code>NF( <var>S</var> )</code> (see <a href="chap005.htm#SECT002">Ring</a>).
<P>
<pre>    gap> Ring( [ E(5) ] );
    Ring( E(5) )
    gap> Ring( [ EB(7) ] );
    Ring( E(7)+E(7)^2+E(7)^4 )
    gap> DefaultRing( [ EB(7) ] );
    Ring( E(7) ) </pre>
<P><A NAME="SECT007"><h2>15.7 GeneratorsPrimeResidues</h2></a>
<P><A name = "I11"></a>

<P>
<code>GeneratorsPrimeResidues( <var>n</var> )</code>
<P>
returns a record with fields
<P>
<DL><DT><code>primes</code>:<DD><BR> 
     the set of prime divisors of the integer <var>n</var>,
</DL><P>
<DL><DT><code>exponents</code>:<DD><BR> 
     the corresponding exponents in the factorization of <var>n</var> and
</DL><P>
<DL><DT><code>generators</code>:<DD><BR> 
     generators of the group of prime residues: For each odd prime <I>p</I>
     there is one generator, corresponding to a primitive root of the
     subgroup <I>(Z/p<sup>&nu;<sub>p</sub></sup>)<sup>*</sup></I> of <I>(Z/nZ)<sup>*</sup></I>, where <I>&nu;<sub>p</sub></I> is
     the exponent of <I>p</I> in the factorization of <var>n</var>; for <I>p = 2</I>, we
     have one generator in the case that 8 does not divide <I>n</I>, and a
     list of two generators (corresponding to
     <I>&lang;* 5, *(2<sup>&nu;<sub>2</sub></sup>-1)&rang; = (Z/2<sup>&nu;<sub>2</sub></sup>)<sup>*</sup></I>)
     else.
</DL><P>
<pre>    gap> GeneratorsPrimeResidues( 9 );      # 2 is a primitive root
    rec(
      primes := [ 3 ],
      exponents := [ 2 ],
      generators := [ 2 ] )
    gap> GeneratorsPrimeResidues( 24 );     # 8 divides 24
    rec(
      primes := [ 2, 3 ],
      exponents := [ 3, 1 ],
      generators := [ [ 7, 13 ], 17 ] )
    gap> GeneratorsPrimeResidues( 1155 );
    rec(
      primes := [ 3, 5, 7, 11 ],
      exponents := [ 1, 1, 1, 1 ],
      generators := [ 386, 232, 661, 211 ] )</pre>
<P><A NAME="SECT008"><h2>15.8 GaloisGroup for Number Fields</h2></a>
<P><P>
<A name = "I12"></a>

<A name = "I13"></a>

<P>
The <strong>Galois automorphisms</strong> of the cyclotomic field <I>Q<sub>n</sub></I> are given by
linear extension of the maps <I>* k: e<sub>n</sub> &rarr; e<sub>n</sub><sup>k</sup></I> with
<I>1  &le; k &lt; n</I> and <code>Gcd( <var>n</var>, <var>k</var> ) = 1</code> (see <a href="chap013.htm#SECT011">GaloisCyc</a>).
Note that this action is not equal to exponentiation of cyclotomics,
i.e., in general <I>z<sup>* k</sup></I> is different from <I>z<sup>k</sup></I>:
<P>
<pre>    gap> ( E(5) + E(5)^4 )^2; GaloisCyc( E(5) + E(5)^4, 2 );
    -2*E(5)-E(5)^2-E(5)^3-2*E(5)^4
    E(5)^2+E(5)^3</pre>
<P>
For <code>Gcd( <var>n</var>, <var>k</var> ) <I>&ne; 1</I></code>, the map <I>e<sub>n</sub> &rarr; e<sub>n</sub><sup>k</sup></I> is not a
field automorphism but only a linear map:
<P>
<pre>    gap> GaloisCyc( E(5)+E(5)^4, 5 ); GaloisCyc( ( E(5)+E(5)^4 )^2, 5 );
    2
    -6</pre>
<P>
The <strong>Galois group</strong> <I>Gal( Q<sub>n</sub>, Q )</I> of the field extension <I>Q<sub>n</sub>/Q</I> is
isomorphic to the group <I>(Z/nZ)<sup>*</sup></I> of prime residues modulo <I>n</I>,
via the isomorphism
<P>
<center><table><tr><td><I>  </td><td><table style="display:inline-table;"><tr><td><I> (Z/nZ)<sup>*</sup> </I></td><td><I> &rarr; </I></td><td><I> Gal( Q<sub>n</sub>, Q ) </I></td></tr><tr><td><I> 
                        k        </I></td><td><I> &rarr;     </I></td><td><I> ( z &rarr; z<sup>* k</sup> )
    </I></td></tr></table style="display:inline-table;"></td><td>  , </I></td></tr></table></center>
<P>
thus the Galois group of the field extension <I>Q<sub>n</sub> / L</I> with
<I>L &sube; Q<sub>n</sub></I> which is simply the factor group of <I>Gal( Q<sub>n</sub>, Q )</I>
modulo the stabilizer of <I>L</I>, and the Galois group of <I>L/L<sup>&prime;</sup></I>
which is the subgroup in this group that stabilizes <I>L<sup>&prime;</sup></I>, are
easily described in terms of <I>(Z/nZ)<sup>*</sup></I> (Generators of
<I>(Z/nZ)<sup>*</sup></I> can be computed using <a href="chap015.htm#SECT007">GeneratorsPrimeResidues</a>
<code>GeneratorsPrimeResidues</code>.).
<P>
The Galois group of a field extension can be computed using <a href="chap006.htm#SECT007">GaloisGroup</a>
<code>GaloisGroup</code>:
<P>
<pre>    gap> f:= NF( [ EY(48) ] );
    NF(48,[ 1, 47 ])
    gap> g:= GaloisGroup( f );
    Group( NFAutomorphism( NF(48,[ 1, 47 ]) , 17 ), NFAutomorphism( NF(48,
    [ 1, 47 ]) , 11 ), NFAutomorphism( NF(48,[ 1, 47 ]) , 17 ) )
    gap> Size( g ); IsCyclic( g ); IsAbelian( g );
    8
    false
    true
    gap> f.base[1]; g.1; f.base[1] ^ g.1;
    E(24)-E(24)^11
    NFAutomorphism( NF(48,[ 1, 47 ]) , 17 )
    E(24)^17-E(24)^19
    gap> Operation( g, NormalBaseNumberField( f ), OnPoints );
    Group( (1,6)(2,4)(3,8)(5,7), (1,4,8,5)(2,3,7,6), (1,6)(2,4)(3,8)
    (5,7) )</pre>
<P>
The number field automorphism <code>NFAutomorphism( <var>F</var>, <var>k</var> )</code> maps each
element <var>x</var> of <var>F</var> to <code>GaloisCyc( <var>x</var>, <var>k</var> )</code>, see <a href="chap013.htm#SECT011">GaloisCyc</a>.
<P><A NAME="SECT009"><h2>15.9 ZumbroichBase</h2></a>
<P><P><P>
<code>ZumbroichBase( <var>n</var>, <var>m</var> )</code>
<P>
returns the set of exponents <I>i</I> where <I>e<sub>n</sub><sup>i</sup></I> belongs to the base
<I><span style="font-family: cursive">{B}</span><sub>n,m</sub></I> of the field extension <I>Q<sub>n</sub>/Q<sub>m</sub></I>; for that, <var>n</var> and <var>m</var>
must be positive integers where <var>m</var> divides <var>n</var>.
<P>
<I><span style="font-family: cursive">{B}</span><sub>n,m</sub></I> is defined as follows:
<P>
Let <I>P</I> denote the set of prime divisors of <I>n</I>,
<I>n = &prod;<sub>p&isin; P</sub> p<sup>&nu;<sub>p</sub></sup></I>,
<I>m = &prod;<sub>p&isin; P</sub> p<sup>&mu;<sub>p</sub></sup></I> with <I>&mu;<sub>p</sub>  &le; &nu;<sub>p</sub></I>, and
<I>{ e<sub>n<sub>1</sub></sub><sup>j</sup>}<sub>j&isin; J</sub> &otimes; { e<sub>n<sub>2</sub></sub><sup>k</sup>}<sub>k&isin; K</sub> = 
{ e<sub>n<sub>1</sub></sub><sup>j</sup> . e<sub>n<sub>2</sub></sub><sup>k</sup>}<sub>j&isin; J, k&isin; K</sub></I>.
<P>
Then
<P>
<center><table><tr><td><I> <span style="font-family: cursive">{B}</span><sub>n,m</sub> = <big>&otimes;</big><sub>p&isin; P</sub>
         <big>&otimes;</big><sub>k=&mu;<sub>p</sub></sub><sup>&nu;<sub>p</sub>-1</sup> { e<sub>p<sup>k+1</sup></sub><sup>j</sup>}<sub>j&isin; J<sub>k,p</sub></sub>
</i>\rm  where  <i>
 J<sub>k,p</sub> = { </td><td><table style="display:inline-table;"><tr><td><I> { 0 } </I></td><td><I> ; </I></td><td><I> k=0, p=2 </I></td></tr><tr><td><I> 
                        { 0, 1 } </I></td><td><I> ; </I></td><td><I> k &gt; 0, p=2 </I></td></tr><tr><td><I> 
                        { 1, ..., p-1 } </I></td><td><I> ; </I></td><td><I> k = 0, p&ne; 2 </I></td></tr><tr><td><I> 
                        { -(p-1)/(2), ..., (p-1)/(2) } </I></td><td><I> ; </I></td><td><I>
                                 k &gt; 0, p&ne; 2
                     </I></td></tr></table style="display:inline-table;"></td><td>. . </I></td></tr></table></center>
<P>
<I><span style="font-family: cursive">{B}</span><sub>n,1</sub></I> is equal to the base <I><span style="font-family: cursive">{B}</span>(Q<sub>n</sub>)</I> of <I>Q<sub>n</sub></I> over the
rationals given in <A href="biblio.htm#Zum89"><cite>Zum89</cite></a>
(Note that the notation here is slightly different from that there.).
<P>
<I><span style="font-family: cursive">{B}</span><sub>n,m</sub></I> consists of roots of unity, it is an integral base
(that is, the integral elements in <I>Q<sub>n</sub></I> have integral coefficients,
see <a href="chap013.htm#SECT002">Cyclotomic Integers</a>), it is a normal base for squarefree <I>n</I> and
closed under complex conjugation for odd <I>n</I>.
<P>
<pre>    gap> ZumbroichBase( 15, 1 ); ZumbroichBase( 12, 3 );
    [ 1, 2, 4, 7, 8, 11, 13, 14 ]
    [ 0, 3 ]
    gap> ZumbroichBase( 10, 2 ); ZumbroichBase( 32, 4 );
    [ 2, 4, 6, 8 ]
    [ 0, 1, 2, 3, 4, 5, 6, 7 ]</pre>
<P><A NAME="SECT010"><h2>15.10 Integral Bases for Number Fields</h2></a>
<P><A name = "I14"></a>

<P>
<code>LenstraBase( <var>n</var>, <var>stabilizer</var>, <var>super</var> )</code>
<P>
returns a list <I><code>[ </code> b<sub>1</sub>, b<sub>2</sub>, ..., b<sub>m</sub> <code> ]</code></I> of lists, each <I>b<sub>i</sub></I>
consisting of integers such that the elements <I>&sum;<sub>j&isin; b<sub>i</sub></sub> <code>E(n)</code><sup>j</sup></I>
form an integral base of the number field <code>NF( <var>n</var>, <var>stabilizer</var> )</code>,
see <a href="chap015.htm#SECT003">Number Field Records</a>.
<P>
<var>super</var> is a list representing a supergroup of the group described by the
list <var>stabilizer</var>; the base is chosen such that the group of <var>super</var> acts
on it, as far as this is possible.
<P>
<strong>Note</strong>: 
The <I>b<sub>i</sub></I> are in general not sets, since for <code><var>stabilizer</var> = <var>super</var></code>,
<I>b<sub>i</sub>[1]</I> is always an element of <code>ZumbroichBase( <var>N</var>, 1 )</code>; this is used
by <code>NF</code> (see <a href="chap015.htm#SECT003">Number Field Records</a>) and <code>Coefficients</code> (see
<a href="chap015.htm#SECT012">Coefficients for Number Fields</a>).
<P>
<var>stabilizer</var> must not contain the stabilizer of a proper cyclotomic
subfield of <I>Q<sub>n</sub></I>.
<P>
<pre>    gap> LenstraBase( 24, [ 1, 19 ], [ 1, 19 ] );          # a base of
    [ [ 1, 19 ], [ 8 ], [ 11, 17 ], [ 16 ] ]               # <I>Q<sub>3</sub>(&radic;6)</I>,
    gap> LenstraBase( 24, [ 1, 19 ], [ 1, 5, 19, 23 ] );   # another one
    [ [ 1, 19 ], [ 5, 23 ], [ 8 ], [ 16 ] ]
    gap> LenstraBase( 15, [ 1, 4 ], PrimeResidues( 15 ) ); # normal base of
    [ [ 1, 4 ], [ 2, 8 ], [ 7, 13 ], [ 11, 14 ] ]          # <I>Q<sub>3</sub>(&radic;5)</I></pre>
<P><A NAME="SECT011"><h2>15.11 NormalBaseNumberField</h2></a>
<P><A name = "I15"></a>

<P>
<code>NormalBaseNumberField( <var>F</var> )</code><BR> 
<code>NormalBaseNumberField( <var>F</var>, <var>x</var> )</code>
<P>
returns a list of cyclotomics which form a normal base of the number
field <var>F</var> (see <a href="chap015.htm#SECT003">Number Field Records</a>), i.e. a vector space base of the
field <var>F</var> over its subfield <code><var>F</var>.field</code> which is closed under the action
of the Galois group <code><var>F</var>.galoisGroup</code> of the field extension.
<P>
The normal base is computed as described in <A href="biblio.htm#Art68"><cite>Art68</cite></a>: 
Let <I>&Phi;</I> denote the polynomial of a field extension <I>L/L<sup>&prime;</sup></I>,
<I>&Phi;<sup>&prime;</sup></I> its derivative and <I>&alpha;</I> one of its roots;
then for all except finitely many elements <I>z&isin; L<sup>&prime;</sup></I>, the
conjugates of <I>(&Phi;(z))/((z-&alpha;).&Phi;<sup>&prime;</sup>(&alpha;))</I>
form a normal base of <I>L/L<sup>&prime;</sup></I>.
<P>
When <code>NormalBaseNumberField( <var>F</var> )</code> is called, <I>z</I> is chosen as integer,
starting with 1, <code>NormalBaseNumberField( <var>F</var>, <var>x</var> )</code> starts with <I>z=<var>x</var></I>,
increasing by one, until a normal base is found.
<P>
<pre>    gap> NormalBaseNumberField( CF( 5 ) );
    [ -E(5), -E(5)^2, -E(5)^3, -E(5)^4 ]
    gap> NormalBaseNumberField( CF( 8 ) );
    [ 1/4-2*E(8)-E(8)^2-1/2*E(8)^3, 1/4-1/2*E(8)+E(8)^2-2*E(8)^3, 
      1/4+2*E(8)-E(8)^2+1/2*E(8)^3, 1/4+1/2*E(8)+E(8)^2+2*E(8)^3 ]</pre>
<P><A NAME="SECT012"><h2>15.12 Coefficients for Number Fields</h2></a>
<P><P><P>
<code>Coefficients( <var>z</var> )</code><BR> 
<code>Coefficients( <var>F</var>, <var>z</var> )</code>
<P>
return the coefficient vector <var>cfs</var> of <var>z</var> with respect to a particular
base <var>B</var>, i.e., we have <code><var>z</var> = <var>cfs</var> * <var>B</var></code>.  If <var>z</var> is the only
argument, <var>B</var> is the default base of the default field of <var>z</var>
(see <a href="chap015.htm#SECT005">DefaultField and Field for Cyclotomics</a>), otherwise <var>F</var> must be a
number field containing <var>z</var>, and we have <code><var>B</var> = <var>F</var>.base</code>.
<P>
The <strong>default base</strong> of a number field is defined as follows:
<P>
For the field extension <I>Q<sub>n</sub>/Q<sub>m</sub></I> (i.e. both <var>F</var> and <code><var>F</var>.field</code> are
cyclotomic fields), <var>B</var> is the base <I><span style="font-family: cursive">{B}</span><sub>n,m</sub></I> described in
<a href="chap015.htm#SECT009">ZumbroichBase</a>.  This is an integral base which is closely related to
the internal representation of cyclotomics, thus the coefficients are
easy to compute, using only the <code>zumbroichbase</code> fields of <var>F</var> and
<code><var>F</var>.field</code>.
<P>
For the field extension <I>L/Q</I> where <I>L</I> is not a cyclotomic field, <var>B</var> is
the integral base described in <a href="chap015.htm#SECT010">Integral Bases for Number Fields</a> that
consists of orbitsums on roots of unity.  The computation of coefficients
requires the field <code><var>F</var>.coeffslist</code>.
<P>
<strong>in future</strong>: replace <I>Q</I> by <I>Q<sub>m</sub></I>
<P>
In all other cases, <code><var>B</var> = NormalBaseNumberField( <var>F</var> )</code>.  Here, the
coefficients of <var>z</var> with respect to <var>B</var> are computed using
<code><var>F</var>.coeffslist</code> and <code><var>F</var>.coeffsmat</code>.
<P>
If <code><var>F</var>.base</code> is not the default base of <var>F</var>, the coefficients with
respect to the default base are multiplied with <code><var>F</var>.basechangemat</code>.
The only possibility where it is allowed to prescribe a base is when the
field is constructed (see <a href="chap015.htm#SECT003">Number Field Records</a>, <a href="chap015.htm#SECT004">Cyclotomic Field
Records</a>).
<P>
<pre>    gap> F:= NF( [ ER(3), EB(7) ] ) / NF( [ ER(3) ] );
    NF(84,[ 1, 11, 23, 25, 37, 71 ])/NF(12,[ 1, 11 ])
    gap> Coefficients( F, ER(3) ); Coefficients( F, EB(7) );
    [ -E(12)^7+E(12)^11, -E(12)^7+E(12)^11 ]
    [ 11*E(12)^4+7*E(12)^7+11*E(12)^8-7*E(12)^11, 
      -10*E(12)^4-7*E(12)^7-10*E(12)^8+7*E(12)^11 ]
    gap> G:= CF( 8 ); H:= CF( 0, NormalBaseNumberField( G ) );
    CF(8)
    CF( 0,[ 1/4-2*E(8)-E(8)^2-1/2*E(8)^3, 1/4-1/2*E(8)+E(8)^2-2*E(8)^3, 
      1/4+2*E(8)-E(8)^2+1/2*E(8)^3, 1/4+1/2*E(8)+E(8)^2+2*E(8)^3 ])
    gap> Coefficients( G, ER(2) ); Coefficients( H, ER(2) );
    [ 0, 1, 0, -1 ]
    [ -1/3, 1/3, 1/3, -1/3 ]</pre>
<P><A NAME="SECT013"><h2>15.13 Domain Functions for Number Fields</h2></a>
<P><P><P>
The  following  functions  of <code>FieldOps</code>  (see chapter  <a href="chap006.htm">Fields</a>)  are
overlaid in <code>NumberFieldOps</code>:
<P>
<code>/</code>, <code>Coefficients</code>, <code>Conjugates</code>, <code>GaloisGroup</code>, <code>in</code>,
<code>Intersection</code>, <code>Norm</code>, <code>Order</code>, <code>Print</code>, <code>Random</code>, <code>Trace</code>.
<P>
The  following  functions   of   <code>NumberFieldOps</code>   are   overlaid  in
<code>CyclotomicFieldOps</code>:
<P>
<code>Coefficients</code>, <code>Conjugates</code>, <code>in</code>, <code>Norm</code>, <code>Print</code>, <code>Trace</code>.
<P><a href ="chap014.htm">Previous</a> <a href = "index.htm">Up</a> <a href ="chap016.htm">Next</a><BR><a href = "theindex.htm">Index</a>
<P>
<address>gap3-jm<br>11 Mar 2019</address></body></html>