<html><head><title>GAP3 Manual: 92 Representations of Iwahori-Hecke algebras</title></head>
<body bgcolor="ffffff">
<h1>92 Representations of Iwahori-Hecke algebras</h1>
<P><P><P>
Let  <I>W,S</I> be a  finite Coxeter system  and <I>H =  H(W, R, {u<sub>s,i</sub>}<sub>s&isin;
S,i&isin;{0,1}</sub>)</I> a corresponding Iwahori-Hecke algebra over the ring <I>R</I> as
defined   in  chapter  <a href="chap091.htm">Iwahori-Hecke  algebras</a>.  We  shall  now  describe
functions for dealing with representations and characters of <I>H</I>.
<P>
The  fact that we know a presentation of  <I>H</I> makes it easy to check that a
list  of matrices  <I>M<sub>s</sub> &isin;  R<sup>d &times;  d</sup></I> for  <I>s&isin; S</I> gives rise to a
representation:  there is a  (unique) representation <I>&rho;:H &rarr;
R<sup>d  &times; d</sup></I> such that <I>&rho;(T<sub>s</sub>)=M<sub>s</sub></I> for all <I>s&isin; S</I>, if and only if
the  matrices <I>M<sub>s</sub></I> satisfy the same  relations as those for the generators
<I>T<sub>s</sub></I> of <I>H</I>.
<P>
A  general approach for the construction  of representations is in terms of
<I>W</I>-graphs,   see   <A href="biblio.htm#KL79"><cite>KL79</cite></a>, p.165.   Any   such  <I>W</I>-graph  carries  a
representation  of <I>H</I>. Note that in this approach, it is necessary to know
the  square  roots  of  the  parameters  of  <I>H</I>. The simplest example, the
standard <I>W</I>-graph defined in <A href="biblio.htm#KL79"><cite>KL79</cite></a>, Ex.~6.2 yields a
``deformation'' of the natural reflection representation of <I>W</I>. This can
be produced in <strong>CHEVIE</strong> using the function
<code>HeckeReflectionRepresentation</code>.
<P>
Another  possibility   to  construct    <I>W</I>-graphs   is by   using    the
Kazhdan-Lusztig theory of left cells (see <A href="biblio.htm#KL79"><cite>KL79</cite></a>); see the following
chapter for more details.
<P>
In  a similar  way as  the ordinary  character table  of the finite Coxeter
group  <I>W</I> is defined, one also has a character table for the Iwahori-Hecke
algebra  <I>H</I> in the  case when the  ground ring <I>A</I>  is a field such <I>H</I> is
split  and semisimple.  The generic  choice for  such a  ground ring is the
rational   function   field   <I>K=<span style="text-decoration: overline">&#x211A;</span>(v<sub>s</sub>)<sub>s&isin;   S</sub></I>  where  the
parameters of the corresponding algebra <I>H<sub>K</sub></I> satisfy
<I>-u<sub>s,0</sub>/u<sub>s,1</sub>=v<sub>s</sub><sup>2</sup></I> for all <I>s</I>.
<P>
By Tits' Deformation Theorem (see <A href="biblio.htm#CR87"><cite>CR87</cite></a>, Sec.~68, for example), the
algebra  <I>H<sub>K</sub></I> is (abstractly) isomorphic to  the group algebra of <I>W</I> over
<I>K</I>.  Moreover, we have  a bijection between  the irreducible characters of
<I>H<sub>K</sub></I>  and <I>W</I>, given as follows. Let <I>&chi;</I> be an irreducible character of
<I>H<sub>K</sub></I>. Then we have <I>&chi;(T<sub>w</sub>) &isin; A</I> where <I>A=<span style="text-decoration: overline">&#x2124;</span>[v<sub>s</sub>]<sub>s&isin; S</sub></I>
and   <I><span style="text-decoration: overline">&#x2124;</span></I>   denotes   the   ring   of   algebraic  integers  in
<I><span style="text-decoration: overline">&#x211A;</span></I>.  We  can  find  a  ring  homomorphism  <I>f:  A &rarr;
<span style="text-decoration: overline">&#x211A;</span></I>  such  that  <I>f(a)=a</I>  for  all  <I>a  &isin;  <span style="text-decoration: overline">&#x2124;</span></I> and
<I>f(v<sub>s</sub>)=1</I>  for <I>s&isin; S</I>. Then it turns  out that the function <I>&chi;<sub>f</sub> : w
&rarr;   f(&chi;(T<sub>w</sub>))</I>  is  an  irreducible  character  of  <I>W</I>,  and  the
assignment   <I>&chi;  &rarr;   &chi;<sub>f</sub></I>  defines   a  bijection  between  the
irreducible characters of <I>H<sub>K</sub></I> and <I>W</I>.
<P>
Now this bijection does depend on the choice of <I>f</I>. But one should keep in
mind that this only plays a role in the case where <I>W</I> is a
non-crystallographic  Coxeter group. In all  other cases, as is well-known,
the  character  table  of  <I>W</I>  is  rational;  moreover,  the values of the
irreducible  characters of  <I>H<sub>K</sub></I> on  basis elements  <I>T<sub>w</sub></I> lie in the ring
<I>&#x2124;[v<sub>s</sub>]<sub>s&isin; S</sub></I>.
<P>
The  character  table of <I>H<sub>K</sub></I>   is   defined to  be  the square   matrix
<I>(&chi;(T<sub>w</sub>))</I> where <I>&chi;</I> runs  over the irreducible characters of <I>H<sub>K</sub></I>
and <I>w</I> runs over a set of representatives of <em> minimal length</em> in the
conjugacy classes of <I>W</I>.  The character tables of Iwahori-Hecke algebras
(in this sense) are known  for all types:  the  table for type <I>A</I>  was
first  computed   by Starkey (see    the   description of   his work   in
<A href="biblio.htm#Car86"><cite>Car86</cite></a>);  then different   descriptions with  different proofs were
given  in  <A href="biblio.htm#Ram91"><cite>Ram91</cite></a> and   <A href="biblio.htm#Pfe94b"><cite>Pfe94b</cite></a>.    The tables for  the   non
crystallographic types <I>I<sub>2</sub>(m)</I>, <I>H<sub>3</sub></I>, <I>H<sub>4</sub></I> can be constructed from the
explicit   matrix    representations    given   in <A href="biblio.htm#CR87"><cite>CR87</cite></a>, Sec.~67C,
<A href="biblio.htm#Lus81"><cite>Lus81</cite></a> and <A href="biblio.htm#AL82"><cite>AL82</cite></a>, respectively.  For  the classical types <I>B</I>
and  <I>D</I> see <A href="biblio.htm#HR94"><cite>HR94</cite></a> and  <A href="biblio.htm#Pfe96"><cite>Pfe96</cite></a>.  The tables for the remaining
exceptional  types   were  computed  in  <A href="biblio.htm#Gec94"><cite>Gec94</cite></a>,  <A href="biblio.htm#Gec95"><cite>Gec95</cite></a>  and
<A href="biblio.htm#GM97"><cite>GM97</cite></a>.
<P>
If <I>H</I>  is an Iwahori-Hecke algebra over  an arbitrary ground ring <I>R</I> as
above, then the <strong>GAP3</strong>  function <code>CharTable</code> applied to the corresponding
record returns a character table record which  is build up in exactly the
same way as for the finite Coxeter group  <I>W</I> itself but where the record
component <code>irreducibles</code> contains the character values which are obtained
from  those of the generic multi-parameter  algebra <I>H<sub>K</sub></I> by specializing
the indeterminates <I>v<sub>i</sub></I> to the variables in <code>rootParameter</code>.
<P><P>
<H3> Subsections</H3>
<oL>
<LI> <A HREF="chap092.htm#SECT001">HeckeReflectionRepresentation</a>
<LI> <A HREF="chap092.htm#SECT002">CheckHeckeDefiningRelations</a>
<LI> <A HREF="chap092.htm#SECT003">CharTable for Hecke algebras</a>
<LI> <A HREF="chap092.htm#SECT004">Representations for Hecke algebras</a>
<LI> <A HREF="chap092.htm#SECT005">PoincarePolynomial</a>
<LI> <A HREF="chap092.htm#SECT006">SchurElements for Iwahori-Hecke algebras</a>
<LI> <A HREF="chap092.htm#SECT007">SchurElement for Iwahori-Hecke algebras</a>
<LI> <A HREF="chap092.htm#SECT008">GenericDegrees</a>
<LI> <A HREF="chap092.htm#SECT009">LowestPowerGenericDegrees for Hecke algebras</a>
<LI> <A HREF="chap092.htm#SECT010">HeckeCharValuesGood</a>
</ol>
<A NAME="SECT001"><h2>92.1 HeckeReflectionRepresentation</h2></a>
<P><P>
<A name = "I0"></a>

<P>
<code>HeckeReflectionRepresentation( <var>W</var> )</code>
<P>
returns a list  of matrices which give  the reflection  representation of
the Iwahori-Hecke algebra  corresponding to the  Coxeter group <var>W</var>.   The
function <code>Hecke</code> must have been applied to the record <var>W</var>.
<P>
<pre>    gap> v:= X( Rationals );;  v.name := "v";;
    gap> H := Hecke(CoxeterGroup( "B", 2) , v^2, v);
    Hecke(B2,v^2,v)
    gap> ref:= HeckeReflectionRepresentation( H );
    [ [ [ -v^0, 0*v^0 ], [ -v^2, v^2 ] ],
      [ [ v^2, -2*v^0 ], [ 0*v^0, -v^0 ] ] ]</pre>
<P>
<pre>    gap> H := Hecke( CoxeterGroup( "H", 3 ));;
    gap> HeckeReflectionRepresentation( H );
    [ [ [ -1, 0, 0 ], [ -1, 1, 0 ], [ 0, 0, 1 ] ],
      [ [ 1, E(5)+2*E(5)^2+2*E(5)^3+E(5)^4, 0 ], [ 0, -1, 0 ],
          [ 0, -1, 1 ] ], [ [ 1, 0, 0 ], [ 0, 1, -1 ], [ 0, 0, -1 ] ] ]</pre>
<P><A NAME="SECT002"><h2>92.2 CheckHeckeDefiningRelations</h2></a>
<P><P>
<A name = "I1"></a>

<P>
<code>CheckHeckeDefiningRelations( <var>H</var> , <var>t</var> )</code>
<P>
returns true or false, according  to whether a  given set <var>t</var> of matrices
corresponding to the standard generators  of the Coxeter group <var>Group(H)</var>
defines a representation of the Iwahori-Hecke algebra <var>H</var> or not.
<P>
<pre>    gap> H := Hecke(CoxeterGroup( "F", 4 ));;
    gap> r := HeckeReflectionRepresentation( H );;
    gap> CheckHeckeDefiningRelations( H, r );
    true</pre>
<P><A NAME="SECT003"><h2>92.3 CharTable for Hecke algebras</h2></a>
<P><P>
<A name = "I2"></a>

<code>CharTable( <var>H</var> )</code>
<P>
<code>CharTable</code>  returns the  character  table record  of the  Iwahori-Hecke
algebra <var>H</var>.  This is  basically the  same as the  character table  of a
Coxeter group  described earlier with  the exception that  the component
<code>irreducibles</code>  contains the  matrix of  the values  of the  irreducible
characters  of  the generic  Iwahori-Hecke  algebra  specialized at  the
parameters  in the  component <code>parameter</code>  of  <var>H</var>. Thus,  if all  these
parameters are  equal to <I>1  &isin; &#x211A;</I>  then the  component <code>irreducibles</code>
just contains  the ordinary  character table  of the  underlying Coxeter
group.
<P>
The  function <code>CharTable</code>  first recognizes  the  type of <var>H</var>, then calls
special functions  for each type involved  in  <var>H</var> and finally  forms the
direct product of all these tables.
<P><P>
<pre>    gap> W := CoxeterGroup( "G", 2 );;
    gap> u := X( Rationals );;  u.name := "u";;
    gap> v := X( LaurentPolynomialRing( Rationals ) );; v.name := "v";;
    gap> u := u * v^0;;
    gap> H := Hecke( W, [ u^2, v^2 ], [ u, v ] );
    Hecke(G2,[u^2,v^2],[u,v])
    gap> Display( CharTable( H ) );
    H(G2)

                2  2     2     2      1       1        2
                3  1     .     .      1       1        1

                  A0   ~A1    A1     G2      A2   A1+~A1
               2P A0    A0    A0     A2      A2       A0
               3P A0   ~A1    A1 A1+~A1      A0   A1+~A1

    phi{1,0}       1   v^2   u^2 u^2v^2  u^4v^4   u^6v^6
    phi{1,6}       1    -1    -1      1       1        1
    phi{1,3}'      1   v^2    -1   -v^2     v^4     -v^6
    phi{1,3}''     1    -1   u^2   -u^2     u^4     -u^6
    phi{2,1}       2 v^2-1 u^2-1    -uv -u^2v^2  2u^3v^3
    phi{2,2}       2 v^2-1 u^2-1     uv -u^2v^2 -2u^3v^3
    </pre>
<P>
As  mentioned before,  the record  components <code>classparam</code>, <code>classnames</code>
and  <code>irredinfo</code> contain canonical labels and parameters for the classes
and  the  characters  (see  the  introduction  to  chapter  <a href="chap087.htm">Classes and
representations  for reflection groups</a>  and also <a href="chap087.htm#SECT004">ChevieCharInfo</a>). For
direct  products, sequences of  such canonical labels  of the individual
types are given.
<P>
We can also  have character tables  for algebras where the parameters are
not necessarily indeterminates:
<P>
<pre>    gap> H1 := Hecke( W, [ E(6)^2, E(6)^4 ],[ E(6), E(6)^2 ] );
    Hecke(G2,[E3,E3^2],[-E3^2,E3])
    gap> ct := CharTable( H1 );
    CharTable( "H(G2)" )
    gap> Display( ct );
    H(G2)

                2  2             2             2      1    1      2
                3  1             .             .      1    1      1

                  A0           ~A1            A1     G2   A2 A1+~A1
               2P A0            A0            A0     A2   A2     A0
               3P A0           ~A1            A1 A1+~A1   A0 A1+~A1

    phi{1,0}       1          E3^2            E3      1    1      1
    phi{1,6}       1            -1            -1      1    1      1
    phi{1,3}'      1          E3^2            -1  -E3^2   E3     -1
    phi{1,3}''     1            -1            E3    -E3 E3^2     -1
    phi{2,1}       2 (-3-ER(-3))/2 (-3+ER(-3))/2      1   -1     -2
    phi{2,2}       2 (-3-ER(-3))/2 (-3+ER(-3))/2     -1   -1      2

    gap> RankMat( ct.irreducibles );
    5</pre>
<P>
The last result tells us that the  specialized character table is no more
invertible.
<P>
Character tables   of    Iwahori--Hecke  algebras were   introduced    in
<A href="biblio.htm#GP93"><cite>GP93</cite></a>; see also  the  introduction  to  this  chapter  for  further
information about the origin of the various tables.
<P><A NAME="SECT004"><h2>92.4 Representations for Hecke algebras</h2></a>
<P><P>
<A name = "I3"></a>

<code>Representations( <var>H</var>, <var>l</var> )</code>
<P>
This  function  returns  the  list  of representations of the Iwahori-Hecke
algebra <var>H</var>. Each representation is returned as a list of the matrix images
of the generators <I>T<sub>s</sub></I>.
<P>
If  there is a  second argument, it  can be a  list of indices (or a single
integer) and only the representations with these indices (or that index) in
the list of all representations are returned.
<P>
<pre>    gap> W:=CoxeterGroup("I",2,5);
    CoxeterGroup("I",2,5)
    gap> q:=X(Cyclotomics);;q.name:="q";;
    gap> H:=Hecke(W,q);
    Hecke(I2(5),q)
    gap> Representations(H);
    [ [ [ [ q ] ], [ [ q ] ] ], [ [ [ -q^0 ] ], [ [ -q^0 ] ] ],
      [ [ [ -q^0, q^0 ], [ 0*q^0, q ] ],
          [ [ q, 0*q^0 ], [ (-E(5)-2*E(5)^2-2*E(5)^3-E(5)^4)*q, -q^0 ] ] ],
      [ [ [ -q^0, q^0 ], [ 0*q^0, q ] ], [ [ q, 0*q^0 ], [ (-2*E(5)-E(5)^2
                     -E(5)^3-2*E(5)^4)*q, -q^0 ] ] ] ]</pre>
<P>
The   models  implemented  for  types  <I>B<sub>n</sub></I>  and  <I>D<sub>n</sub></I>  involve  rational
fractions, thus work only with algebras whose parameters are <code>Mvp</code>s.
<P>
<pre>    gap> W:=CoxeterGroup("B",3);
    CoxeterGroup("B",3)
    gap> H:=Hecke(W,Mvp("x"));
    Hecke(B3,x)
    gap> Representations(H,2);
    [ [ [ -1, 0, 0 ], [ 0, x, 0 ], [ 0, 0, x ] ],
      [ [ (-x+x^2)/(1+x), (1+x^2)/(1+x), 0 ],
          [ 2x/(1+x), (-1+x)/(1+x), 0 ], [ 0, 0, -1 ] ],
      [ [ -1, 0, 0 ], [ 0, -1/2+1/2x, 1/2+1/2x ],
          [ 0, 1/2+1/2x, -1/2+1/2x ] ] ]</pre>
<P><A NAME="SECT005"><h2>92.5 PoincarePolynomial</h2></a>
<P><P>
<A name = "I4"></a>

<P>
<code>PoincarePolynomial( <var>H</var> )</code>
<P>
The  Poincar&eacute;  polynomial of  the Hecke  algebra <var>H</var>,  which is
equal  to <code>SchurElements(<var>H</var>)[<var>ind</var>]</code>  where <var>ind</var>  is the  position of the
1-dimensional  index representation in the character table of <var>H</var>, that is,
the   representation  which  maps  <I>T<sub>s</sub></I>  to  the  corresponding  parameter
<I>u<sub>s,0</sub></I>.
<P>
<pre>    gap> q := X( Rationals );; q.name := "q";;
    gap> W := CoxeterGroup( "G", 2 );; H := Hecke( W, q );
    Hecke(G2,q)
    gap> PoincarePolynomial( H );
    q^6 + 2*q^5 + 2*q^4 + 2*q^3 + 2*q^2 + 2*q + 1</pre>
<P><A NAME="SECT006"><h2>92.6 SchurElements for Iwahori-Hecke algebras</h2></a>
<P><P>
<A name = "I5"></a>

<P>
<code>SchurElements( <var>H</var> )</code>
<P>
returns the list of constants  <I>S<sub>&chi;</sub></I> arising from the Schur relations
for the irreducible characters <I>&chi;</I>  of the Iwahori-Hecke algebra <var>H</var>,
that is <I>&delta;<sub>w,1</sub>=&sum;<sub>&chi;</sub> &chi;(T<sub>w</sub>)/S<sub>&chi;</sub></I>  where <I>&delta;</I> is the
Kronecker symbol.
<P>
The  element  <I>S<sub>&chi;</sub></I> also  equal  to  <I>P/D<sub>&chi;</sub></I>  where <I>P</I>  is  the
Poincare  polynomial and  <I>D<sub>&chi;</sub></I> is  the generic  degree of  <I>&chi;</I>.
Note, however, that  this only works if <I>D<sub>&chi;</sub>  &ne;  0</I>. (We can have
<I>D<sub>&chi;</sub>=0</I>  if the  parameters of  <I>H</I>  are suitably  chosen roots  of
unity, for example.)  The ordering of the Schur  elements corresponds to
the ordering of the characters  as returned by the function <code>CharTable</code>.
<P>
<pre>    gap> u := X( Rationals );; u.name := "u";;
    gap> v := X( LaurentPolynomialRing( Rationals ) );; v.name := "v";;
    gap> W := CoxeterGroup("G",2);;
    gap> schur := SchurElements( Hecke( W, [ u ^ 2, v ^ 2 ]));
    #warning: u*v chosen as 2nd root of (u\^2)*v\^2
    [ (u^6 + u^4)*v^6 + (u^6 + 2*u^4 + u^2)*v^4 + (u^4 + 2*u^2 + 1)*v^
        2 + (u^2 + 1), (1 + u^(-2)) + (1 + 2*u^(-2) + u^(-4))*v^(
        -2) + (u^(-2) + 2*u^(-4) + u^(-6))*v^(-4) + (u^(-4) + u^(-6))*v^(
        -6), (u^(-4) + u^(-6))*v^6 + (u^(-2) + 2*u^(-4) + u^(-6))*v^4 + (
        1 + 2*u^(-2) + u^(-4))*v^2 + (1 + u^(-2)),
      (u^2 + 1) + (u^4 + 2*u^2 + 1)*v^(-2) + (u^6 + 2*u^4 + u^2)*v^(
        -4) + (u^6 + u^4)*v^(-6), (2*u^0)*v^2 + (-2*u + 2*u^(-1))*v + (
        2*u^2 - 2 + 2*u^(-2)) + (2*u - 2*u^(-1))*v^(-1) + (2*u^0)*v^(-2),
      (2*u^0)*v^2 + (2*u - 2*u^(-1))*v + (2*u^2 - 2 + 2*u^(-2)) + (-2*u +
        2*u^(-1))*v^(-1) + (2*u^0)*v^(-2) ]</pre>
<P>
The  Poincar&eacute;  polynomial   is  just  the   Schur  element
corresponding to the trivial (or index) representation:
<P>
<pre>    gap> schur[PositionId(W)];
    (u^6 + u^4)*v^6 + (u^6 + 2*u^4 + u^2)*v^4 + (u^4 + 2*u^2 + 1)*v^
    2 + (u^2 + 1)</pre>
<P>
(note  that the  trivial character  is not  always the  first character,
which is why we use  <code>PositionId</code>) For further information about generic
degrees and connections with the  representation theory of finite groups
of Lie type, see <A href="biblio.htm#BC72"><cite>BC72</cite></a> and <A href="biblio.htm#Car85"><cite>Car85</cite></a>.
<P><A NAME="SECT007"><h2>92.7 SchurElement for Iwahori-Hecke algebras</h2></a>
<P><P>
<A name = "I6"></a>

<P>
<code>SchurElement( <var>H</var>, <var>phi</var> )</code>
<P>
returns  the  Schur  element  (see  <code>Schur  Elements  for  Iwahori-Hecke
algebras</code>)  of  the  Iwahori-Hecke   algebra  <var>H</var>  for  the  irreducible
character  of  <var>H</var>  of  parameter <var>phi</var>  (see  <code>CharParams</code>  in  section
<a href="chap103.htm">CHEVIE utility functions</a>).
<P>
<pre>    gap> u := X( Rationals );; u.name := "u";;
    gap> v := X( LaurentPolynomialRing( Rationals ) );; v.name := "v";;
    gap> H := Hecke( CoxeterGroup( "G", 2 ), [ u , v]);
    Hecke(G2,[u,v])
    gap> SchurElement( H, [ [ 1, 3, 1] ] );
    (u^(-2) + u^(-3))*v^3 + (u^(-1) + 2*u^(-2) + u^(-3))*v^2 + (1 + 2*u^(
    -1) + u^(-2))*v + (1 + u^(-1))</pre>
<P><A NAME="SECT008"><h2>92.8 GenericDegrees</h2></a>
<P><P>
<A name = "I7"></a>

<P>
We  do not  have a  function for  the generic  degrees of  an Iwahori-Hecke
algebra  since they are not always  defined (for example, if the parameters
of  the  algebra  are  roots  of  unity).  If they are defined, they can be
computed with the command:
<P>
<code>   List( SchurElements( <var>H</var> ), x -> PoincarePolynomial( <var>H</var> ) / x );</code>
<P>
(See <a href="chap092.htm#SECT005">PoincarePolynomial</a> and <a href="chap090.htm#SECT004">SchurElement</a>.)
<P><A NAME="SECT009"><h2>92.9 LowestPowerGenericDegrees for Hecke algebras</h2></a>
<P><P>
<A name = "I8"></a>

<P>
<code>LowestPowerGenericDegrees( <var>H</var> )</code>
<P>
<var>H</var>  should  be  an  Iwahori-Hecke  algebra  all  of  whose  parameters are
monomials  in the same indeterminate. <code>LowestPowerGenericDegrees</code> returns a
list  holding  the  <I>a</I>-function  for  all  irreducible  characters of this
algebra,  that is,  for each  character <I>&chi;</I>,  the valuation of the Schur
element  of <I>&chi;</I>. The ordering of  the result corresponds to the ordering
of  the characters  in <code>CharTable(H)</code>.  One should  note that this function
first  computes  explicitly  the  Schur  elements,  so  for a one-parameter
algebra, <code>LowestPowerGenericDegrees(Group(H))</code> may be much faster.
<P>
<pre>    gap> q:=X(Rationals);;q.name:="q";;
    gap> H:=Hecke(CoxeterGroup("B",4),[q^2,q]);
    Hecke(B4,[q^2,q,q,q])
    gap> LowestPowerGenericDegrees(H);
    [ 7, 6, 7, 12, 20, 3, 5, 3, 7, 6, 13, 2, 3, 10, 1, 4, 2, 7, 0, 3 ]</pre>
<P><A NAME="SECT010"><h2>92.10 HeckeCharValuesGood</h2></a>
<P><P>
<A name = "I9"></a>

<P>
<code>HeckeCharValuesGood( <var>H</var>, <var>w</var> )</code>
<P>
Let <var>H</var>  be a Hecke  algebra for the Coxeter  group <code>CoxeterGroup(<var>H</var>)</code>,
let  <var>w</var>  be  a  good   element  of  <code>CoxeterGroup(<var>H</var>)</code>  in  the  sense
of  <A href="biblio.htm#GM97"><cite>GM97</cite></a>  (the representatives  of  conjugacy  classes stored  in
<strong>CHEVIE</strong> are such elements), and let <I>d</I> be the order of <I>w</I>.
<P>
<code>HeckeCharValuesGood</code> computes the values  of the irreducible characters
of the  Iwahori-Hecke algebra  <var>HW</var> on  <I>T<sub>w</sub><sup>d</sup></I>. The  point is  that the
character  table of  the Hecke  algebra is  not used,  and that  all the
eigenvalues of <I>T<sub>w</sub><sup>d</sup></I>  are monomials in <code>H.parameters</code>, so  this can be
used to  find the  absolute value  of the eigenvalues  of <I>T<sub>w</sub></I>,  a step
towards computing the character table of the Hecke algebra.
<P>
<pre>    gap> q:=X(Rationals);;q.name:="q";;
    gap> H:=Hecke(CoxeterGroup("B",4),[q^2,q]);
    Hecke(B4,[q^2,q,q,q])
    gap> HeckeCharValuesGood( H, [ 1, 2, 3 ] );
    [ q^12, 4*q^12, 3*q^12 + 3*q^8, 3*q^8 + 1, q^0, 2*q^18 + q^12,
      6*q^12, 2*q^18 + 3*q^16 + 3*q^12, 3*q^12 + 3*q^8 + 2*q^6,
      3*q^16 + 3*q^8, 2*q^6 + 1, 2*q^18, 3*q^16 + 3*q^12, 2*q^6,
      q^24 + 2*q^18, 4*q^12, q^24 + 3*q^16, q^12 + 2*q^6, q^24, q^12 ]</pre>
<P><a href ="chap091.htm">Previous</a> <a href = "index.htm">Up</a> <a href ="chap093.htm">Next</a><BR><a href = "theindex.htm">Index</a>
<P>
<address>gap3-jm<br>11 Mar 2019</address></body></html>