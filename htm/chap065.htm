<html><head><title>GAP3 Manual: 65 GRIM (Groups of Rational and Integer Matrices)</title></head>
<body bgcolor="ffffff">
<h1>65 GRIM (Groups of Rational and Integer Matrices)</h1>
<P><P><P>
\def\GRIM{\sf GRIM}
<P>
This chapter describes the main functions of the \GRIM (Version 1.0)
share library package for testing finiteness of rational and integer matrix
groups.  All functions described here are written entirely in the <strong>GAP3</strong>
language.
<P>
Before using any of the functions described in this chapter you must load
the package by calling the statement
<P>
<pre>    gap> RequirePackage( "grim" );

    Loading  GRIM (Groups of Rational and Integer Matrices) 1.0,
    by beals@math.arizona.edu </pre>
<P><P>
<H3> Subsections</H3>
<oL>
<LI> <A HREF="chap065.htm#SECT001">Functions to test finiteness and integrality</a>
<LI> <A HREF="chap065.htm#SECT002">IsFinite for rational matrix groups</a>
<LI> <A HREF="chap065.htm#SECT003">InvariantLattice for rational matrix groups</a>
<LI> <A HREF="chap065.htm#SECT004">IsFiniteDeterministic for integer matrix groups</a>
</ol>
<A NAME="SECT001"><h2>65.1 Functions to test finiteness and integrality</h2></a>
<P><P><P>
The  following sections describe  the functions  used to test finiteness
and integrality of rational matrix groups.
<P><A NAME="SECT002"><h2>65.2 IsFinite for rational matrix groups</h2></a>
<P><P><P>
<code>IsFinite( <var>G</var> )</code>
<P>
The group <var>G</var>, which must consist of rational matrices,
is tested for finiteness.
<P>
A group of rational matrices is finite iff the following two conditions hold: 
There is a basis with respect to which all elements of <var>G</var> have integer
entries, and <var>G</var> preserves a positive definite quadratic form.
<P>
If <var>G</var> contains non-integer matrices, then IsFinite first calls
InvariantLattice (see <a href="chap065.htm#SECT003">InvariantLattice for rational matrix groups</a>) to
find a basis with respect to which all elements of <var>G</var> are integer
matrices.
<P>
IsFinite then finds a positive definite quadratic form, or determines
that none exists.  If <var>G</var> is finite, then the quadratic form is stored
in <var>G</var>.quadraticForm.
<P>
<pre>gap> a := [[1,1/2],[0,-1]];; G := Group(a);;
gap> IsFinite(G);
true
gap> L := G.invariantLattice;;
gap> L*a*L^(-1);
[ [ 1, 1 ], [ 0, -1 ] ]
gap> B := G.quadraticForm;
[ [ 4, 1 ], [ 1, 3/2 ] ]
gap> TransposedMat(a)*B*a;
[ [ 4, 1 ], [ 1, 3/2 ] ]</pre>
<P><P>
This function is Las Vegas: it is randomized, but the randomness only
affects the running time, not the correctness of the output.
(See <a href="chap065.htm#SECT004">IsFiniteDeterministic for integer matrix groups</a>.)
<P><A NAME="SECT003"><h2>65.3 InvariantLattice for rational matrix groups</h2></a>
<P><P><P>
<code>InvariantLattice( <var>G</var> )</code>
<P>
This function returns a lattice <I>L</I> (given by a basis)
which is <var>G</var>-invariant.  That is, for any <I>A</I> in <var>G</var>,
<I>L A L<sup>-1</sup></I> is an integer matrix.
<P>
<I>L</I> is also stored in <var>G</var>.invariantLattice, and the conjugate
group <I>L <var>G</var> L<sup>-1</sup></I> is stored in <var>G</var>.integerMatrixGroup.
<P>
This function finds an <I>L</I> unless <var>G</var> contains elements of 
non-integer trace (in which case no such <I>L</I> exists, and
<var>false</var> is returned).
<P>
<pre>gap> a := [[1,1/2],[0,-1]];; G := Group(a);;
gap> L := InvariantLattice(G);;
gap> L*a*L^(-1);
[ [ 1, 1 ], [ 0, -1 ] ]</pre>
<P>
This function is Las Vegas:  it is randomized, but the
randomization only affects the running time, not the correctness
of the output.
<A NAME="SECT004"><h2>65.4 IsFiniteDeterministic for integer matrix groups</h2></a>
<P><P><P>
<code>IsFiniteDeterministic( <var>G</var> )</code>
<P>
The integer matrix group <var>G</var> is tested for finiteness,
using a deterministic algorithm.  In most cases, this
seems to be less efficient than the Las Vegas IsFinite.
However, the number of arithmetic steps of this algorithm
does not depend on the size of the entries of <var>G</var>, which
is not true of the Las Vegas version.
<P>
If <var>G</var> is finite, then a <var>G</var>-invariant positive definite 
quadratic form is stored in <var>G</var>.quadraticForm.
<P>
<pre>gap> a := [[1,1],[0,-1]];
[ [ 1, 1 ], [ 0, -1 ] ]
gap> G := Group(a);;
gap> IsFiniteDeterministic(G);
true
gap> B := G.quadraticForm;;
gap> B;
[ [ 1, 1/2 ], [ 1/2, 3/2 ] ]
gap> TransposedMat(a)*B*a;
[ [ 1, 1/2 ], [ 1/2, 3/2 ] ]</pre>
<P><P>
See also (<a href="chap065.htm#SECT002">IsFinite for rational matrix groups</a>). 
<a href ="chap064.htm">Previous</a> <a href = "index.htm">Up</a> <a href ="chap066.htm">Next</a><BR><a href = "theindex.htm">Index</a>
<P>
<address>gap3-jm<br>11 Mar 2019</address></body></html>